(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [4612],
  {
    223: function (e) {
      var t, n, a, i, s, u, p, o, y, d, m, r, l, c, f, _, b, g, v, w, h, x;
      (t = 'millisecond'),
        (n = 'second'),
        (a = 'minute'),
        (i = 'hour'),
        (s = 'week'),
        (u = 'month'),
        (p = 'quarter'),
        (o = 'year'),
        (y = 'date'),
        (d = 'Invalid Date'),
        (m =
          /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/),
        (r = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g),
        (l = function (e, t, n) {
          var a = String(e);
          return !a || a.length >= t ? e : '' + Array(t + 1 - a.length).join(n) + e;
        }),
        ((f = {})[(c = 'en')] = {
          name: 'en',
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          months:
            'January_February_March_April_May_June_July_August_September_October_November_December'.split(
              '_'
            ),
          ordinal: function (e) {
            var t = ['th', 'st', 'nd', 'rd'],
              n = e % 100;
            return '[' + e + (t[(n - 20) % 10] || t[n] || 'th') + ']';
          },
        }),
        (_ = '$isDayjsObject'),
        (b = function (e) {
          return e instanceof h || !(!e || !e[_]);
        }),
        (g = function e(t, n, a) {
          var i;
          if (!t) return c;
          if ('string' == typeof t) {
            var s = t.toLowerCase();
            f[s] && (i = s), n && ((f[s] = n), (i = s));
            var u = t.split('-');
            if (!i && u.length > 1) return e(u[0]);
          } else {
            var p = t.name;
            (f[p] = t), (i = p);
          }
          return !a && i && (c = i), i || (!a && c);
        }),
        (v = function (e, t) {
          if (b(e)) return e.clone();
          var n = 'object' == typeof t ? t : {};
          return (n.date = e), (n.args = arguments), new h(n);
        }),
        ((w = {
          s: l,
          z: function (e) {
            var t = -e.utcOffset(),
              n = Math.abs(t);
            return (t <= 0 ? '+' : '-') + l(Math.floor(n / 60), 2, '0') + ':' + l(n % 60, 2, '0');
          },
          m: function e(t, n) {
            if (t.date() < n.date()) return -e(n, t);
            var a = 12 * (n.year() - t.year()) + (n.month() - t.month()),
              i = t.clone().add(a, u),
              s = n - i < 0,
              p = t.clone().add(a + (s ? -1 : 1), u);
            return +(-(a + (n - i) / (s ? i - p : p - i)) || 0);
          },
          a: function (e) {
            return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
          },
          p: function (e) {
            return (
              { M: u, y: o, w: s, d: 'day', D: y, h: i, m: a, s: n, ms: t, Q: p }[e] ||
              String(e || '')
                .toLowerCase()
                .replace(/s$/, '')
            );
          },
          u: function (e) {
            return void 0 === e;
          },
        }).l = g),
        (w.i = b),
        (w.w = function (e, t) {
          return v(e, { locale: t.$L, utc: t.$u, x: t.$x, $offset: t.$offset });
        }),
        (x = (h = (function () {
          function e(e) {
            (this.$L = g(e.locale, null, !0)),
              this.parse(e),
              (this.$x = this.$x || e.x || {}),
              (this[_] = !0);
          }
          var l = e.prototype;
          return (
            (l.parse = function (e) {
              (this.$d = (function (e) {
                var t = e.date,
                  n = e.utc;
                if (null === t) return new Date(NaN);
                if (w.u(t)) return new Date();
                if (t instanceof Date) return new Date(t);
                if ('string' == typeof t && !/Z$/i.test(t)) {
                  var a = t.match(m);
                  if (a) {
                    var i = a[2] - 1 || 0,
                      s = (a[7] || '0').substring(0, 3);
                    return n
                      ? new Date(Date.UTC(a[1], i, a[3] || 1, a[4] || 0, a[5] || 0, a[6] || 0, s))
                      : new Date(a[1], i, a[3] || 1, a[4] || 0, a[5] || 0, a[6] || 0, s);
                  }
                }
                return new Date(t);
              })(e)),
                this.init();
            }),
            (l.init = function () {
              var e = this.$d;
              (this.$y = e.getFullYear()),
                (this.$M = e.getMonth()),
                (this.$D = e.getDate()),
                (this.$W = e.getDay()),
                (this.$H = e.getHours()),
                (this.$m = e.getMinutes()),
                (this.$s = e.getSeconds()),
                (this.$ms = e.getMilliseconds());
            }),
            (l.$utils = function () {
              return w;
            }),
            (l.isValid = function () {
              return this.$d.toString() !== d;
            }),
            (l.isSame = function (e, t) {
              var n = v(e);
              return this.startOf(t) <= n && n <= this.endOf(t);
            }),
            (l.isAfter = function (e, t) {
              return v(e) < this.startOf(t);
            }),
            (l.isBefore = function (e, t) {
              return this.endOf(t) < v(e);
            }),
            (l.$g = function (e, t, n) {
              return w.u(e) ? this[t] : this.set(n, e);
            }),
            (l.unix = function () {
              return Math.floor(this.valueOf() / 1e3);
            }),
            (l.valueOf = function () {
              return this.$d.getTime();
            }),
            (l.startOf = function (e, t) {
              var p = this,
                d = !!w.u(t) || t,
                m = w.p(e),
                r = function (e, t) {
                  var n = w.w(p.$u ? Date.UTC(p.$y, t, e) : new Date(p.$y, t, e), p);
                  return d ? n : n.endOf('day');
                },
                l = function (e, t) {
                  return w.w(
                    p
                      .toDate()
                      [e].apply(p.toDate('s'), (d ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(t)),
                    p
                  );
                },
                c = this.$W,
                f = this.$M,
                _ = this.$D,
                b = 'set' + (this.$u ? 'UTC' : '');
              switch (m) {
                case o:
                  return d ? r(1, 0) : r(31, 11);
                case u:
                  return d ? r(1, f) : r(0, f + 1);
                case s:
                  var g = this.$locale().weekStart || 0,
                    v = (c < g ? c + 7 : c) - g;
                  return r(d ? _ - v : _ + (6 - v), f);
                case 'day':
                case y:
                  return l(b + 'Hours', 0);
                case i:
                  return l(b + 'Minutes', 1);
                case a:
                  return l(b + 'Seconds', 2);
                case n:
                  return l(b + 'Milliseconds', 3);
                default:
                  return this.clone();
              }
            }),
            (l.endOf = function (e) {
              return this.startOf(e, !1);
            }),
            (l.$set = function (e, s) {
              var p,
                d = w.p(e),
                m = 'set' + (this.$u ? 'UTC' : ''),
                r = (((p = {}).day = m + 'Date'),
                (p[y] = m + 'Date'),
                (p[u] = m + 'Month'),
                (p[o] = m + 'FullYear'),
                (p[i] = m + 'Hours'),
                (p[a] = m + 'Minutes'),
                (p[n] = m + 'Seconds'),
                (p[t] = m + 'Milliseconds'),
                p)[d],
                l = 'day' === d ? this.$D + (s - this.$W) : s;
              if (d === u || d === o) {
                var c = this.clone().set(y, 1);
                c.$d[r](l), c.init(), (this.$d = c.set(y, Math.min(this.$D, c.daysInMonth())).$d);
              } else r && this.$d[r](l);
              return this.init(), this;
            }),
            (l.set = function (e, t) {
              return this.clone().$set(e, t);
            }),
            (l.get = function (e) {
              return this[w.p(e)]();
            }),
            (l.add = function (e, t) {
              var p,
                y = this;
              e = Number(e);
              var d = w.p(t),
                m = function (t) {
                  var n = v(y);
                  return w.w(n.date(n.date() + Math.round(t * e)), y);
                };
              if (d === u) return this.set(u, this.$M + e);
              if (d === o) return this.set(o, this.$y + e);
              if ('day' === d) return m(1);
              if (d === s) return m(7);
              var r = (((p = {})[a] = 6e4), (p[i] = 36e5), (p[n] = 1e3), p)[d] || 1,
                l = this.$d.getTime() + e * r;
              return w.w(l, this);
            }),
            (l.subtract = function (e, t) {
              return this.add(-1 * e, t);
            }),
            (l.format = function (e) {
              var t = this,
                n = this.$locale();
              if (!this.isValid()) return n.invalidDate || d;
              var a = e || 'YYYY-MM-DDTHH:mm:ssZ',
                i = w.z(this),
                s = this.$H,
                u = this.$m,
                p = this.$M,
                o = n.weekdays,
                y = n.months,
                m = n.meridiem,
                l = function (e, n, i, s) {
                  return (e && (e[n] || e(t, a))) || i[n].slice(0, s);
                },
                c = function (e) {
                  return w.s(s % 12 || 12, e, '0');
                },
                f =
                  m ||
                  function (e, t, n) {
                    var a = e < 12 ? 'AM' : 'PM';
                    return n ? a.toLowerCase() : a;
                  };
              return a.replace(r, function (e, a) {
                return (
                  a ||
                  (function (e) {
                    switch (e) {
                      case 'YY':
                        return String(t.$y).slice(-2);
                      case 'YYYY':
                        return w.s(t.$y, 4, '0');
                      case 'M':
                        return p + 1;
                      case 'MM':
                        return w.s(p + 1, 2, '0');
                      case 'MMM':
                        return l(n.monthsShort, p, y, 3);
                      case 'MMMM':
                        return l(y, p);
                      case 'D':
                        return t.$D;
                      case 'DD':
                        return w.s(t.$D, 2, '0');
                      case 'd':
                        return String(t.$W);
                      case 'dd':
                        return l(n.weekdaysMin, t.$W, o, 2);
                      case 'ddd':
                        return l(n.weekdaysShort, t.$W, o, 3);
                      case 'dddd':
                        return o[t.$W];
                      case 'H':
                        return String(s);
                      case 'HH':
                        return w.s(s, 2, '0');
                      case 'h':
                        return c(1);
                      case 'hh':
                        return c(2);
                      case 'a':
                        return f(s, u, !0);
                      case 'A':
                        return f(s, u, !1);
                      case 'm':
                        return String(u);
                      case 'mm':
                        return w.s(u, 2, '0');
                      case 's':
                        return String(t.$s);
                      case 'ss':
                        return w.s(t.$s, 2, '0');
                      case 'SSS':
                        return w.s(t.$ms, 3, '0');
                      case 'Z':
                        return i;
                    }
                    return null;
                  })(e) ||
                  i.replace(':', '')
                );
              });
            }),
            (l.utcOffset = function () {
              return -(15 * Math.round(this.$d.getTimezoneOffset() / 15));
            }),
            (l.diff = function (e, t, y) {
              var d,
                m = this,
                r = w.p(t),
                l = v(e),
                c = (l.utcOffset() - this.utcOffset()) * 6e4,
                f = this - l,
                _ = function () {
                  return w.m(m, l);
                };
              switch (r) {
                case o:
                  d = _() / 12;
                  break;
                case u:
                  d = _();
                  break;
                case p:
                  d = _() / 3;
                  break;
                case s:
                  d = (f - c) / 6048e5;
                  break;
                case 'day':
                  d = (f - c) / 864e5;
                  break;
                case i:
                  d = f / 36e5;
                  break;
                case a:
                  d = f / 6e4;
                  break;
                case n:
                  d = f / 1e3;
                  break;
                default:
                  d = f;
              }
              return y ? d : w.a(d);
            }),
            (l.daysInMonth = function () {
              return this.endOf(u).$D;
            }),
            (l.$locale = function () {
              return f[this.$L];
            }),
            (l.locale = function (e, t) {
              if (!e) return this.$L;
              var n = this.clone(),
                a = g(e, t, !0);
              return a && (n.$L = a), n;
            }),
            (l.clone = function () {
              return w.w(this.$d, this);
            }),
            (l.toDate = function () {
              return new Date(this.valueOf());
            }),
            (l.toJSON = function () {
              return this.isValid() ? this.toISOString() : null;
            }),
            (l.toISOString = function () {
              return this.$d.toISOString();
            }),
            (l.toString = function () {
              return this.$d.toUTCString();
            }),
            e
          );
        })()).prototype),
        (v.prototype = x),
        [
          ['$ms', t],
          ['$s', n],
          ['$m', a],
          ['$H', i],
          ['$W', 'day'],
          ['$M', u],
          ['$y', o],
          ['$D', y],
        ].forEach(function (e) {
          x[e[1]] = function (t) {
            return this.$g(t, e[0], e[1]);
          };
        }),
        (v.extend = function (e, t) {
          return e.$i || (e(t, h, v), (e.$i = !0)), v;
        }),
        (v.locale = g),
        (v.isDayjs = b),
        (v.unix = function (e) {
          return v(1e3 * e);
        }),
        (v.en = f[c]),
        (v.Ls = f),
        (v.p = {}),
        (e.exports = v);
    },
    5074: function (e) {
      var t, n, a;
      (t = 'minute'),
        (n = /[+-]\d\d(?::?\d\d)?/g),
        (a = /([+-]|\d\d)/g),
        (e.exports = function (e, i, s) {
          var u = i.prototype;
          (s.utc = function (e) {
            var t = { date: e, utc: !0, args: arguments };
            return new i(t);
          }),
            (u.utc = function (e) {
              var n = s(this.toDate(), { locale: this.$L, utc: !0 });
              return e ? n.add(this.utcOffset(), t) : n;
            }),
            (u.local = function () {
              return s(this.toDate(), { locale: this.$L, utc: !1 });
            });
          var p = u.parse;
          u.parse = function (e) {
            e.utc && (this.$u = !0),
              this.$utils().u(e.$offset) || (this.$offset = e.$offset),
              p.call(this, e);
          };
          var o = u.init;
          u.init = function () {
            if (this.$u) {
              var e = this.$d;
              (this.$y = e.getUTCFullYear()),
                (this.$M = e.getUTCMonth()),
                (this.$D = e.getUTCDate()),
                (this.$W = e.getUTCDay()),
                (this.$H = e.getUTCHours()),
                (this.$m = e.getUTCMinutes()),
                (this.$s = e.getUTCSeconds()),
                (this.$ms = e.getUTCMilliseconds());
            } else o.call(this);
          };
          var y = u.utcOffset;
          u.utcOffset = function (e, i) {
            var s = this.$utils().u;
            if (s(e)) return this.$u ? 0 : s(this.$offset) ? y.call(this) : this.$offset;
            if (
              'string' == typeof e &&
              null ===
                (e = (function (e) {
                  void 0 === e && (e = '');
                  var t = e.match(n);
                  if (!t) return null;
                  var i = ('' + t[0]).match(a) || ['-', 0, 0],
                    s = i[0],
                    u = 60 * +i[1] + +i[2];
                  return 0 === u ? 0 : '+' === s ? u : -u;
                })(e))
            )
              return this;
            var u = 16 >= Math.abs(e) ? 60 * e : e,
              p = this;
            if (i) return (p.$offset = u), (p.$u = 0 === e), p;
            if (0 !== e) {
              var o = this.$u ? this.toDate().getTimezoneOffset() : -1 * this.utcOffset();
              ((p = this.local().add(u + o, t)).$offset = u), (p.$x.$localOffset = o);
            } else p = this.utc();
            return p;
          };
          var d = u.format;
          (u.format = function (e) {
            var t = e || (this.$u ? 'YYYY-MM-DDTHH:mm:ss[Z]' : '');
            return d.call(this, t);
          }),
            (u.valueOf = function () {
              var e = this.$utils().u(this.$offset)
                ? 0
                : this.$offset + (this.$x.$localOffset || this.$d.getTimezoneOffset());
              return this.$d.valueOf() - 6e4 * e;
            }),
            (u.isUTC = function () {
              return !!this.$u;
            }),
            (u.toISOString = function () {
              return this.toDate().toISOString();
            }),
            (u.toString = function () {
              return this.toDate().toUTCString();
            });
          var m = u.toDate;
          u.toDate = function (e) {
            return 's' === e && this.$offset
              ? s(this.format('YYYY-MM-DD HH:mm:ss:SSS')).toDate()
              : m.call(this);
          };
          var r = u.diff;
          u.diff = function (e, t, n) {
            if (e && this.$u === e.$u) return r.call(this, e, t, n);
            var a = this.local(),
              i = s(e).local();
            return r.call(a, i, t, n);
          };
        });
    },
    32263: function (e) {
      e.exports = function (e, t) {
        t.prototype.isLeapYear = function () {
          return (this.$y % 4 == 0 && this.$y % 100 != 0) || this.$y % 400 == 0;
        };
      };
    },
    39669: function (e) {
      var t, n, a, i, s, u, p, o, y, d, m, r, l;
      (t = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
      }),
        (n =
          /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|Q|YYYY|YY?|ww?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g),
        (a = /\d/),
        (i = /\d\d/),
        (s = /\d\d?/),
        (u = /\d*[^-_:/,()\s\d]+/),
        (p = {}),
        (o = function (e) {
          return (e *= 1) + (e > 68 ? 1900 : 2e3);
        }),
        (y = function (e) {
          return function (t) {
            this[e] = +t;
          };
        }),
        (d = [
          /[+-]\d\d:?(\d\d)?|Z/,
          function (e) {
            (this.zone || (this.zone = {})).offset = (function (e) {
              if (!e || 'Z' === e) return 0;
              var t = e.match(/([+-]|\d\d)/g),
                n = 60 * t[1] + (+t[2] || 0);
              return 0 === n ? 0 : '+' === t[0] ? -n : n;
            })(e);
          },
        ]),
        (m = function (e) {
          var t = p[e];
          return t && (t.indexOf ? t : t.s.concat(t.f));
        }),
        (r = function (e, t) {
          var n,
            a = p.meridiem;
          if (a) {
            for (var i = 1; i <= 24; i += 1)
              if (e.indexOf(a(i, 0, t)) > -1) {
                n = i > 12;
                break;
              }
          } else n = e === (t ? 'pm' : 'PM');
          return n;
        }),
        (l = {
          A: [
            u,
            function (e) {
              this.afternoon = r(e, !1);
            },
          ],
          a: [
            u,
            function (e) {
              this.afternoon = r(e, !0);
            },
          ],
          Q: [
            a,
            function (e) {
              this.month = 3 * (e - 1) + 1;
            },
          ],
          S: [
            a,
            function (e) {
              this.milliseconds = 100 * +e;
            },
          ],
          SS: [
            i,
            function (e) {
              this.milliseconds = 10 * +e;
            },
          ],
          SSS: [
            /\d{3}/,
            function (e) {
              this.milliseconds = +e;
            },
          ],
          s: [s, y('seconds')],
          ss: [s, y('seconds')],
          m: [s, y('minutes')],
          mm: [s, y('minutes')],
          H: [s, y('hours')],
          h: [s, y('hours')],
          HH: [s, y('hours')],
          hh: [s, y('hours')],
          D: [s, y('day')],
          DD: [i, y('day')],
          Do: [
            u,
            function (e) {
              var t = p.ordinal,
                n = e.match(/\d+/);
              if (((this.day = n[0]), t))
                for (var a = 1; a <= 31; a += 1) t(a).replace(/\[|\]/g, '') === e && (this.day = a);
            },
          ],
          w: [s, y('week')],
          ww: [i, y('week')],
          M: [s, y('month')],
          MM: [i, y('month')],
          MMM: [
            u,
            function (e) {
              var t = m('months'),
                n =
                  (
                    m('monthsShort') ||
                    t.map(function (e) {
                      return e.slice(0, 3);
                    })
                  ).indexOf(e) + 1;
              if (n < 1) throw Error();
              this.month = n % 12 || n;
            },
          ],
          MMMM: [
            u,
            function (e) {
              var t = m('months').indexOf(e) + 1;
              if (t < 1) throw Error();
              this.month = t % 12 || t;
            },
          ],
          Y: [/[+-]?\d+/, y('year')],
          YY: [
            i,
            function (e) {
              this.year = o(e);
            },
          ],
          YYYY: [/\d{4}/, y('year')],
          Z: d,
          ZZ: d,
        }),
        (e.exports = function (e, a, i) {
          (i.p.customParseFormat = !0), e && e.parseTwoDigitYear && (o = e.parseTwoDigitYear);
          var s = a.prototype,
            u = s.parse;
          s.parse = function (e) {
            var a = e.date,
              s = e.utc,
              o = e.args;
            this.$u = s;
            var y = o[1];
            if ('string' == typeof y) {
              var d = !0 === o[2],
                m = !0 === o[3],
                r = o[2];
              m && (r = o[2]),
                (p = this.$locale()),
                !d && r && (p = i.Ls[r]),
                (this.$d = (function (e, a, i, s) {
                  try {
                    if (['x', 'X'].indexOf(a) > -1) return new Date(('X' === a ? 1e3 : 1) * e);
                    var u = (function (e) {
                        var a, i;
                        (a = e), (i = p && p.formats);
                        for (
                          var s = (e = a.replace(
                              /(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,
                              function (e, n, a) {
                                var s = a && a.toUpperCase();
                                return (
                                  n ||
                                  i[a] ||
                                  t[a] ||
                                  i[s].replace(
                                    /(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,
                                    function (e, t, n) {
                                      return t || n.slice(1);
                                    }
                                  )
                                );
                              }
                            )).match(n),
                            u = s.length,
                            o = 0;
                          o < u;
                          o += 1
                        ) {
                          var y = s[o],
                            d = l[y],
                            m = d && d[0],
                            r = d && d[1];
                          s[o] = r ? { regex: m, parser: r } : y.replace(/^\[|\]$/g, '');
                        }
                        return function (e) {
                          for (var t = {}, n = 0, a = 0; n < u; n += 1) {
                            var i = s[n];
                            if ('string' == typeof i) a += i.length;
                            else {
                              var p = i.regex,
                                o = i.parser,
                                y = e.slice(a),
                                d = p.exec(y)[0];
                              o.call(t, d), (e = e.replace(d, ''));
                            }
                          }
                          return (
                            (function (e) {
                              var t = e.afternoon;
                              if (void 0 !== t) {
                                var n = e.hours;
                                t ? n < 12 && (e.hours += 12) : 12 === n && (e.hours = 0),
                                  delete e.afternoon;
                              }
                            })(t),
                            t
                          );
                        };
                      })(a)(e),
                      o = u.year,
                      y = u.month,
                      d = u.day,
                      m = u.hours,
                      r = u.minutes,
                      c = u.seconds,
                      f = u.milliseconds,
                      _ = u.zone,
                      b = u.week,
                      g = new Date(),
                      v = d || (o || y ? 1 : g.getDate()),
                      w = o || g.getFullYear(),
                      h = 0;
                    (o && !y) || (h = y > 0 ? y - 1 : g.getMonth());
                    var x,
                      M = m || 0,
                      A = r || 0,
                      E = c || 0,
                      C = f || 0;
                    return _
                      ? new Date(Date.UTC(w, h, v, M, A, E, C + 60 * _.offset * 1e3))
                      : i
                        ? new Date(Date.UTC(w, h, v, M, A, E, C))
                        : ((x = new Date(w, h, v, M, A, E, C)),
                          b && (x = s(x).week(b).toDate()),
                          x);
                  } catch (e) {
                    return new Date('');
                  }
                })(a, y, s, i)),
                this.init(),
                r && !0 !== r && (this.$L = this.locale(r).$L),
                (d || m) && a != this.format(y) && (this.$d = new Date('')),
                (p = {});
            } else if (y instanceof Array)
              for (var c = y.length, f = 1; f <= c; f += 1) {
                o[1] = y[f - 1];
                var _ = i.apply(this, o);
                if (_.isValid()) {
                  (this.$d = _.$d), (this.$L = _.$L), this.init();
                  break;
                }
                f === c && (this.$d = new Date(''));
              }
            else u.call(this, e);
          };
        });
    },
    56354: function (e) {
      var t;
      (t = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
      }),
        (e.exports = function (e, n, a) {
          var i = n.prototype,
            s = i.format;
          (a.en.formats = t),
            (i.format = function (e) {
              void 0 === e && (e = 'YYYY-MM-DDTHH:mm:ssZ');
              var n,
                a,
                i = this.$locale().formats,
                u =
                  ((n = e),
                  (a = void 0 === i ? {} : i),
                  n.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function (e, n, i) {
                    var s = i && i.toUpperCase();
                    return (
                      n ||
                      a[i] ||
                      t[i] ||
                      a[s].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function (e, t, n) {
                        return t || n.slice(1);
                      })
                    );
                  }));
              return s.call(this, u);
            });
        });
    },
    91176: (e, t, n) => {
      'use strict';
      n.d(t, { s: () => rJ, A: () => rH });
      var a = n(7806),
        i = function (e, t, n, a) {
          return new (n || (n = Promise))(function (i, s) {
            function u(e) {
              try {
                o(a.next(e));
              } catch (e) {
                s(e);
              }
            }
            function p(e) {
              try {
                o(a.throw(e));
              } catch (e) {
                s(e);
              }
            }
            function o(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof n
                    ? t
                    : new n(function (e) {
                        e(t);
                      })
                  ).then(u, p);
            }
            o((a = a.apply(e, t || [])).next());
          });
        };
      let s = (e, t, n) =>
          i(void 0, void 0, void 0, function* () {
            var a;
            let i = `${n ? 'https://api-core.curve.finance/v1/' : 'https://api.curve.finance/api'}/getPools/${e}/${t}`;
            return null !== (a = yield x(i)) && void 0 !== a
              ? a
              : { poolData: [], tvl: 0, tvlAll: 0 };
          }),
        u = (e) =>
          e
            ? ['factory-twocrypto', 'factory-tricrypto', 'factory-stable-ng']
            : [
                'main',
                'crypto',
                'factory',
                'factory-crvusd',
                'factory-eywa',
                'factory-crypto',
                'factory-twocrypto',
                'factory-tricrypto',
                'factory-stable-ng',
              ],
        p = (e, t) =>
          i(void 0, void 0, void 0, function* () {
            return Object.fromEntries(
              yield Promise.all(
                u(t).map((n) =>
                  i(void 0, void 0, void 0, function* () {
                    let a = yield s(e, n, t);
                    return [n, a];
                  })
                )
              )
            );
          }),
        o = (e) => {
          var t, n;
          let a = {},
            i = {};
          for (let i of e)
            for (let e of i.poolData) {
              let i = null !== (t = e.lpTokenAddress) && void 0 !== t ? t : e.address,
                s = e.totalSupply / 1e18;
              for (let t of (i.toLowerCase() in a || (a[i.toLowerCase()] = []),
              a[i.toLowerCase()].push({
                price: e.usdTotal && s ? e.usdTotal / s : 0,
                tvl: e.usdTotal,
              }),
              e.coins))
                'number' == typeof t.usdPrice &&
                  (t.address.toLowerCase() in a || (a[t.address.toLowerCase()] = []),
                  a[t.address.toLowerCase()].push({ price: t.usdPrice, tvl: e.usdTotal }));
              for (let t of null !== (n = e.gaugeRewards) && void 0 !== n ? n : [])
                'number' == typeof t.tokenPrice &&
                  (t.tokenAddress.toLowerCase() in a || (a[t.tokenAddress.toLowerCase()] = []),
                  a[t.tokenAddress.toLowerCase()].push({ price: t.tokenPrice, tvl: e.usdTotal }));
            }
          for (let e in a)
            if (a[e].length) {
              let t = a[e].reduce((e, t) => (+t.tvl > +e.tvl ? t : e));
              i[e] = t.price;
            } else i[e] = 0;
          return i;
        },
        y = (e) => {
          var t, n;
          let a = {};
          for (let i of e)
            for (let e of i.poolData)
              e.gaugeAddress &&
                (e.gaugeCrvApy
                  ? (a[e.gaugeAddress.toLowerCase()] = [
                      null !== (t = e.gaugeCrvApy[0]) && void 0 !== t ? t : 0,
                      null !== (n = e.gaugeCrvApy[1]) && void 0 !== n ? n : 0,
                    ])
                  : (a[e.gaugeAddress.toLowerCase()] = [0, 0]));
          return a;
        },
        d = a(
          (e) =>
            i(void 0, void 0, void 0, function* () {
              var t, n, a;
              let i = yield x(`https://api.curve.finance/api/getSubgraphData/${e}`);
              return {
                poolsData: i.poolList.map((e) => ({
                  address: e.address,
                  volumeUSD: e.volumeUSD,
                  day: e.latestDailyApy,
                  week: e.latestWeeklyApy,
                })),
                totalVolume: null !== (t = i.totalVolume) && void 0 !== t ? t : 0,
                cryptoVolume: null !== (n = i.cryptoVolume) && void 0 !== n ? n : 0,
                cryptoShare: null !== (a = i.cryptoShare) && void 0 !== a ? a : 0,
              };
            }),
          { promise: !0, maxAge: 3e5 }
        ),
        m = a(
          (e) =>
            i(void 0, void 0, void 0, function* () {
              var t, n, a;
              let { pools: i, totalVolumes: s } = yield x(
                  `https://api.curve.finance/api/getVolumes/${e}`
                ),
                u = i.map((e) => ({
                  address: e.address,
                  volumeUSD: e.volumeUSD,
                  day: e.latestDailyApyPcent,
                  week: e.latestWeeklyApyPcent,
                }));
              return {
                poolsData: null != u ? u : [],
                totalVolume: null !== (t = s.totalVolume) && void 0 !== t ? t : 0,
                cryptoVolume: null !== (n = s.totalCryptoVolume) && void 0 !== n ? n : 0,
                cryptoShare: null !== (a = s.cryptoVolumeSharePcent) && void 0 !== a ? a : 0,
              };
            }),
          { promise: !0, maxAge: 3e5 }
        ),
        r = a(
          (e) =>
            i(void 0, void 0, void 0, function* () {
              let [t, n] = yield Promise.all(
                  ['stable', 'crypto'].map((t) =>
                    x(`https://api.curve.finance/api/getFactoryAPYs/${e}/${t}`)
                  )
                ),
                a = t.totalVolumeUsd || t.totalVolume || 0,
                i = n.totalVolumeUsd || n.totalVolume || 0;
              return {
                poolsData: [...t.poolDetails, ...n.poolDetails].map((e) => {
                  var t, n, a;
                  return {
                    address: e.poolAddress,
                    volumeUSD: null !== (t = e.totalVolumeUsd) && void 0 !== t ? t : 0,
                    day: null !== (n = e.apy) && void 0 !== n ? n : 0,
                    week: (null !== (a = e.apy) && void 0 !== a ? a : 0) * 7,
                  };
                }),
                totalVolume: a + i,
                cryptoVolume: i,
                cryptoShare: (100 * i) / (a + i),
              };
            }),
          { promise: !0, maxAge: 3e5 }
        ),
        l = a(() => x('https://api.curve.finance/api/getAllGauges'), { promise: !0, maxAge: 3e5 }),
        c = a(
          () =>
            i(void 0, void 0, void 0, function* () {
              let e = yield x('https://api.curve.finance/api/getAllGauges'),
                t = {};
              return (
                Object.values(e).forEach((e) => {
                  var n, a;
                  t[e.gauge.toLowerCase()] = {
                    is_killed: null !== (n = e.is_killed) && void 0 !== n && n,
                    gaugeStatus: null !== (a = e.gaugeStatus) && void 0 !== a ? a : null,
                  };
                }),
                t
              );
            }),
          { promise: !0, maxAge: 36e5 }
        ),
        f = a(() => x('https://api.curve.finance/api/getHiddenPools'), {
          promise: !0,
          maxAge: 3e5,
        }),
        _ = a(
          (e, t) =>
            i(void 0, void 0, void 0, function* () {
              let n = `https://prices.curve.finance/v1/general/get_merkle_proof?block=${e}&account_address=${t}`,
                { block_header_rlp: a, proof_rlp: i } = yield h(n);
              return { block_header_rlp: a, proof_rlp: i };
            }),
          { promise: !0, maxAge: 3e5 }
        ),
        b = a(
          () =>
            i(void 0, void 0, void 0, function* () {
              let { proposals: e } = yield h(
                'https://api-py.llama.airforce/curve/v1/dao/proposals'
              );
              return e;
            }),
          { promise: !0, maxAge: 3e5 }
        ),
        g = a(
          (e, t) =>
            h(`https://api-py.llama.airforce/curve/v1/dao/proposals/${e.toLowerCase()}/${t}`),
          { promise: !0, maxAge: 3e5 }
        ),
        v = a(
          (e) =>
            i(void 0, void 0, void 0, function* () {
              var t, n;
              try {
                let a = `https://api-core.curve.finance/v1/getDeployment/${e}`,
                  i = yield fetch(a),
                  { data: s } = null !== (t = yield i.json()) && void 0 !== t ? t : {};
                if (200 !== i.status || !s)
                  return console.error('Failed to fetch network data:', i.status, s), null;
                let { config: u, contracts: p } = s,
                  o = u.network_name || 'Unknown Network',
                  y = u.native_currency_symbol || 'N/A',
                  d =
                    (null === (n = u.wrapped_native_token) || void 0 === n
                      ? void 0
                      : n.toLowerCase()) || '';
                return {
                  NAME: o,
                  ALIASES: {
                    stable_ng_factory: p.amm.stableswap.factory.address.toLowerCase(),
                    twocrypto_factory: p.amm.twocryptoswap.factory.address.toLowerCase(),
                    tricrypto_factory: p.amm.tricryptoswap.factory.address.toLowerCase(),
                    child_gauge_factory: p.gauge.child_gauge.factory.address.toLowerCase(),
                    root_gauge_factory: p.gauge.child_gauge.factory.address.toLowerCase(),
                    router: p.helpers.router.address.toLowerCase(),
                    deposit_and_stake: p.helpers.deposit_and_stake_zap.address.toLowerCase(),
                    stable_ng_meta_zap: p.helpers.stable_swap_meta_zap.address.toLowerCase(),
                    crv: u.dao.crv
                      ? u.dao.crv.toLowerCase()
                      : '0x0000000000000000000000000000000000000000',
                  },
                  NATIVE_COIN: {
                    symbol: y,
                    address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
                    wrappedSymbol: y[0].toLowerCase() === y[0] ? `w${y}` : `W${y}`,
                    wrappedAddress: d,
                  },
                  API_CONSTANTS: {
                    nativeTokenName: u.native_currency_coingecko_id,
                    wrappedNativeTokenAddress: u.wrapped_native_token,
                  },
                };
              } catch (e) {
                return console.error('Error fetching network data:', e), null;
              }
            }),
          { promise: !0, maxAge: 3e5 }
        ),
        w = a(
          () =>
            i(void 0, void 0, void 0, function* () {
              var e;
              let t = yield fetch('https://api-core.curve.finance/v1/getPlatforms'),
                { data: n } = null !== (e = yield t.json()) && void 0 !== e ? e : {};
              if (200 !== t.status || !(null == n ? void 0 : n.platforms))
                return console.error('Failed to fetch Curve platforms:', t), [];
              let { platforms: a, platformsMetadata: i } = n;
              return Object.keys(a)
                .map((e) => {
                  var t;
                  let {
                    name: n,
                    rpcUrl: a,
                    nativeCurrencySymbol: s,
                    explorerBaseUrl: u,
                    isMainnet: p,
                    chainId: o,
                  } = null !== (t = i[e]) && void 0 !== t ? t : {};
                  return (
                    n && {
                      id: e,
                      name: n,
                      rpcUrl: a,
                      chainId: o,
                      explorerUrl: u,
                      nativeCurrencySymbol: s,
                      isTestnet: !p,
                    }
                  );
                })
                .filter(Boolean);
            }),
          { promise: !0, maxAge: 3e5 }
        );
      function h(e) {
        return i(this, void 0, void 0, function* () {
          var t;
          let n = yield fetch(e);
          return null !== (t = yield n.json()) && void 0 !== t ? t : {};
        });
      }
      function x(e) {
        return i(this, void 0, void 0, function* () {
          let { data: t } = yield h(e);
          return t;
        });
      }
      var M = n(54982),
        A = n(62011);
      class E {
        #e;
        #t;
        constructor(e, t) {
          for (let n of ((this.#e = e),
          (this.#t = t.filter((e) => 'function' === e.type)),
          this.#t.filter((e) => 'pure' === e.stateMutability || 'view' === e.stateMutability))) {
            let e = n.name;
            if (!e) continue;
            let t = this.#n(e);
            this[e] || Object.defineProperty(this, e, { enumerable: !0, value: t, writable: !1 });
          }
        }
        #n(e) {
          return (...t) => {
            let n = this.#e,
              a = this.#t.find((t) => t.name === e);
            return {
              contract: { address: n },
              name: e,
              inputs: a?.inputs || [],
              outputs: a?.outputs || [],
              params: t,
            };
          };
        }
      }
      var C = n(84387);
      let k = JSON.parse(
          '[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct DeploylessMulticall.Call[]","name":"calls","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"}]'
        ),
        D = JSON.parse(
          '[{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct DeploylessMulticall2.Call[]","name":"calls","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"}]'
        ),
        T = JSON.parse(
          '[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct DeploylessMulticall3.Call[]","name":"calls","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"}]'
        ),
        S = JSON.parse(
          '[{"constant":true,"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}]'
        ),
        O = JSON.parse(
          '[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall2.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"tryAggregate","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall2.Result[]","name":"returnData","type":"tuple[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall2.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}]'
        ),
        F = JSON.parse(
          '[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall3.Call3[]","name":"calls","type":"tuple[]"}],"name":"aggregate3","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall3.Call3Value[]","name":"calls","type":"tuple[]"}],"name":"aggregate3Value","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]"}],"name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBasefee","outputs":[{"internalType":"uint256","name":"basefee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint256","name":"chainid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]"}],"name":"tryAggregate","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]"}],"name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}]'
        );
      var B = n(1475),
        R = n(92277),
        I = n(33319),
        L = n(42339),
        N = n(92824);
      class P {
        constructor(e) {
          Object.defineProperty(this, 'abi', {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: void 0,
          }),
            (this.abi = e);
        }
        getFunctionSelector(e) {
          let t = this.getFunctionByName(e),
            n = t?.inputs;
          if (!n) throw Error;
          let a = n.map((e) => B.aX.from(e));
          return q(P.getSignature(e, a)).substring(0, 10);
        }
        getEventTopic(e) {
          let t = this.getEventByName(e),
            n = t?.inputs;
          if (!n) throw Error;
          let a = n.map((e) => B.aX.from(e, !0));
          return q(P.getSignature(e, a));
        }
        decodeConstructor(e) {
          let t = this.getConstructor(),
            n = t?.inputs;
          if (!n) throw Error;
          let a = n.map((e) => B.aX.from(e)),
            i = j(R.y.defaultAbiCoder().decode(a, e), a);
          return { inputs: a, values: i };
        }
        decodeEvent(e, t) {
          let n = this.getEventByTopic(e[0]),
            [, ...a] = e,
            i = n?.inputs;
          if (!i) throw Error;
          let s = i.map((e) => B.aX.from(e, !0)),
            u = s
              .filter((e) => e.indexed)
              .map((e, t) => {
                let n = a[t],
                  [i] = R.y.defaultAbiCoder().decode([e], n);
                return i;
              }),
            p = s.filter((e) => !e.indexed),
            o = R.y.defaultAbiCoder().decode(p, t);
          if (!n.name) throw Error;
          let y = 0,
            d = 0,
            m = new I.Q7();
          for (let e of s) e.indexed ? (m.push(u[y]), y++) : (m.push(o[d]), d++);
          let r = j(m, s);
          return { name: n.name, inputs: s, values: r };
        }
        decodeFunction(e) {
          let t = e.substring(0, 10),
            n = this.getFunctionBySelector(t),
            a = n?.inputs;
          if (!a) throw Error;
          let i = a.map((e) => B.aX.from(e)),
            s = `0x${e.substring(10)}`,
            u = j(R.y.defaultAbiCoder().decode(i, s), i);
          if (!n.name) throw Error;
          return { name: n.name, inputs: i, values: u };
        }
        decodeFunctionOutput(e, t) {
          let n = this.getFunctionByName(e),
            a = n?.outputs;
          if (!a) throw Error;
          let i = a.map((e) => B.aX.from(e)),
            s = j(R.y.defaultAbiCoder().decode(i, t), i);
          return { name: e, outputs: i, values: s };
        }
        encodeConstructor(e) {
          let t = this.getConstructor(),
            n = t?.inputs;
          if (!n) throw Error;
          let a = n.map((e) => B.aX.from(e)),
            i = U(e, a);
          return R.y.defaultAbiCoder().encode(a, i);
        }
        encodeEvent(e, t) {
          let n = this.getEventByName(e),
            a = n?.inputs;
          if (!a) throw Error;
          let i = a.map((e) => B.aX.from(e, !0)),
            s = q(P.getSignature(e, i)),
            u = new I.Q7(),
            p = [];
          for (let e = 0; e < i.length; e++) {
            let n = i[e],
              a = t[n.name];
            n.indexed ? u.push(a) : p.push(a);
          }
          let o = [
              s,
              ...i
                .filter((e) => e.indexed)
                .map((e, t) => R.y.defaultAbiCoder().encode([e], [u[t]])),
            ],
            y = i.filter((e) => !e.indexed);
          return { topics: o, data: R.y.defaultAbiCoder().encode(y, p) };
        }
        encodeFunction(e, t) {
          let n = this.getFunctionByName(e),
            a = n?.inputs;
          if (!a) throw Error;
          let i = a.map((e) => B.aX.from(e)),
            s = q(P.getSignature(e, i)).substring(2, 10),
            u = U(t, i),
            p = R.y.defaultAbiCoder().encode(i, u).substring(2);
          return `0x${s}${p}`;
        }
        encodeFunctionOutput(e, t) {
          let n = this.getFunctionByName(e).outputs;
          if (!n) throw Error;
          let a = n.map((e) => B.aX.from(e)),
            i = U(t, a);
          return R.y.defaultAbiCoder().encode(a, i);
        }
        getConstructor() {
          let e = this.abi.find((e) => 'constructor' === e.type);
          if (!e) throw Error;
          return e;
        }
        getFunctionByName(e) {
          let t = this.abi.find((t) => 'function' === t.type && t.name === e);
          if (!t) throw Error;
          return t;
        }
        getFunctionBySelector(e) {
          let t = this.abi
            .filter((e) => 'function' === e.type || 'error' === e.type)
            .find((t) => {
              let n = t.name,
                a = t.inputs;
              if (!n || !a) return !1;
              let i = a.map((e) => B.aX.from(e));
              return q(P.getSignature(n, i)).substring(0, 10) === e;
            });
          if (!t) throw Error;
          return t;
        }
        getEventByName(e) {
          let t = this.abi.find((t) => 'event' === t.type && t.name === e);
          if (!t) throw Error;
          return t;
        }
        getEventByTopic(e) {
          let t = this.abi
            .filter((e) => 'event' === e.type)
            .find((t) => {
              let n = t.name,
                a = t.inputs;
              if (!n || !a) return !1;
              let i = a.map((e) => B.aX.from(e, !0));
              return q(P.getSignature(n, i)) === e;
            });
          if (!t) throw Error;
          return t;
        }
        static getSignature(e, t) {
          let n = [];
          for (let e of t) {
            let t = this.getInputSignature(e);
            n.push(t);
          }
          let a = n.join(',');
          return `${e}(${a})`;
        }
        static getInputSignature(e) {
          if ('array' === e.baseType) {
            let t = e.arrayLength && e.arrayLength >= 0 ? `[${e.arrayLength}]` : '[]';
            if (!e.arrayChildren) throw Error;
            return `${this.getInputSignature(e.arrayChildren)}${t}`;
          }
          if ('tuple' === e.baseType) {
            if (!e.components) throw Error;
            return `(${e.components.map((e) => this.getInputSignature(e)).join(',')})`;
          }
          return e.type;
        }
      }
      function q(e) {
        return (0, L.S)((0, N.YW)(e));
      }
      function j(e, t) {
        return Object.fromEntries(e.toArray().map((e, n) => [t[n].name, e]));
      }
      function U(e, t) {
        return t.map((t) => e[t.name]);
      }
      class $ {
        static encode(e, t, n) {
          let { params: a } = G(t),
            i = new P([{ type: 'function', name: e, inputs: a }]),
            s = Object.fromEntries(a.map((e, t) => [e.name, n[t]]));
          return i.encodeFunction(e, s);
        }
        static encodeConstructor(e, t) {
          let { params: n } = G(e),
            a = new P([{ type: 'constructor', inputs: n }]),
            i = Object.fromEntries(n.map((e, n) => [e.name, t[n]]));
          return a.encodeConstructor(i);
        }
        static decode(e, t, n) {
          let { params: a, generated: i } = G(t),
            s = new P([{ type: 'function', name: e, outputs: a }]).decodeFunctionOutput(e, n),
            u = a.map((e) => s.values[e.name || '']);
          for (let [e, t] of Object.entries(s.values)) !i.has(e) && !u[e] && (u[e] = t);
          return u;
        }
      }
      function G(e) {
        let t = new Set(...e.map((e) => e.name)),
          n = new Set();
        return {
          params: e.map((e) => {
            let { name: a, indexed: i, type: s, components: u } = e,
              p =
                a ||
                (function (e) {
                  let t = 0;
                  for (; e.has(t.toString()); ) t++;
                  return `param${Math.random().toString().substring(2)}`;
                })(t);
            return t.add(p), a || n.add(p), { name: p, indexed: i, type: s, components: u };
          }),
          generated: n,
        };
      }
      async function W(e, t, n, a) {
        let i = t ? new A.NZ(t.address, S, e) : null,
          s = n.map((e) => {
            let t = $.encode(e.name, e.inputs, e.params);
            return { target: e.contract.address, callData: t };
          }),
          u = i && i.aggregate ? await i.aggregate(s, a || {}) : await V(e, s, a?.blockTag),
          p = n.length,
          o = [];
        for (let e = 0; e < p; e++) {
          let t = n[e];
          if (!t) throw Error('Unable to access the call');
          let a = t.name,
            i = t.outputs,
            s = u.returnData[e],
            p = $.decode(a, i, s),
            y = 1 === i.length ? p[0] : p;
          o.push(y);
        }
        return o;
      }
      async function Y(e, t, n, a) {
        let i = t ? new A.NZ(t.address, O, e) : null,
          s = n.map((e) => {
            let t = $.encode(e.name, e.inputs, e.params);
            return { target: e.contract.address, callData: t };
          }),
          u =
            i && i.tryAggregate ? await i.tryAggregate(!1, s, a || {}) : await J(e, s, a?.blockTag),
          p = n.length,
          o = [];
        for (let e = 0; e < p; e++) {
          let t = n[e];
          if (!t) throw Error('Unable to access the call');
          let a = t.name,
            i = t.outputs,
            s = u[e];
          if (!s) throw Error('Unable to access the result');
          if (s.success)
            try {
              let e = $.decode(a, i, s.returnData),
                t = 1 === i.length ? e[0] : e;
              o.push(t);
            } catch {
              o.push(null);
            }
          else o.push(null);
        }
        return o;
      }
      async function Z(e, t, n, a) {
        let i = t ? new A.NZ(t.address, F, e) : null,
          s = n.map((e) => {
            let t = $.encode(e.name, e.inputs, e.params);
            return { target: e.contract.address, allowFailure: e.canFail, callData: t };
          }),
          u = i && i.aggregate3 ? await i.aggregate3(s, a || {}) : await H(e, s, a?.blockTag),
          p = n.length,
          o = [];
        for (let e = 0; e < p; e++) {
          let t = n[e];
          if (!t) throw Error('Unable to access the call');
          let a = t.name,
            i = t.outputs,
            s = u[e];
          if (!s) throw Error('Unable to access the result');
          if (s.success)
            try {
              let e = $.decode(a, i, s.returnData),
                t = 1 === i.length ? e[0] : e;
              o.push(t);
            } catch {
              o.push(null);
            }
          else o.push(null);
        }
        return o;
      }
      async function V(e, t, n) {
        let a = k.find((e) => 'constructor' === e.type),
          i = a?.inputs || [],
          s = $.encodeConstructor(i, [t]),
          u = (0, C.xW)([
            '0x608060405234801561001057600080fd5b5060405161075138038061075183398181016040528101906100329190610466565b60004390506000825167ffffffffffffffff811115610054576100536106d6565b5b60405190808252806020026020018201604052801561008757816020015b60608152602001906001900390816100725790505b50905060005b83518110156102715760008073bd770416a3345f91e4b34576cb804a576fa48eb173ffffffffffffffffffffffffffffffffffffffff168684815181106100d7576100d66106a7565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16146101a757858381518110610111576101106106a7565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16868481518110610146576101456106a7565b5b60200260200101516020015160405161015f91906104e0565b6000604051808303816000865af19150503d806000811461019c576040519150601f19603f3d011682016040523d82523d6000602084013e6101a1565b606091505b5061022f565b600073ffffffffffffffffffffffffffffffffffffffff168684815181106101d2576101d16106a7565b5b6020026020010151602001516040516101eb91906104e0565b6000604051808303816000865af19150503d8060008114610228576040519150601f19603f3d011682016040523d82523d6000602084013e61022d565b606091505b505b915091508161023d57600080fd5b80848481518110610251576102506106a7565b5b6020026020010181905250505080806102699061062f565b91505061008d565b508160408203526040602082035260208101602082015b602060018451010283018110156102aa57818151038152602081019050610288565b50604082604051030160408303f35b60006102cc6102c78461051c565b6104f7565b905080838252602082019050828560208602820111156102ef576102ee610714565b5b60005b8581101561033d57815167ffffffffffffffff81111561031557610314610705565b5b80860161032289826103fa565b855260208501945060208401935050506001810190506102f2565b5050509392505050565b600061035a61035584610548565b6104f7565b90508281526020810184848401111561037657610375610719565b5b6103818482856105cb565b509392505050565b60008151905061039881610739565b92915050565b600082601f8301126103b3576103b2610705565b5b81516103c38482602086016102b9565b91505092915050565b600082601f8301126103e1576103e0610705565b5b81516103f1848260208601610347565b91505092915050565b6000604082840312156104105761040f61070a565b5b61041a60406104f7565b9050600061042a84828501610389565b600083015250602082015167ffffffffffffffff81111561044e5761044d61070f565b5b61045a848285016103cc565b60208301525092915050565b60006020828403121561047c5761047b610723565b5b600082015167ffffffffffffffff81111561049a5761049961071e565b5b6104a68482850161039e565b91505092915050565b60006104ba82610579565b6104c48185610584565b93506104d48185602086016105cb565b80840191505092915050565b60006104ec82846104af565b915081905092915050565b6000610501610512565b905061050d82826105fe565b919050565b6000604051905090565b600067ffffffffffffffff821115610537576105366106d6565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610563576105626106d6565b5b61056c82610728565b9050602081019050919050565b600081519050919050565b600081905092915050565b600061059a826105a1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105e95780820151818401526020810190506105ce565b838111156105f8576000848401525b50505050565b61060782610728565b810181811067ffffffffffffffff82111715610626576106256106d6565b5b80604052505050565b600061063a826105c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561066d5761066c610678565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107428161058f565b811461074d57600080fd5b5056fe',
            s,
          ]),
          p = await e.call({ data: u, blockTag: n }),
          o = S.find((e) => 'function' === e.type && 'aggregate' === e.name),
          y = o?.name || '',
          d = o?.outputs || [];
        return $.decode(y, d, p);
      }
      async function J(e, t, n) {
        let a = D.find((e) => 'constructor' === e.type),
          i = a?.inputs || [],
          s = $.encodeConstructor(i, [!1, t]),
          u = (0, C.xW)([
            '0x608060405234801561001057600080fd5b5060405161087538038061087583398181016040528101906100329190610666565b6000815167ffffffffffffffff81111561004f5761004e610358565b5b60405190808252806020026020018201604052801561008857816020015b6100756102da565b81526020019060019003908161006d5790505b50905060005b82518110156101d3576000808483815181106100ad576100ac6106c2565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168584815181106100e2576100e16106c2565b5b6020026020010151602001516040516100fb9190610738565b6000604051808303816000865af19150503d8060008114610138576040519150601f19603f3d011682016040523d82523d6000602084013e61013d565b606091505b509150915085156101895781610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f906107d2565b60405180910390fd5b5b60405180604001604052808315158152602001828152508484815181106101b3576101b26106c2565b5b6020026020010181905250505080806101cb9061082b565b91505061008e565b50602081516040028260405103030160408160405103036001835111156102535760005b8351811015610251578060200260208501018160200260400183018261021f57855160200281525b6000831115610244576020808303510151602083510151038060208303510180835250505b50506001810190506101f7565b505b60005b8351811015610281578060200260208501018051516040602083510151035250600181019050610256565b5060005b83518110156102ae57806020026020850101604060208083510151035250600181019050610285565b506001835114156102cb5760208301604082018451602002815250505b60208152825160208201528181f35b6040518060400160405280600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b61031f8161030a565b811461032a57600080fd5b50565b60008151905061033c81610316565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61039082610347565b810181811067ffffffffffffffff821117156103af576103ae610358565b5b80604052505050565b60006103c26102f6565b90506103ce8282610387565b919050565b600067ffffffffffffffff8211156103ee576103ed610358565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104398261040e565b9050919050565b6104498161042e565b811461045457600080fd5b50565b60008151905061046681610440565b92915050565b600080fd5b600067ffffffffffffffff82111561048c5761048b610358565b5b61049582610347565b9050602081019050919050565b60005b838110156104c05780820151818401526020810190506104a5565b838111156104cf576000848401525b50505050565b60006104e86104e384610471565b6103b8565b9050828152602081018484840111156105045761050361046c565b5b61050f8482856104a2565b509392505050565b600082601f83011261052c5761052b610342565b5b815161053c8482602086016104d5565b91505092915050565b60006040828403121561055b5761055a610404565b5b61056560406103b8565b9050600061057584828501610457565b600083015250602082015167ffffffffffffffff81111561059957610598610409565b5b6105a584828501610517565b60208301525092915050565b60006105c46105bf846103d3565b6103b8565b905080838252602082019050602084028301858111156105e7576105e66103ff565b5b835b8181101561062e57805167ffffffffffffffff81111561060c5761060b610342565b5b8086016106198982610545565b855260208501945050506020810190506105e9565b5050509392505050565b600082601f83011261064d5761064c610342565b5b815161065d8482602086016105b1565b91505092915050565b6000806040838503121561067d5761067c610300565b5b600061068b8582860161032d565b925050602083015167ffffffffffffffff8111156106ac576106ab610305565b5b6106b885828601610638565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b6000610712826106f1565b61071c81856106fc565b935061072c8185602086016104a2565b80840191505092915050565b60006107448284610707565b915081905092915050565b600082825260208201905092915050565b7f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006107bc60218361074f565b91506107c782610760565b604082019050919050565b600060208201905081810360008301526107eb816107af565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061083682610821565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610869576108686107f2565b5b60018201905091905056fe',
            s,
          ]),
          p = await e.call({ data: u, blockTag: n }),
          o = O.find((e) => 'function' === e.type && 'tryAggregate' === e.name),
          y = o?.name || '',
          d = o?.outputs || [];
        return $.decode(y, d, p)[0];
      }
      async function H(e, t, n) {
        let a = T.find((e) => 'constructor' === e.type),
          i = a?.inputs || [],
          s = $.encodeConstructor(i, [t]),
          u = (0, C.xW)([
            '0x608060405234801561001057600080fd5b5060405161089338038061089383398181016040528101906100329190610697565b6000815167ffffffffffffffff81111561004f5761004e61033d565b5b60405190808252806020026020018201604052801561008857816020015b6100756102f7565b81526020019060019003908161006d5790505b50905060005b82518110156101f0576000808483815181106100ad576100ac6106e0565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168584815181106100e2576100e16106e0565b5b6020026020010151604001516040516100fb9190610756565b6000604051808303816000865af19150503d8060008114610138576040519150601f19603f3d011682016040523d82523d6000602084013e61013d565b606091505b5091509150848381518110610155576101546106e0565b5b6020026020010151602001516101a657816101a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019c906107f0565b60405180910390fd5b5b60405180604001604052808315158152602001828152508484815181106101d0576101cf6106e0565b5b6020026020010181905250505080806101e890610849565b91505061008e565b50602081516040028260405103030160408160405103036001835111156102705760005b835181101561026e578060200260208501018160200260400183018261023c57855160200281525b6000831115610261576020808303510151602083510151038060208303510180835250505b5050600181019050610214565b505b60005b835181101561029e578060200260208501018051516040602083510151035250600181019050610273565b5060005b83518110156102cb578060200260208501016040602080835101510352506001810190506102a2565b506001835114156102e85760208301604082018451602002815250505b60208152825160208201528181f35b6040518060400160405280600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103758261032c565b810181811067ffffffffffffffff821117156103945761039361033d565b5b80604052505050565b60006103a7610313565b90506103b3828261036c565b919050565b600067ffffffffffffffff8211156103d3576103d261033d565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041e826103f3565b9050919050565b61042e81610413565b811461043957600080fd5b50565b60008151905061044b81610425565b92915050565b60008115159050919050565b61046681610451565b811461047157600080fd5b50565b6000815190506104838161045d565b92915050565b600080fd5b600067ffffffffffffffff8211156104a9576104a861033d565b5b6104b28261032c565b9050602081019050919050565b60005b838110156104dd5780820151818401526020810190506104c2565b838111156104ec576000848401525b50505050565b60006105056105008461048e565b61039d565b90508281526020810184848401111561052157610520610489565b5b61052c8482856104bf565b509392505050565b600082601f83011261054957610548610327565b5b81516105598482602086016104f2565b91505092915050565b600060608284031215610578576105776103e9565b5b610582606061039d565b905060006105928482850161043c565b60008301525060206105a684828501610474565b602083015250604082015167ffffffffffffffff8111156105ca576105c96103ee565b5b6105d684828501610534565b60408301525092915050565b60006105f56105f0846103b8565b61039d565b90508083825260208201905060208402830185811115610618576106176103e4565b5b835b8181101561065f57805167ffffffffffffffff81111561063d5761063c610327565b5b80860161064a8982610562565b8552602085019450505060208101905061061a565b5050509392505050565b600082601f83011261067e5761067d610327565b5b815161068e8482602086016105e2565b91505092915050565b6000602082840312156106ad576106ac61031d565b5b600082015167ffffffffffffffff8111156106cb576106ca610322565b5b6106d784828501610669565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60006107308261070f565b61073a818561071a565b935061074a8185602086016104bf565b80840191505092915050565b60006107628284610725565b915081905092915050565b600082825260208201905092915050565b7f4d756c746963616c6c33206167677265676174653a2063616c6c206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006107da60218361076d565b91506107e58261077e565b604082019050919050565b60006020820190508181036000830152610809816107cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006108548261083f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561088757610886610810565b5b60018201905091905056fe',
            s,
          ]),
          p = await e.call({ data: u, blockTag: n }),
          o = F.find((e) => 'function' === e.type && 'aggregate3' === e.name),
          y = o?.name || '',
          d = o?.outputs || [];
        return $.decode(y, d, p)[0];
      }
      class K {
        #a;
        #i;
        #s;
        #u;
        #p;
        constructor(e, t, n) {
          (this.#a = t),
            (this.#i = n || {}),
            (this.#s = this.#o(e, 1)),
            (this.#u = this.#o(e, 2)),
            (this.#p = this.#o(e, 3));
        }
        getEthBalance(e) {
          let t = this.#p || this.#u || this.#s;
          if (!t) throw Error('Multicall contract is not available on this network.');
          return new E(t.address, S).getEthBalance(e);
        }
        async all(e, t) {
          if (!this.#a) throw Error('Provider should be initialized before use.');
          let n = this.#y('BASIC', t?.blockTag),
            a = this.#a;
          return await W(a, n, e, t);
        }
        async tryAll(e, t) {
          if (!this.#a) throw Error('Provider should be initialized before use.');
          let n = this.#y('TRY_ALL', t?.blockTag),
            a = this.#a;
          return await Y(a, n, e, t);
        }
        async tryEach(e, t, n) {
          if (!this.#a) throw Error('Provider should be initialized before use.');
          let a = this.#y('TRY_EACH', n?.blockTag),
            i = this.#a,
            s = e.map((e, n) => {
              let a = t[n];
              if (void 0 === a) throw Error('Unable to access the canFail value');
              return { ...e, canFail: a };
            });
          return await Z(i, a, s, n);
        }
        #y(e, t) {
          let n = this.#d(this.#s, t) ? this.#s : null,
            a = this.#d(this.#u, t) ? this.#u : null,
            i = this.#d(this.#p, t) ? this.#p : null;
          switch (e) {
            case 'BASIC':
              return i || a || n;
            case 'TRY_ALL':
              return i || a;
            case 'TRY_EACH':
              return i;
          }
        }
        #d(e, t) {
          return !!e && (!t || 'latest' === t || 'pending' === t || e.block < t);
        }
        #o(e, t) {
          function n(e, t) {
            switch (t) {
              case 1:
                return (function (e) {
                  let t = {
                    1: { address: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441', block: 7929876 },
                    3: { address: '0x53c43764255c17bd724f74c4ef150724ac50a3ed', block: 7980811 },
                    4: { address: '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821', block: 4534725 },
                    5: { address: '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e', block: 743550 },
                    10: { address: '0x266557A864680A1401A3506c0eb72934BD13Bf59', block: 0 },
                    25: { address: '0x5e954f5972EC6BFc7dECd75779F10d848230345F', block: 0 },
                    42: { address: '0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a', block: 0xaf3541 },
                    56: { address: '0xe21a5b299756ee452a6a871ff29852862fc99be9', block: 0 },
                    100: { address: '0xb5b692a88bdfc81ca69dcb1d924f59f0413a602a', block: 0 },
                    106: { address: '0x0747CFe82D3Bee998f634569FE2B0005dF9d8EDE', block: 0 },
                    108: { address: '0xfce4609743e17d349b7e5f478a7a9a6cfa3c808c', block: 0 },
                    128: { address: '0x56171094a15b8cac4314c0f8930100b939503bd9', block: 0 },
                    137: { address: '0x35e4aa226ce52e1e59e5e5ec24766007bcbe2e7d', block: 0xc06476 },
                    250: { address: '0xc04d660976c923ddba750341fe5923e47900cf24', block: 0 },
                    288: { address: '0x650129FB67354eF8C148a8CDb1a2d5E01B520CaD', block: 0 },
                    321: { address: '0x543528e13eac69206e87334cca971503a552438b', block: 0 },
                    324: { address: '0x52806DC8c5Cb95a560039409FE2e1C29d9eBb22f', block: 9531405 },
                    592: { address: '0x57F40bbBCc11BE5471a8f9bF1dE56816a1CF08f6', block: 0 },
                    820: { address: '0x8ba3d23241c7044be703afaf2a728fdbc16f5f6f', block: 0 },
                    1234: { address: '0x176CcFFbAB792Aaa0da7C430FE20a7106d969f66', block: 22 },
                    1284: { address: '0x83e3b61886770de2F64AAcaD2724ED4f08F7f36B', block: 0 },
                    1337: { address: '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e', block: 0 },
                    3999: { address: '0xFC8bd6469c65d58fBf969512Be1564579cEc4855', block: 859439 },
                    4689: { address: '0x0e14ded9e7965c6446df2e5c528dd1b4e3b4640f', block: 0 },
                    31337: { address: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441', block: 0 },
                    42161: { address: '0x10126ceb60954bc35049f24e819a380c505f8a0f', block: 0 },
                    42262: { address: '0xAC84239C64D4E21c98C905Eca62af0b56017B8F6', block: 0 },
                    43114: { address: '0xE8eeDd99baC03871CF123E76cE90bA179Df94351', block: 0 },
                    80001: {
                      address: '0x08411add0b5aa8ee47563b146743c13b3556c9cc',
                      block: 0xb74652,
                    },
                    0x4e454152: { address: '0xa48c67d1c60b8187ecb7c549e8a670419d356994', block: 0 },
                    16666e5: { address: '0xfe4980f62d708c2a84d3929859ea226340759320', block: 0 },
                    73927: {
                      address: '0x9Fa7eAC783F772734337B99D1d5AAeAd75Cd9077',
                      block: 0xd6d999,
                    },
                  }[e];
                  return t || null;
                })(e);
              case 2:
                return (function (e) {
                  let t = {
                    1: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 0xbc3ba1 },
                    4: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 8283206 },
                    5: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 4489716 },
                    10: { address: '0x054FfF7ee30953DdB739458e11EAAd51224343a1', block: 0x1e777a5 },
                    42: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 0x16e9adc },
                    56: { address: '0x4c6bb7c24b6f3dfdfb548e54b7c5ea4cb52a0069', block: 0 },
                    100: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 0 },
                    137: { address: '0xf43a7be1b284aa908cdfed8b3e286961956b4d2c', block: 0xef7f6b },
                    250: { address: '0x470ADB45f5a9ac3550bcFFaD9D990Bf7e2e941c9', block: 0 },
                    324: { address: '0xDED0Aa78681A5AbF85D830D4478cf4acF00Ec4a4', block: 9531409 },
                    420: { address: '0x9477d5bA4Ed7568eD73da6b2cbcd63D92Bb8eBB1', block: 3441852 },
                    1284: { address: '0x9256d856A13EB3732d90D88B57F33d0847Fa50bF', block: 0 },
                    1337: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 0 },
                    3999: { address: '0xf03f60aC45EC5616516dC400C3f25Ec6Db566c9F', block: 859481 },
                    31337: { address: '0x5ba1e12693dc8f9c48aad8770482f4739beed696', block: 0 },
                    42161: { address: '0x842eC2c7D803033Edf55E478F461FC547Bc54EB2', block: 0 },
                    42220: {
                      address: '0xE72f42c64EA3dc05D2D94F541C3a806fa161c49B',
                      block: 9325322,
                    },
                    44787: {
                      address: '0xA3A2E17933C0865534Ac7839F7a860E40C95D340',
                      block: 9082778,
                    },
                    53935: { address: '0x5b24224dC16508DAD755756639E420817DD4c99E', block: 62 },
                    421611: { address: '0x96DB1F8055074aB62161B6Ad66Ab6B8679513DeF', block: 0 },
                    73927: {
                      address: '0x5Ac86eC2e6332280Eff161c169aCcC345996c340',
                      block: 0xd6db0a,
                    },
                  }[e];
                  return t || null;
                })(e);
              case 3:
                return (function (e) {
                  let t = '0xca11bde05977b3631167028862be2a173976ca11',
                    n = {
                      1: { address: t, block: 0xdb04c1 },
                      3: { address: t, block: 0xb81477 },
                      4: { address: t, block: 0x9d288a },
                      5: { address: t, block: 6507670 },
                      10: { address: t, block: 4286263 },
                      14: { address: t, block: 3002461 },
                      16: { address: t, block: 276388 },
                      19: { address: t, block: 0xcc3368 },
                      42: { address: t, block: 0x1ce2054 },
                      50: {
                        address: '0x0B1795ccA8E4eC4df02346a082df54D437F8D9aF',
                        block: 0x485e5f4,
                      },
                      56: { address: t, block: 0xf2f12c },
                      69: { address: t, block: 1418387 },
                      97: { address: t, block: 0x109d893 },
                      100: { address: t, block: 0x140c71b },
                      114: { address: t, block: 508735 },
                      137: { address: t, block: 0x18938b0 },
                      146: { address: t, block: 60 },
                      196: { address: t, block: 47416 },
                      250: { address: t, block: 0x1f79203 },
                      252: { address: t, block: 0 },
                      324: {
                        address: '0x413fEb613604D46586c22801949A5b88b224c260',
                        block: 9531414,
                      },
                      420: { address: t, block: 49461 },
                      999: { address: t, block: 13051 },
                      1284: { address: t, block: 609002 },
                      1285: { address: t, block: 1597904 },
                      1287: { address: t, block: 1850686 },
                      2222: {
                        address: '0x1578f6d2D3168acF41b506AA666A521994F6BAB6',
                        block: 1176602,
                      },
                      4002: { address: t, block: 8328688 },
                      8453: { address: '0xcA11bde05977b3631167028862bE2a173976CA11', block: 5022 },
                      42161: { address: t, block: 7654707 },
                      42220: { address: t, block: 0xc81517 },
                      43113: { address: t, block: 7096959 },
                      43114: { address: t, block: 0xb5b35e },
                      80001: { address: t, block: 0x1844160 },
                      421611: { address: t, block: 0x9c1465 },
                      5e3: { address: t, block: 304717 },
                      16666e5: { address: t, block: 0x1710b99 },
                      73927: {
                        address: '0x138A85647768815078DF1dD85C6121e611381A0b',
                        block: 0xd6db4b,
                      },
                      81457: {
                        address: '0x23928c6f823e0d78eadc9d2f69ace652ff3cdcb1',
                        block: 368182,
                      },
                    }[e];
                  return n || null;
                })(e);
            }
          }
          let a = this.#i?.multicall;
          if (!a) return n(e, t);
          let i = a.address;
          return i ? { address: i, block: a.block || 0 } : n(e, t);
        }
      }
      var z = n(37653),
        X = function (e, t, n, a) {
          return new (n || (n = Promise))(function (i, s) {
            function u(e) {
              try {
                o(a.next(e));
              } catch (e) {
                s(e);
              }
            }
            function p(e) {
              try {
                o(a.throw(e));
              } catch (e) {
                s(e);
              }
            }
            function o(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof n
                    ? t
                    : new n(function (e) {
                        e(t);
                      })
                  ).then(u, p);
            }
            o((a = a.apply(e, t || [])).next());
          });
        };
      let Q = (e) => {
          let t = Object.values(e),
            n = o(t),
            a = y(t);
          return { poolsDict: e, poolLists: t, usdPrices: n, crvApy: a };
        },
        ee = ((e, { maxAge: t, createKey: n = (e) => e.toString() }) => {
          let a = {},
            i = {},
            s = (e, t) => {
              t ? (a[e] = t) : e in a && delete a[e], e in i && (clearTimeout(i[e]), delete i[e]);
            },
            u = (e) =>
              (i[e] = setTimeout(() => {
                delete i[e], delete a[e];
              }, t)),
            p = (...t) =>
              X(void 0, void 0, void 0, function* () {
                let i = n(t);
                if (i in a) return a[i];
                let p = e(...t);
                s(i, p);
                try {
                  let e = yield p;
                  return u(i), e;
                } catch (e) {
                  throw (delete a[i], e);
                }
              });
          return (
            (p.set = (e, ...t) => {
              let a = n(t);
              s(a, Promise.resolve(e)), u(a);
            }),
            p
          );
        })(
          (e, t) =>
            X(void 0, void 0, void 0, function* () {
              return Q(yield p(e, t));
            }),
          { maxAge: 3e5 }
        ),
        et = (e, t, ...n) =>
          X(void 0, [e, t, ...n], void 0, function* (e, t, n = !1) {
            let { poolsDict: a } = yield ee(e, n);
            return a[t];
          }),
        en = (e, t, n) => ee.set(Q(n), e, t),
        ea = (e, t) =>
          X(void 0, void 0, void 0, function* () {
            let { poolLists: n } = yield ee(e, t);
            return n;
          }),
        ei = (e, t) =>
          X(void 0, void 0, void 0, function* () {
            let { usdPrices: n } = yield ee(e, t);
            return n;
          }),
        es = (e, t) =>
          X(void 0, void 0, void 0, function* () {
            let { crvApy: n } = yield ee(e, t);
            return n;
          }),
        eu = JSON.parse(
          '[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}]'
        ),
        ep = [10, 8453],
        eo = {
          getVolumes: [1, 10, 100, 137, 250, 252, 999, 8453, 42161, 146],
          getSubgraphData: [43114],
          getFactoryAPYs: [56, 196, 324, 1284, 2222, 5e3, 42220, 0x4e454152],
        },
        ey = (e, t) => M.Js(e, t),
        ed = (e, t) => M.XS(e, t),
        em = (e) => {
          for (let t in e) {
            if (!Object.prototype.hasOwnProperty.call(e, t)) continue;
            let n = e[t];
            (n.swap_address = n.swap_address.toLowerCase()),
              (n.token_address = n.token_address.toLowerCase()),
              (n.gauge_address = n.gauge_address.toLowerCase()),
              n.deposit_address && (n.deposit_address = n.deposit_address.toLowerCase()),
              n.sCurveRewards_address &&
                (n.sCurveRewards_address = n.sCurveRewards_address.toLowerCase()),
              n.reward_contract && (n.reward_contract = n.reward_contract.toLowerCase()),
              (n.underlying_coin_addresses = n.underlying_coin_addresses.map((e) =>
                e.toLowerCase()
              )),
              (n.wrapped_coin_addresses = n.wrapped_coin_addresses.map((e) => e.toLowerCase()));
          }
          return e;
        },
        er = (e) => {
          let t = {};
          for (let n in e) {
            if (!Object.prototype.hasOwnProperty.call(e, n)) continue;
            let a = e[n];
            t[a.token_address] = 18;
            for (let e = 0; e < a.underlying_coin_addresses.length; e++)
              t[a.underlying_coin_addresses[e]] = a.underlying_decimals[e];
            for (let e = 0; e < a.wrapped_coin_addresses.length; e++)
              t[a.wrapped_coin_addresses[e]] = a.wrapped_decimals[e];
          }
          return t;
        };
      function el(e) {
        let t = [];
        for (let n of Object.values(e))
          n.gauge_address !== this.constants.ZERO_ADDRESS && t.push(n.gauge_address);
        return t;
      }
      let ec = (e) => Object.fromEntries(Object.entries(e).map((e) => [e[0], e[1].toLowerCase()])),
        ef = (e) => Object.fromEntries(Object.entries(e).map((e) => [e[0].toLowerCase(), e[1]])),
        e_ = (e, t, n) => (t in e || (e[t] = a(n.bind(e), { promise: !0, maxAge: 3e5 })), e[t]),
        eb = JSON.parse(
          '[{"name":"Deposit","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"type":"address","name":"user","indexed":false},{"type":"uint256","name":"original_balance","indexed":false},{"type":"uint256","name":"original_supply","indexed":false},{"type":"uint256","name":"working_balance","indexed":false},{"type":"uint256","name":"working_supply","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"lp_addr"},{"type":"address","name":"_minter"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"user_checkpoint","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"2079152"},{"name":"claimable_tokens","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function","gas":"1998318"},{"name":"kick","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"2084532"},{"name":"set_approve_deposit","outputs":[],"inputs":[{"type":"address","name":"addr"},{"type":"bool","name":"can_deposit"}],"stateMutability":"nonpayable","type":"function","gas":"35766"},{"name":"deposit","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function"},{"name":"withdraw","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"2208318"},{"name":"integrate_checkpoint","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2297"},{"name":"minter","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1421"},{"name":"crv_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1451"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1481"},{"name":"controller","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1511"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1725"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1601"},{"name":"future_epoch_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1631"},{"name":"approved_to_deposit","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"1969"},{"name":"working_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1845"},{"name":"working_supply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1721"},{"name":"period","outputs":[{"type":"int128","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1751"},{"name":"period_timestamp","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1890"},{"name":"integrate_inv_supply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1920"},{"name":"integrate_inv_supply_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1995"},{"name":"integrate_checkpoint_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2025"},{"name":"integrate_fraction","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2055"},{"name":"inflation_rate","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"}]'
        ),
        eg = JSON.parse(
          '[{"name":"Deposit","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"type":"address","name":"user","indexed":false},{"type":"uint256","name":"original_balance","indexed":false},{"type":"uint256","name":"original_supply","indexed":false},{"type":"uint256","name":"working_balance","indexed":false},{"type":"uint256","name":"working_supply","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"lp_addr"},{"type":"address","name":"_minter"},{"type":"address","name":"_reward_contract"},{"type":"address","name":"_rewarded_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"user_checkpoint","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"2311984"},{"name":"claimable_tokens","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function","gas":"2231138"},{"name":"claimable_reward","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function","gas":"7300"},{"name":"kick","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"2317383"},{"name":"set_approve_deposit","outputs":[],"inputs":[{"type":"address","name":"addr"},{"type":"bool","name":"can_deposit"}],"stateMutability":"nonpayable","type":"function","gas":"35826"},{"name":"deposit","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function"},{"name":"withdraw","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function"},{"name":"claim_rewards","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function"},{"name":"integrate_checkpoint","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2387"},{"name":"minter","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1511"},{"name":"crv_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"},{"name":"controller","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1601"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1631"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1815"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1691"},{"name":"future_epoch_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1721"},{"name":"approved_to_deposit","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"2059"},{"name":"working_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1935"},{"name":"working_supply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1811"},{"name":"period","outputs":[{"type":"int128","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1841"},{"name":"period_timestamp","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1980"},{"name":"integrate_inv_supply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2010"},{"name":"integrate_inv_supply_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2085"},{"name":"integrate_checkpoint_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2115"},{"name":"integrate_fraction","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2145"},{"name":"inflation_rate","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2021"},{"name":"reward_contract","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2051"},{"name":"rewarded_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"reward_integral","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"reward_integral_for","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2295"},{"name":"rewards_for","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2325"},{"name":"claimed_rewards_for","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2355"}]'
        ),
        ev = JSON.parse(
          '[{"name":"Deposit","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"type":"address","name":"user","indexed":false},{"type":"uint256","name":"original_balance","indexed":false},{"type":"uint256","name":"original_supply","indexed":false},{"type":"uint256","name":"working_balance","indexed":false},{"type":"uint256","name":"working_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitOwnership","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"type":"address","name":"_from","indexed":true},{"type":"address","name":"_to","indexed":true},{"type":"uint256","name":"_value","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"type":"address","name":"_owner","indexed":true},{"type":"address","name":"_spender","indexed":true},{"type":"uint256","name":"_value","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"string","name":"_name"},{"type":"string","name":"_symbol"},{"type":"address","name":"_lp_token"},{"type":"address","name":"_minter"},{"type":"address","name":"_admin"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"decimals","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"261"},{"name":"integrate_checkpoint","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1997"},{"name":"user_checkpoint","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"2070619"},{"name":"claimable_tokens","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function","gas":"1989830"},{"name":"claimable_reward","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_addr"},{"type":"address","name":"_token"}],"stateMutability":"view","type":"function","gas":"999922"},{"name":"claim_rewards","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function"},{"name":"claim_historic_rewards","outputs":[],"inputs":[{"type":"address[8]","name":"_reward_tokens"}],"stateMutability":"nonpayable","type":"function"},{"name":"claim_historic_rewards","outputs":[],"inputs":[{"type":"address[8]","name":"_reward_tokens"},{"type":"address","name":"_addr"}],"stateMutability":"nonpayable","type":"function"},{"name":"kick","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"2075807"},{"name":"set_approve_deposit","outputs":[],"inputs":[{"type":"address","name":"addr"},{"type":"bool","name":"can_deposit"}],"stateMutability":"nonpayable","type":"function","gas":"35981"},{"name":"deposit","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function"},{"name":"withdraw","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"3125023"},{"name":"allowance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_owner"},{"type":"address","name":"_spender"}],"stateMutability":"view","type":"function","gas":"1911"},{"name":"transfer","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"12092388"},{"name":"transferFrom","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"12129038"},{"name":"approve","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_spender"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"38244"},{"name":"increaseAllowance","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_spender"},{"type":"uint256","name":"_added_value"}],"stateMutability":"nonpayable","type":"function","gas":"39488"},{"name":"decreaseAllowance","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_spender"},{"type":"uint256","name":"_subtracted_value"}],"stateMutability":"nonpayable","type":"function","gas":"39512"},{"name":"set_rewards","outputs":[],"inputs":[{"type":"address","name":"_reward_contract"},{"type":"bytes32","name":"_sigs"},{"type":"address[8]","name":"_reward_tokens"}],"stateMutability":"nonpayable","type":"function","gas":"2268178"},{"name":"set_killed","outputs":[],"inputs":[{"type":"bool","name":"_is_killed"}],"stateMutability":"nonpayable","type":"function","gas":"36878"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"38258"},{"name":"accept_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38203"},{"name":"minter","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1811"},{"name":"crv_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1841"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1871"},{"name":"controller","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1901"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"},{"name":"future_epoch_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1961"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2206"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2021"},{"name":"name","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"8453"},{"name":"symbol","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"7506"},{"name":"approved_to_deposit","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"2541"},{"name":"working_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2356"},{"name":"working_supply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"period","outputs":[{"type":"int128","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"period_timestamp","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2340"},{"name":"integrate_inv_supply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2370"},{"name":"integrate_inv_supply_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2506"},{"name":"integrate_checkpoint_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2536"},{"name":"integrate_fraction","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2566"},{"name":"inflation_rate","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"reward_contract","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"reward_tokens","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2550"},{"name":"reward_integral","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2686"},{"name":"reward_integral_for","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"2931"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"future_admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"is_killed","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"}]'
        ),
        ew = JSON.parse(
          '[{"name":"Deposit","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"name":"user","type":"address","indexed":false},{"name":"original_balance","type":"uint256","indexed":false},{"name":"original_supply","type":"uint256","indexed":false},{"name":"working_balance","type":"uint256","indexed":false},{"name":"working_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_lp_token","type":"address"},{"name":"_minter","type":"address"},{"name":"_admin","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"288"},{"stateMutability":"view","type":"function","name":"integrate_checkpoint","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4624"},{"stateMutability":"nonpayable","type":"function","name":"user_checkpoint","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":"3133638"},{"stateMutability":"view","type":"function","name":"claimable_tokens","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3046705"},{"stateMutability":"view","type":"function","name":"reward_contract","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2718"},{"stateMutability":"view","type":"function","name":"last_claim","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2544"},{"stateMutability":"view","type":"function","name":"claimed_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3066"},{"stateMutability":"view","type":"function","name":"claimable_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3034"},{"stateMutability":"nonpayable","type":"function","name":"claimable_reward_write","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1211002"},{"stateMutability":"nonpayable","type":"function","name":"set_rewards_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[],"gas":"35733"},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kick","inputs":[{"name":"addr","type":"address"}],"outputs":[],"gas":"3150326"},{"stateMutability":"nonpayable","type":"function","name":"deposit","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3238"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"17172312"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"17210262"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"38241"},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"40785"},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"40809"},{"stateMutability":"nonpayable","type":"function","name":"set_rewards","inputs":[{"name":"_reward_contract","type":"address"},{"name":"_sigs","type":"bytes32"},{"name":"_reward_tokens","type":"address[8]"}],"outputs":[],"gas":"2743589"},{"stateMutability":"nonpayable","type":"function","name":"set_killed","inputs":[{"name":"_is_killed","type":"bool"}],"outputs":[],"gas":"38175"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"addr","type":"address"}],"outputs":[],"gas":"39555"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"39500"},{"stateMutability":"view","type":"function","name":"minter","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3108"},{"stateMutability":"view","type":"function","name":"crv_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3138"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3168"},{"stateMutability":"view","type":"function","name":"controller","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3198"},{"stateMutability":"view","type":"function","name":"voting_escrow","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"future_epoch_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3503"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3318"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13650"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11403"},{"stateMutability":"view","type":"function","name":"working_balances","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3623"},{"stateMutability":"view","type":"function","name":"working_supply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"period","inputs":[],"outputs":[{"name":"","type":"int128"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"period_timestamp","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3607"},{"stateMutability":"view","type":"function","name":"integrate_inv_supply","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3637"},{"stateMutability":"view","type":"function","name":"integrate_inv_supply_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3773"},{"stateMutability":"view","type":"function","name":"integrate_checkpoint_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3803"},{"stateMutability":"view","type":"function","name":"integrate_fraction","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3833"},{"stateMutability":"view","type":"function","name":"inflation_rate","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3787"},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3923"},{"stateMutability":"view","type":"function","name":"reward_integral","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3953"},{"stateMutability":"view","type":"function","name":"reward_integral_for","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4198"},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3798"},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3828"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"3858"}]'
        ),
        eh = JSON.parse(
          '[{"name":"Deposit","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"name":"user","type":"address","indexed":false},{"name":"original_balance","type":"uint256","indexed":false},{"name":"original_supply","type":"uint256","indexed":false},{"name":"working_balance","type":"uint256","indexed":false},{"name":"working_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_lp_token","type":"address"},{"name":"_admin","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"288"},{"stateMutability":"view","type":"function","name":"integrate_checkpoint","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4560"},{"stateMutability":"nonpayable","type":"function","name":"user_checkpoint","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":"3123352"},{"stateMutability":"view","type":"function","name":"claimable_tokens","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3038594"},{"stateMutability":"view","type":"function","name":"claimed_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3006"},{"stateMutability":"view","type":"function","name":"claimable_reward","inputs":[{"name":"_user","type":"address"},{"name":"_reward_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"20225"},{"stateMutability":"nonpayable","type":"function","name":"set_rewards_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[],"gas":"35643"},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kick","inputs":[{"name":"addr","type":"address"}],"outputs":[],"gas":"3137443"},{"stateMutability":"nonpayable","type":"function","name":"deposit","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"18062446"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"18100396"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39421"},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"41965"},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"41989"},{"stateMutability":"nonpayable","type":"function","name":"add_reward","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[],"gas":"113003"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_distributor","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[],"gas":"40753"},{"stateMutability":"nonpayable","type":"function","name":"deposit_reward_token","inputs":[{"name":"_reward_token","type":"address"},{"name":"_amount","type":"uint256"}],"outputs":[],"gas":"1540169"},{"stateMutability":"nonpayable","type":"function","name":"set_killed","inputs":[{"name":"_is_killed","type":"bool"}],"outputs":[],"gas":"38115"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"addr","type":"address"}],"outputs":[],"gas":"40045"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"39990"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3048"},{"stateMutability":"view","type":"function","name":"future_epoch_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3078"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3323"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3138"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3598"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13428"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11181"},{"stateMutability":"view","type":"function","name":"working_balances","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3473"},{"stateMutability":"view","type":"function","name":"working_supply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3288"},{"stateMutability":"view","type":"function","name":"period","inputs":[],"outputs":[{"name":"","type":"int128"}],"gas":"3318"},{"stateMutability":"view","type":"function","name":"period_timestamp","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3393"},{"stateMutability":"view","type":"function","name":"integrate_inv_supply","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3423"},{"stateMutability":"view","type":"function","name":"integrate_inv_supply_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3623"},{"stateMutability":"view","type":"function","name":"integrate_checkpoint_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3653"},{"stateMutability":"view","type":"function","name":"integrate_fraction","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3683"},{"stateMutability":"view","type":"function","name":"inflation_rate","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"reward_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3528"},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3603"},{"stateMutability":"view","type":"function","name":"reward_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"token","type":"address"},{"name":"distributor","type":"address"},{"name":"period_finish","type":"uint256"},{"name":"rate","type":"uint256"},{"name":"last_update","type":"uint256"},{"name":"integral","type":"uint256"}],"gas":"15033"},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3833"},{"stateMutability":"view","type":"function","name":"reward_integral_for","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4078"},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3678"},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3708"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"3738"}]'
        ),
        ex = JSON.parse(
          '[{"name":"Deposit","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"name":"user","type":"address","indexed":false},{"name":"original_balance","type":"uint256","indexed":false},{"name":"original_supply","type":"uint256","indexed":false},{"name":"working_balance","type":"uint256","indexed":false},{"name":"working_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_lp_token","type":"address"},{"name":"_admin","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"integrate_checkpoint","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"user_checkpoint","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"claimable_tokens","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"claimed_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"claimable_reward","inputs":[{"name":"_user","type":"address"},{"name":"_reward_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"set_rewards_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kick","inputs":[{"name":"addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deposit","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"add_reward","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_reward_distributor","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deposit_reward_token","inputs":[{"name":"_reward_token","type":"address"},{"name":"_amount","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_killed","inputs":[{"name":"_is_killed","type":"bool"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_epoch_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"working_balances","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"working_supply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"reward_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"reward_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"token","type":"address"},{"name":"distributor","type":"address"},{"name":"period_finish","type":"uint256"},{"name":"rate","type":"uint256"},{"name":"last_update","type":"uint256"},{"name":"integral","type":"uint256"}]}]},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"reward_integral_for","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"integrate_inv_supply_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_checkpoint_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_fraction","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"inflation_rate","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"period","inputs":[],"outputs":[{"name":"","type":"int128"}]},{"stateMutability":"view","type":"function","name":"period_timestamp","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_inv_supply","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        eM = JSON.parse(
          '[{"name":"Deposit","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"name":"user","type":"address","indexed":false},{"name":"original_balance","type":"uint256","indexed":false},{"name":"original_supply","type":"uint256","indexed":false},{"name":"working_balance","type":"uint256","indexed":false},{"name":"working_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_lp_token","type":"address"},{"name":"_factory","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"288"},{"stateMutability":"view","type":"function","name":"integrate_checkpoint","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4560"},{"stateMutability":"nonpayable","type":"function","name":"user_checkpoint","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":"3123796"},{"stateMutability":"view","type":"function","name":"claimable_tokens","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3038616"},{"stateMutability":"view","type":"function","name":"claimed_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3006"},{"stateMutability":"view","type":"function","name":"claimable_reward","inputs":[{"name":"_user","type":"address"},{"name":"_reward_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"20225"},{"stateMutability":"nonpayable","type":"function","name":"set_rewards_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[],"gas":"35643"},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kick","inputs":[{"name":"addr","type":"address"}],"outputs":[],"gas":"3137887"},{"stateMutability":"nonpayable","type":"function","name":"deposit","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"18062406"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"18100356"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"38121"},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"40665"},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"40689"},{"stateMutability":"nonpayable","type":"function","name":"add_reward","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[],"gas":"115384"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_distributor","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[],"gas":"43149"},{"stateMutability":"nonpayable","type":"function","name":"deposit_reward_token","inputs":[{"name":"_reward_token","type":"address"},{"name":"_amount","type":"uint256"},{"name":"_epoch","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_killed","inputs":[{"name":"_is_killed","type":"bool"}],"outputs":[],"gas":"40499"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2988"},{"stateMutability":"view","type":"function","name":"future_epoch_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3018"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3263"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3078"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3538"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13368"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11121"},{"stateMutability":"view","type":"function","name":"working_balances","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3413"},{"stateMutability":"view","type":"function","name":"working_supply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"period","inputs":[],"outputs":[{"name":"","type":"int128"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"period_timestamp","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3333"},{"stateMutability":"view","type":"function","name":"integrate_inv_supply","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3363"},{"stateMutability":"view","type":"function","name":"integrate_inv_supply_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3563"},{"stateMutability":"view","type":"function","name":"integrate_checkpoint_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3593"},{"stateMutability":"view","type":"function","name":"integrate_fraction","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3623"},{"stateMutability":"view","type":"function","name":"inflation_rate","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"reward_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3543"},{"stateMutability":"view","type":"function","name":"reward_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"token","type":"address"},{"name":"distributor","type":"address"},{"name":"period_finish","type":"uint256"},{"name":"rate","type":"uint256"},{"name":"last_update","type":"uint256"},{"name":"integral","type":"uint256"}],"gas":"14973"},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3773"},{"stateMutability":"view","type":"function","name":"reward_integral_for","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4018"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"manager","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]}]'
        ),
        eA = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address[2]","name":"_coins"},{"type":"address[2]","name":"_underlying_coins"},{"type":"address","name":"_curve"},{"type":"address","name":"_token"}],"constant":false,"payable":false,"type":"constructor"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[2]","name":"uamounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"992271"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_uamounts"}],"constant":false,"payable":false,"type":"function","gas":"621194"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[2]","name":"uamounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"840484"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"2945630"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_uamount"}],"constant":false,"payable":false,"type":"function"},{"name":"withdraw_donated_dust","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"63973"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1680"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1710"},{"name":"curve","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"}]'
        ),
        eE = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[2]","name":"_coins"},{"type":"address[2]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"1084167"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"4239939"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"6479997"},{"name":"get_dy","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2543681"},{"name":"get_dx","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"2543687"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2543506"},{"name":"get_dx_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"2543512"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"5184573"},{"name":"exchange_underlying","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"5200817"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"153898"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"6479708"},{"name":"commit_new_parameters","outputs":[],"inputs":[{"type":"uint256","name":"amplification"},{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"146105"},{"name":"apply_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"133512"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21835"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74512"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60568"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21925"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"12831"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37878"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22015"},{"name":"coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2190"},{"name":"underlying_coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"balances","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"}]'
        ),
        eC = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address[3]","name":"_coins"},{"type":"address[3]","name":"_underlying_coins"},{"type":"address","name":"_curve"},{"type":"address","name":"_token"}],"constant":false,"payable":false,"type":"constructor"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[3]","name":"uamounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"1097072"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"min_uamounts"}],"constant":false,"payable":false,"type":"function","gas":"675496"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[3]","name":"uamounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"905732"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3413700"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_uamount"}],"constant":false,"payable":false,"type":"function"},{"name":"withdraw_donated_dust","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"63973"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1680"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1710"},{"name":"curve","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"}]'
        ),
        ek = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[3]","name":"_coins"},{"type":"address[3]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1327351"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"5171741"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"7905846"},{"name":"get_dy","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3016651"},{"name":"get_dx","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"3016657"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3016494"},{"name":"get_dx_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"3016500"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"6109460"},{"name":"exchange_underlying","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"6125699"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"197574"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"7905313"},{"name":"commit_new_parameters","outputs":[],"inputs":[{"type":"uint256","name":"amplification"},{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"145897"},{"name":"apply_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"133512"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21835"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74512"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60568"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21925"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"18169"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37878"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22015"},{"name":"coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2190"},{"name":"underlying_coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"balances","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"}]'
        ),
        eD = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_curve"},{"type":"address","name":"_token"}],"constant":false,"payable":false,"type":"constructor"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"1890987"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_uamounts"}],"constant":false,"payable":false,"type":"function","gas":"1040945"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"1708651"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3881601"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_uamount"}],"constant":false,"payable":false,"type":"function"},{"name":"withdraw_donated_dust","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"63973"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1680"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1710"},{"name":"curve","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"}]'
        ),
        eT = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"1535185"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"6067881"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"9327083"},{"name":"get_dy","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3454227"},{"name":"get_dx","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"3454232"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3454087"},{"name":"get_dx_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"3454093"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"7030208"},{"name":"exchange_underlying","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"7046149"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"240409"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"9326310"},{"name":"commit_new_parameters","outputs":[],"inputs":[{"type":"uint256","name":"amplification"},{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"145867"},{"name":"apply_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"133482"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74482"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60538"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21895"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22667"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37848"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21985"},{"name":"coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"underlying_coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2190"},{"name":"balances","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2051"},{"name":"fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"future_A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"}]'
        ),
        eS = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_curve"},{"type":"address","name":"_token"}],"constant":false,"payable":false,"type":"constructor"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"3164560"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_uamounts"}],"constant":false,"payable":false,"type":"function","gas":"1067523"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"1752981"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3881601"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_uamount"}],"constant":false,"payable":false,"type":"function"},{"name":"withdraw_donated_dust","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"63973"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1680"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1710"},{"name":"curve","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"}]'
        ),
        eO = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"1535185"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"6067881"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"9327083"},{"name":"get_dy","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3454227"},{"name":"get_dx","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"3454232"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3454087"},{"name":"get_dx_underlying","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"3454093"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"7030208"},{"name":"exchange_underlying","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"7046149"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"240409"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"9326310"},{"name":"commit_new_parameters","outputs":[],"inputs":[{"type":"uint256","name":"amplification"},{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"145867"},{"name":"apply_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"133482"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74482"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60538"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21895"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22667"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37848"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21985"},{"name":"coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"underlying_coins","outputs":[{"type":"address","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2190"},{"name":"balances","outputs":[{"type":"uint256","name":"out"}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2051"},{"name":"fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"future_A","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_owner","outputs":[{"type":"address","name":"out"}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"}]'
        ),
        eF = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_curve"},{"type":"address","name":"_token"}],"constant":false,"payable":false,"type":"constructor"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"166032"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_uamounts"}],"constant":false,"payable":false,"type":"function","gas":"101481"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"125088"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3881771"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_uamount"}],"constant":false,"payable":false,"type":"function"},{"name":"withdraw_donated_dust","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"63973"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1680"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1710"},{"name":"curve","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"}]'
        ),
        eB = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1570535"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"6103471"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"9331701"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3489637"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3489467"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"7034253"},{"name":"exchange_underlying","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"7050488"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"241191"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"9330864"},{"name":"commit_new_parameters","outputs":[],"inputs":[{"type":"uint256","name":"amplification"},{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"146045"},{"name":"apply_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"133452"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21775"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74452"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60508"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21865"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"23448"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37818"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21955"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2190"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2021"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2051"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"}]'
        ),
        eR = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardDistribution","type":"address"}],"name":"setRewardDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"snx","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"uni","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        eI = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_curve"},{"type":"address","name":"_token"}],"constant":false,"payable":false,"type":"constructor"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"1952570"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_uamounts"}],"constant":false,"payable":false,"type":"function","gas":"865961"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"uamounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"1403892"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3881771"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_uamount"}],"constant":false,"payable":false,"type":"function"},{"name":"withdraw_donated_dust","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"63973"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1680"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1710"},{"name":"curve","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"}]'
        ),
        eL = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[4]","name":"token_amounts","indexed":false},{"type":"uint256[4]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false,"unit":"sec"},{"type":"uint256","name":"future_time","indexed":false,"unit":"sec"}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false,"unit":"sec"}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[4]","name":"_coins"},{"type":"address[4]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5227"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1333259"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"5242977"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"8088077"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3048740"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"3048570"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"6218629"},{"name":"exchange_underlying","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"6238369"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"241221"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"8087316"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","unit":"sec","name":"_future_time"}],"constant":false,"payable":false,"type":"function","gas":"151847"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"148607"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"110431"},{"name":"apply_new_fee","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"97130"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21865"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74542"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60598"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21955"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"23538"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37908"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22045"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"initial_A_time","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_A_time","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"}]'
        ),
        eN = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false,"unit":"sec"},{"type":"uint256","name":"future_time","indexed":false,"unit":"sec"}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false,"unit":"sec"}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5227"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"967716"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"3810860"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"5858197"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2327087"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2326882"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"4783971"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"153460"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"5857985"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"79380"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_amount"}],"constant":false,"payable":false,"type":"function","gas":"3677379"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","unit":"sec","name":"_future_time"}],"constant":false,"payable":false,"type":"function","gas":"151937"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"148697"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"110521"},{"name":"apply_new_fee","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"97220"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21955"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74632"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60688"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22045"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"12424"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37998"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22135"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2310"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2340"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"initial_A_time","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_A_time","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"}]'
        ),
        eP = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true,"unit":"sec"},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false,"unit":"sec"},{"type":"uint256","name":"future_time","indexed":false,"unit":"sec"}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false,"unit":"sec"}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[3]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"}],"constant":false,"payable":false,"type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5227"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1150488"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"4526955"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"constant":false,"payable":false,"type":"function","gas":"6972762"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2687932"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2687745"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"constant":false,"payable":false,"type":"function","gas":"5499133"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"min_amounts"}],"constant":false,"payable":false,"type":"function","gas":"196975"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"constant":false,"payable":false,"type":"function","gas":"6972281"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"73000"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_amount"}],"constant":false,"payable":false,"type":"function","gas":"4044074"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","unit":"sec","name":"_future_time"}],"constant":false,"payable":false,"type":"function","gas":"151937"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"148697"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"constant":false,"payable":false,"type":"function","gas":"110521"},{"name":"apply_new_fee","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"97220"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"21955"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"constant":false,"payable":false,"type":"function","gas":"74632"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"60688"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22045"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"17565"},{"name":"kill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"37998"},{"name":"unkill_me","outputs":[],"inputs":[],"constant":false,"payable":false,"type":"function","gas":"22135"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2310"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2340"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"initial_A_time","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_A_time","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","unit":"sec","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"}]'
        ),
        eq = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_rewardsDistribution","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nominateNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistribution","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        ej = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5227"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"955150"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"3797461"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"5836477"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2317363"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2317058"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2454671"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"143246"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"5836308"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3660494"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151919"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148637"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110461"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97242"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74572"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60710"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21985"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3481"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9218"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74965"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37998"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22135"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"}]'
        ),
        eU = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[3]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5227"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1133537"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"bool","name":"deposit"}],"stateMutability":"view","type":"function","gas":"4508776"},{"name":"add_liquidity","outputs":[],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6954858"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2673791"},{"name":"exchange","outputs":[],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2818066"},{"name":"remove_liquidity","outputs":[],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"192846"},{"name":"remove_liquidity_imbalance","outputs":[],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6951851"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"4025523"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151919"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148637"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110461"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97242"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74572"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60710"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21985"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3481"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21502"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"111389"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37998"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22135"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"}]'
        ),
        e$ = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        eG = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        eW = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        eY = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        eZ = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        eV = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        eJ = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        eH = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        eK = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        ez = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        eX = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_nexus","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_rewardsDistributor","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"payer","type":"address"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"nexus","outputs":[{"internalType":"contract INexus","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistributor","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistributor","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        eQ = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        e2 = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        e5 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardDistribution","type":"address"}],"name":"setRewardDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"snx","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"uni","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        e0 = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        e6 = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        e1 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardDistribution","type":"address"}],"name":"setRewardDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"snx","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"uni","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        e8 = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        e3 = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"33623"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32551"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14313"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"37758"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3002"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4325"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        e4 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardDistribution","type":"address"}],"name":"setRewardDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"snx","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"uni","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        e9 = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"992460"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3938567"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6136485"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390018"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393224"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617039"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2631854"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163158"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6136334"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4389"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826262"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151894"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148655"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9232"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2520"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"}]'
        ),
        e7 = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"31141"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32919"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14467"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"38200"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3147"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4414"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        te = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_nexus","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_rewardsDistributor","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"payer","type":"address"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":true,"inputs":[],"name":"DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"nexus","outputs":[{"internalType":"contract INexus","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistributor","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistributor","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        tt = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"992460"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3938567"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6136485"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390018"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393224"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617039"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2631854"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163158"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6136334"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4389"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826262"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151894"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148655"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9232"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2520"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"}]'
        ),
        tn = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"31141"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32919"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14467"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"38200"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3147"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4414"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        ta = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"992460"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3938567"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6136485"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390018"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393224"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617039"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2631854"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163158"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6136334"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4389"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826262"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151894"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148655"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9232"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2520"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"}]'
        ),
        ti = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"31141"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32919"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14467"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"38200"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3147"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4414"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        ts = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_rewardsDistribution","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"RewardsDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastPauseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nominateNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistribution","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"name":"setRewardsDuration","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        tu = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5289"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5251"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1007693"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"2008092"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"payable","type":"function","gas":"3177140"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2444404"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"payable","type":"function","gas":"2638539"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"230063"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3240360"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3899991"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151774"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148535"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110371"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"153055"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74543"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"116523"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3453"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"133752"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"130899"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37908"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22045"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"}]'
        ),
        tp = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1009573"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4015448"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6188356"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2447061"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2610010"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"168108"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6188006"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3875211"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151774"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148535"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110371"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97152"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74543"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60620"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3391"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"14947"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74875"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37908"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22045"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"}]'
        ),
        to = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_rewardsDistribution","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"RewardsDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastPauseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nominateNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistribution","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"name":"setRewardsDuration","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        ty = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5205"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5167"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"993138"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"3939815"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138387"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2390383"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2393500"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2617568"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2632475"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"163289"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6138212"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4224"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3826157"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151906"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148667"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9248"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"}]'
        ),
        td = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"34073"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32919"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14467"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"38200"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3147"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4414"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        tm = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false},{"type":"uint256","name":"offpeg_fee_multiplier","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false},{"type":"uint256","name":"offpeg_fee_multiplier","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[3]","name":"_coins"},{"type":"address[3]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_aave_lending_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"},{"type":"uint256","name":"_offpeg_fee_multiplier"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"dynamic_fee","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"}],"stateMutability":"view","type":"function","gas":"10278"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"2731"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2680120"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"_amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"5346581"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"6239547"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"6239577"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"6361682"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"6369753"},{"name":"remove_liquidity","outputs":[{"type":"uint256[3]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"_min_amounts"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4449067"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151954"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148715"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"},{"type":"uint256","name":"new_offpeg_fee_multiplier"}],"stateMutability":"nonpayable","type":"function","gas":"146482"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"133744"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21985"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74723"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60800"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22075"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"71651"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"62276"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38058"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22195"},{"name":"set_aave_referral","outputs":[],"inputs":[{"type":"uint256","name":"referral_code"}],"stateMutability":"nonpayable","type":"function","gas":"37325"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2310"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2340"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2370"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"offpeg_fee_multiplier","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_offpeg_fee_multiplier","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2711"}]'
        ),
        tr = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[],"gas":"45372"},{"stateMutability":"view","type":"function","name":"last_claim","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2424"},{"stateMutability":"view","type":"function","name":"reward_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2658"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_receiver","inputs":[{"name":"_reward_receiver","type":"address"}],"outputs":[],"gas":"37635"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_future_owner","type":"address"}],"outputs":[],"gas":"37665"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"37610"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2568"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2598"}]'
        ),
        tl = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5289"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5251"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1007693"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"2008092"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"payable","type":"function","gas":"3177140"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2444404"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"payable","type":"function","gas":"2638539"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"230063"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3240360"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3899991"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151774"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148535"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110371"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"153055"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74543"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"116523"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3453"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"133752"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"130899"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37908"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22045"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"}]'
        ),
        tc = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_rewardsDistribution","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"RewardsDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastPauseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nominateNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistribution","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"name":"setRewardsDuration","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        tf = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false},{"type":"uint256","name":"offpeg_fee_multiplier","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false},{"type":"uint256","name":"offpeg_fee_multiplier","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address[2]","name":"_coins"},{"type":"address[2]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_aave_lending_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"},{"type":"uint256","name":"_offpeg_fee_multiplier"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"dynamic_fee","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"}],"stateMutability":"view","type":"function","gas":"9662"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"2731"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1115439"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"2219391"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"5315961"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"5315991"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"5437961"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"5443079"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"_min_amounts"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3974152"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151924"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148685"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"},{"type":"uint256","name":"new_offpeg_fee_multiplier"}],"stateMutability":"nonpayable","type":"function","gas":"146452"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"133714"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21955"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74693"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60770"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22045"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"48455"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"42234"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"set_aave_referral","outputs":[],"inputs":[{"type":"uint256","name":"referral_code"}],"stateMutability":"nonpayable","type":"function","gas":"37295"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2310"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2340"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"offpeg_fee_multiplier","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_offpeg_fee_multiplier","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"}]'
        ),
        t_ = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5289"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5251"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1007693"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"2008092"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"payable","type":"function","gas":"3177140"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2444404"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"payable","type":"function","gas":"2638539"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"230063"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3240360"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3899991"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151774"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148535"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110371"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"153055"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74543"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"116523"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3453"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"133752"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"130899"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37908"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22045"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"}]'
        ),
        tb = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"rewardsToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"RewardsDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_rewardsDistributor","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"name":"addReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastPauseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nominateNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewardData","outputs":[{"internalType":"address","name":"rewardsDistributor","type":"address"},{"internalType":"uint256","name":"rewardsDuration","type":"uint256"},{"internalType":"uint256","name":"periodFinish","type":"uint256"},{"internalType":"uint256","name":"rewardRate","type":"uint256"},{"internalType":"uint256","name":"lastUpdateTime","type":"uint256"},{"internalType":"uint256","name":"rewardPerTokenStored","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rewardTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_rewardsDistributor","type":"address"}],"name":"setRewardsDistributor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"name":"setRewardsDuration","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        tg = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"address","name":"_base_pool"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1012517"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"bool","name":"_is_deposit"}],"stateMutability":"view","type":"function","gas":"4018957"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6262052"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"}],"stateMutability":"view","type":"function","gas":"2450192"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"}],"stateMutability":"view","type":"function","gas":"2453370"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"},{"type":"uint256","name":"_min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2683098"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"},{"type":"uint256","name":"_min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2692022"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"_min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"160546"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6255721"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"4389"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3946500"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151894"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148655"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"_new_fee"},{"type":"uint256","name":"_new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"9000"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"base_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"base_cache_updated","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2520"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"}]'
        ),
        tv = JSON.parse(
          '[{"outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_token"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"34073"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[4]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"32919"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"14467"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"38200"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"3147"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[4]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4414"},{"name":"pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1241"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1271"},{"name":"base_pool","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1301"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1440"},{"name":"base_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1470"}]'
        ),
        tw = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256[3]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[3]","name":"_coins"},{"type":"address[3]","name":"_underlying_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1198966"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"4731095"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2814151"},{"name":"get_dx","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"2814012"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2813991"},{"name":"get_dx_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dy"}],"stateMutability":"view","type":"function","gas":"2813825"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"6347170"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"6354444"},{"name":"remove_liquidity","outputs":[{"type":"uint256[3]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"_min_amounts"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[3]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"view","type":"function"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"},{"type":"bool","name":"_use_underlying"}],"stateMutability":"nonpayable","type":"function"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151984"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148745"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110581"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97362"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74753"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60830"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22105"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3601"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"12875"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38088"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22225"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2310"},{"name":"underlying_coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2340"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2370"},{"name":"previous_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2400"},{"name":"block_timestamp_last","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2561"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2591"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2621"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2651"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2711"}]'
        ),
        th = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5199"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5161"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1007693"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"bool","name":"_is_deposit"}],"stateMutability":"view","type":"function","gas":"4007542"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6284305"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"}],"stateMutability":"view","type":"function","gas":"2444494"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"},{"type":"uint256","name":"_min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2715006"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"_min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"274634"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6283981"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"53000"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3977693"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151744"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148505"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"_new_fee"},{"type":"uint256","name":"_new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110341"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97122"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21775"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74513"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60590"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21865"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3361"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"14917"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74845"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37878"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2100"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2051"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"previous_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2220"},{"name":"block_timestamp_last","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"lp_token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"}]'
        ),
        tx = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"address","name":"_pool_token"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5289"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5251"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1007693"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"bool","name":"is_deposit"}],"stateMutability":"view","type":"function","gas":"2008092"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"stateMutability":"payable","type":"function","gas":"3177140"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function","gas":"2444404"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"payable","type":"function","gas":"2638539"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"230063"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"amounts"},{"type":"uint256","name":"max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3240360"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"1375"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3899991"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"151774"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148535"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"new_fee"},{"type":"uint256","name":"new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110371"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"153055"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21805"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74543"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"116523"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21895"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3453"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"133752"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"130899"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37908"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22045"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2130"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2171"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"}]'
        ),
        tM = JSON.parse(
          '[{"name":"Transfer","inputs":[{"type":"address","name":"sender","indexed":true},{"type":"address","name":"receiver","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"type":"address","name":"owner","indexed":true},{"type":"address","name":"spender","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"name":"initialize","outputs":[],"inputs":[{"type":"string","name":"_name"},{"type":"string","name":"_symbol"},{"type":"address","name":"_coin"},{"type":"uint256","name":"_decimals"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"address","name":"_admin"}],"stateMutability":"nonpayable","type":"function","gas":"470049"},{"name":"decimals","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"291"},{"name":"transfer","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"75402"},{"name":"transferFrom","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"112037"},{"name":"approve","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_spender"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"37854"},{"name":"get_previous_balances","outputs":[{"type":"uint256[2]","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2254"},{"name":"get_balances","outputs":[{"type":"uint256[2]","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2284"},{"name":"get_twap_balances","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256[2]","name":"_first_balances"},{"type":"uint256[2]","name":"_last_balances"},{"type":"uint256","name":"_time_elapsed"}],"stateMutability":"view","type":"function","gas":"1522"},{"name":"get_price_cumulative_last","outputs":[{"type":"uint256[2]","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2344"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"621"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5859"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5821"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1011891"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"bool","name":"_is_deposit"}],"stateMutability":"view","type":"function"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"}],"stateMutability":"nonpayable","type":"function"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function"},{"name":"get_dy_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"}],"stateMutability":"view","type":"function"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function"},{"name":"exchange_underlying","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_burn_amount"},{"type":"uint256[2]","name":"_min_amounts"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"}],"stateMutability":"nonpayable","type":"function"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_burn_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_burn_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_received"}],"stateMutability":"nonpayable","type":"function"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"152464"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"149225"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3601"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"11347"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2141"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2310"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"block_timestamp_last","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"name","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"8813"},{"name":"symbol","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"7866"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2686"},{"name":"allowance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"2931"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"}]'
        ),
        tA = JSON.parse(
          '[{"outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_pool"},{"type":"uint256[4]","name":"_deposit_amounts"},{"type":"uint256","name":"_min_mint_amount"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity","outputs":[{"type":"uint256[4]","name":""}],"inputs":[{"type":"address","name":"_pool"},{"type":"uint256","name":"_burn_amount"},{"type":"uint256[4]","name":"_min_amounts"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_pool"},{"type":"uint256","name":"_burn_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_pool"},{"type":"uint256[4]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"}],"stateMutability":"nonpayable","type":"function"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_pool"},{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"1650"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_pool"},{"type":"uint256[4]","name":"_amounts"},{"type":"bool","name":"_is_deposit"}],"stateMutability":"view","type":"function","gas":"2717"}]'
        ),
        tE = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_rewardsDistribution","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerNominated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newDuration","type":"uint256"}],"name":"RewardsDurationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"getReward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastPauseTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"nominateNewOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"nominatedOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"recoverERC20","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDistribution","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"rewardsToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_rewardsDistribution","type":"address"}],"name":"setRewardsDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"name":"setRewardsDuration","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        tC = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_prices","type":"uint256[2]"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3361"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3391"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3421"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"468"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"582"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"597"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"11991"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"21673"},{"stateMutability":"view","type":"function","name":"fee_calc","inputs":[{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"11096"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"11582"},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3122"},{"stateMutability":"view","type":"function","name":"calc_token_fee","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"26582"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[],"gas":"738687"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[3]"}],"outputs":[],"gas":"233981"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3429"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"13432"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[],"gas":"648579"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"389808"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"163102"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"157247"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"306190"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"683438"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"23222"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"77260"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"65937"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"23312"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40535"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23372"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"38505"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3378"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3528"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3588"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3678"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3708"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3738"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3768"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3798"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3828"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3858"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3888"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3918"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4057"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3978"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"4008"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"4038"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4068"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4098"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4128"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"4158"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4188"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4218"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4248"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"4278"}]'
        ),
        tk = JSON.parse(
          '[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_pool","type":"address"}],"outputs":[]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2568"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2598"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"2737"}]'
        ),
        tD = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"471502"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"318"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"77977"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"115912"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"37851"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"4707"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"468"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10764"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10726"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"848656"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3336308"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2117591"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1100"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"162101"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157565"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7740"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"33182"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3093"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3123"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3108"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3138"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3168"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3198"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13488"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11241"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3533"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3778"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3378"}]'
        ),
        tT = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[],"name":"constructor"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"426"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"558"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"595"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"6499"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"9743"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"360707"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16670379"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4557895"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"17621237"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"}],"outputs":[],"gas":"174292"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5182497"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7264"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16601846"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"3226971"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"153778"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"150123"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"293264"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"3504861"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"21722"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"76107"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"61722"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"21812"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"37735"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"21872"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"37062"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1976"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2006"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2036"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2066"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2096"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2126"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2156"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2186"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2216"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2246"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2276"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2306"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2336"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2366"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2396"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2426"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2456"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2486"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2516"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2546"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2576"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2606"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2681"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2666"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2696"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2726"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2756"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2786"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2816"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"2846"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2876"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2906"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2936"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2966"}]'
        ),
        tS = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_pool","type":"address"},{"name":"_base_pool","type":"address"}],"outputs":[],"name":"constructor"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4244"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[],"gas":"26265"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"20845"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"outputs":[],"gas":"37086"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"}],"outputs":[],"gas":"13300"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"9447"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[4]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4967"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6555"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"1505"},{"stateMutability":"view","type":"function","name":"underlying_coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"1541"},{"stateMutability":"view","type":"function","name":"pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"1526"},{"stateMutability":"view","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"1556"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"1586"}]'
        ),
        tO = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[],"name":"constructor"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"426"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"558"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"595"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"6499"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"9743"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"360707"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16670379"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4557895"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"17621237"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"}],"outputs":[],"gas":"174292"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5182497"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7264"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16601846"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"3226971"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"153778"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"150123"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"293264"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"3504861"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"21722"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"76107"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"61722"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"21812"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"37735"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"21872"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"37062"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1976"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2006"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2036"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2066"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2096"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2126"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2156"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2186"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2216"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2246"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2276"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2306"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2336"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2366"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2396"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2426"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2456"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2486"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2516"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2546"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2576"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2606"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2681"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2666"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2696"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2726"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2756"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2786"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2816"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"2846"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2876"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2906"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2936"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2966"}]'
        ),
        tF = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[],"name":"constructor"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"516"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"648"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"685"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"6589"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"9833"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"360797"},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16709798"},{"stateMutability":"payable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16709596"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4558015"},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"17626221"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"},{"name":"use_eth","type":"bool"}],"outputs":[],"gas":"246329"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5182647"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7384"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16638278"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"3227185"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"153898"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"150243"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"293384"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"3505075"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"21842"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"76227"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"61842"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"21932"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"37855"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"21992"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"37182"},{"stateMutability":"view","type":"function","name":"lp_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"214446"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2126"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2156"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2186"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2216"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2246"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2276"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2306"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2336"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2366"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2396"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2426"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2456"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2486"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2516"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2546"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2576"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2606"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2636"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2666"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2696"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2726"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2756"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2831"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2816"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2846"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2876"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2906"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2936"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2966"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"2996"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3026"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3056"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3086"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3116"}]'
        ),
        tB = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"},{"name":"_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_base_pool","type":"address"},{"name":"_redemption_price_snap","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10374"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10336"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2070135"},{"stateMutability":"view","type":"function","name":"get_virtual_price_2","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2295357"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4038330"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6231201"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2483148"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2494262"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2723828"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2754318"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"174423"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6216452"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"8658"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4009643"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"159429"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"154890"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[],"gas":"112848"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"103529"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"22982"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"77020"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"65697"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"23072"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7928"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"22177"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40355"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23192"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3277"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3307"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3288"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3318"},{"stateMutability":"view","type":"function","name":"redemption_price_snap","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3348"},{"stateMutability":"view","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3378"},{"stateMutability":"view","type":"function","name":"base_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"base_cache_updated","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"base_coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3577"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3528"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3588"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3678"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3708"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3738"}]'
        ),
        tR = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_pool","type":"address"},{"name":"_token","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"86660"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"outputs":[{"name":"","type":"uint256[4]"}],"gas":"82960"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"38114"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"88693"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"9894"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"10963"},{"stateMutability":"view","type":"function","name":"pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2568"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2598"},{"stateMutability":"view","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2628"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"2767"},{"stateMutability":"view","type":"function","name":"base_coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"2797"}]'
        ),
        tI = JSON.parse(
          '[{"name":"Transfer","inputs":[{"type":"address","name":"sender","indexed":true},{"type":"address","name":"receiver","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"type":"address","name":"owner","indexed":true},{"type":"address","name":"spender","indexed":true},{"type":"uint256","name":"value","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"int128","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"int128","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[2]","name":"token_amounts","indexed":false},{"type":"uint256[2]","name":"fees","indexed":false},{"type":"uint256","name":"invariant","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"admin_fee","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"type":"uint256","name":"old_A","indexed":false},{"type":"uint256","name":"new_A","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"type":"uint256","name":"A","indexed":false},{"type":"uint256","name":"t","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"string","name":"_name"},{"type":"string","name":"_symbol"},{"type":"address","name":"_owner"},{"type":"address[2]","name":"_coins"},{"type":"uint256","name":"_A"},{"type":"uint256","name":"_fee"},{"type":"uint256","name":"_admin_fee"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"decimals","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"261"},{"name":"transfer","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"74713"},{"name":"transferFrom","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_from"},{"type":"address","name":"_to"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"111355"},{"name":"approve","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_spender"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"37794"},{"name":"A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5439"},{"name":"A_precise","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"5401"},{"name":"get_virtual_price","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1009729"},{"name":"calc_token_amount","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"bool","name":"_is_deposit"}],"stateMutability":"view","type":"function","gas":"4016564"},{"name":"add_liquidity","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6262149"},{"name":"get_dy","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"}],"stateMutability":"view","type":"function","gas":"2447901"},{"name":"exchange","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"i"},{"type":"int128","name":"j"},{"type":"uint256","name":"_dx"},{"type":"uint256","name":"_min_dy"}],"stateMutability":"nonpayable","type":"function","gas":"2610850"},{"name":"remove_liquidity","outputs":[{"type":"uint256[2]","name":""}],"inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[2]","name":"_min_amounts"}],"stateMutability":"nonpayable","type":"function","gas":"238744"},{"name":"remove_liquidity_imbalance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256[2]","name":"_amounts"},{"type":"uint256","name":"_max_burn_amount"}],"stateMutability":"nonpayable","type":"function","gas":"6261825"},{"name":"calc_withdraw_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"}],"stateMutability":"view","type":"function","gas":"1609"},{"name":"remove_liquidity_one_coin","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_token_amount"},{"type":"int128","name":"i"},{"type":"uint256","name":"_min_amount"}],"stateMutability":"nonpayable","type":"function","gas":"3947982"},{"name":"ramp_A","outputs":[],"inputs":[{"type":"uint256","name":"_future_A"},{"type":"uint256","name":"_future_time"}],"stateMutability":"nonpayable","type":"function","gas":"152014"},{"name":"stop_ramp_A","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"148775"},{"name":"commit_new_fee","outputs":[],"inputs":[{"type":"uint256","name":"_new_fee"},{"type":"uint256","name":"_new_admin_fee"}],"stateMutability":"nonpayable","type":"function","gas":"110491"},{"name":"apply_new_fee","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"97272"},{"name":"revert_new_parameters","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"21925"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"_owner"}],"stateMutability":"nonpayable","type":"function","gas":"74663"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"60740"},{"name":"revert_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22015"},{"name":"admin_balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"i"}],"stateMutability":"view","type":"function","gas":"3511"},{"name":"withdraw_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"15067"},{"name":"donate_admin_fees","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"74995"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38028"},{"name":"unkill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"22165"},{"name":"coins","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2250"},{"name":"balances","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2280"},{"name":"fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2201"},{"name":"admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"initial_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"future_A","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"initial_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"},{"name":"future_A_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2381"},{"name":"admin_actions_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2411"},{"name":"transfer_ownership_deadline","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2441"},{"name":"future_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2471"},{"name":"future_admin_fee","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2501"},{"name":"future_owner","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2531"},{"name":"name","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"8963"},{"name":"symbol","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"8016"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2836"},{"name":"allowance","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"3081"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2681"}]'
        ),
        tL = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[4]","indexed":false},{"name":"fees","type":"uint256[4]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[4]","indexed":false},{"name":"fees","type":"uint256[4]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[4]","indexed":false},{"name":"fees","type":"uint256[4]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[4]"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"outputs":[{"name":"","type":"uint256[4]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_future_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"pure","type":"function","name":"coins","inputs":[{"name":"_i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"pure","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"pure","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"pure","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
        ),
        tN = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"},{"name":"_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10058"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10058"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"804988"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1593467"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2546841"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1149036"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1307513"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"169716"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2546560"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"989"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1620521"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"158394"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"154617"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[],"gas":"113298"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"103621"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"22901"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"78536"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"66804"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"22991"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7769"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"31496"},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[],"gas":"82442"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40304"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23141"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3225"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3240"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3270"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3390"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3420"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3450"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3480"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3510"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3540"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3570"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3600"}]'
        ),
        tP = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"},{"name":"_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_p","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_ma_exp_time","inputs":[{"name":"_ma_exp_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"ma_exp_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_last_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        tq = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"},{"name":"_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
        ),
        tj = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"new_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyNewFee","inputs":[{"name":"fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_factory","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_oracle_method_id","type":"bytes4"},{"name":"_oracle_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"last_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ema_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"stored_rates","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_p","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_ma_exp_time","inputs":[{"name":"_ma_exp_time","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_action_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_exp_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_last_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"oracle_method","inputs":[],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        tU = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"uint256"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"uint256"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"amount","type":"uint256"},{"indexed":false,"name":"n1","type":"int256"},{"indexed":false,"name":"n2","type":"int256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"amount_borrowed","type":"uint256"},{"indexed":false,"name":"amount_collateral","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"rate","type":"uint256"},{"indexed":false,"name":"rate_mul","type":"uint256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"SetRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"fee","type":"uint256"}],"name":"SetFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"fee","type":"uint256"}],"name":"SetAdminFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"price_oracle","type":"address"}],"name":"SetPriceOracle","type":"event"},{"inputs":[{"name":"_borrowed_token","type":"address"},{"name":"_borrowed_precision","type":"uint256"},{"name":"_collateral_token","type":"address"},{"name":"_collateral_precision","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_sqrt_band_ratio","type":"uint256"},{"name":"_log_A_ratio","type":"int256"},{"name":"_base_price","type":"uint256"},{"name":"fee","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"_price_oracle_contract","type":"address"}],"name":"constructor","outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"_admin","type":"address"}],"name":"set_admin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"price_oracle","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dynamic_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_rate_mul","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_base_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"n","type":"int256"}],"name":"p_current_up","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"n","type":"int256"}],"name":"p_current_down","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"n","type":"int256"}],"name":"p_oracle_up","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"n","type":"int256"}],"name":"p_oracle_down","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_p","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"user","type":"address"}],"name":"read_user_tick_numbers","outputs":[{"name":"","type":"int256[2]"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"n_end","type":"int256"}],"name":"can_skip_bands","outputs":[{"name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"active_band_with_skip","outputs":[{"name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"user","type":"address"}],"name":"has_liquidity","outputs":[{"name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"user","type":"address"},{"name":"amount","type":"uint256"},{"name":"n1","type":"int256"},{"name":"n2","type":"int256"}],"name":"deposit_range","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"user","type":"address"},{"name":"frac","type":"uint256"}],"name":"withdraw","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"in_amount","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"in_amount","type":"uint256"}],"name":"get_dxdy","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"out_amount","type":"uint256"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"out_amount","type":"uint256"}],"name":"get_dydx","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"in_amount","type":"uint256"},{"name":"min_amount","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"out_amount","type":"uint256"},{"name":"max_amount","type":"uint256"}],"name":"exchange_dy","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"out_amount","type":"uint256"},{"name":"max_amount","type":"uint256"},{"name":"_for","type":"address"}],"name":"exchange_dy","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"user","type":"address"}],"name":"get_y_up","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"user","type":"address"}],"name":"get_x_down","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"user","type":"address"}],"name":"get_sum_xy","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"user","type":"address"}],"name":"get_xy","outputs":[{"name":"","type":"uint256[][2]"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"p","type":"uint256"}],"name":"get_amount_for_price","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"rate","type":"uint256"}],"name":"set_rate","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint256"}],"name":"set_fee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint256"}],"name":"set_admin_fee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reset_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"liquidity_mining_callback","type":"address"}],"name":"set_callback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"active_band","outputs":[{"name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"min_band","outputs":[{"name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"max_band","outputs":[{"name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_fees_x","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_fees_y","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price_oracle_contract","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"int256"}],"name":"bands_x","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"int256"}],"name":"bands_y","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity_mining_callback","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"}]'
        ),
        t$ = em({
          compound: {
            name: 'compound',
            full_name: 'compound',
            symbol: 'compound',
            reference_asset: 'USD',
            swap_address: '0xA2B47E3D5c44877cca798226B7B8118F9BFb7A56',
            token_address: '0x845838DF265Dcd2c412A1Dc9e959c7d08537f8a2',
            gauge_address: '0x7ca5b0a2910B33e9759DC7dDB0413949071D7575',
            deposit_address: '0xeB21209ae4C2c9FF2a86ACA31E123764A3B6Bc06',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC'],
            wrapped_coins: ['cDAI', 'cUSDC'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
            ],
            wrapped_coin_addresses: [
              '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',
              '0x39AA39c021dfbaE8faC545936693aC917d5E7563',
            ],
            underlying_decimals: [18, 6],
            wrapped_decimals: [8, 8],
            use_lending: [!0, !0],
            swap_abi: eE,
            gauge_abi: eb,
            deposit_abi: eA,
          },
          usdt: {
            name: 'usdt',
            full_name: 'usdt',
            symbol: 'usdt',
            reference_asset: 'USD',
            swap_address: '0x52EA46506B9CC5Ef470C5bf89f17Dc28bB35D85C',
            token_address: '0x9fC689CCaDa600B6DF723D9E47D84d76664a1F23',
            gauge_address: '0xBC89cd85491d81C6AD2954E6d0362Ee29fCa8F53',
            deposit_address: '0xac795D2c97e60DF6a99ff1c814727302fD747a80',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT'],
            wrapped_coins: ['cDAI', 'cUSDC', 'USDT'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',
              '0x39AA39c021dfbaE8faC545936693aC917d5E7563',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [8, 8, 6],
            use_lending: [!0, !0, !1],
            swap_abi: ek,
            gauge_abi: eb,
            deposit_abi: eC,
          },
          y: {
            name: 'y',
            full_name: 'y',
            symbol: 'Y',
            reference_asset: 'USD',
            swap_address: '0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',
            token_address: '0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8',
            gauge_address: '0xFA712EE4788C042e2B7BB55E6cb8ec569C4530c1',
            deposit_address: '0xbBC81d23Ea2c3ec7e56D39296F0cbB648873a5d3',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT', 'TUSD'],
            wrapped_coins: ['yDAI', 'yUSDC', 'yUSDT', 'yTUSD'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x0000000000085d4780B73119b644AE5ecd22b376',
            ],
            wrapped_coin_addresses: [
              '0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01',
              '0xd6aD7a6750A7593E092a9B218d66C0A814a3436e',
              '0x83f798e925BcD4017Eb265844FDDAbb448f1707D',
              '0x73a052500105205d34Daf004eAb301916DA8190f',
            ],
            underlying_decimals: [18, 6, 6, 18],
            wrapped_decimals: [18, 6, 6, 18],
            use_lending: [!0, !0, !0, !0],
            swap_abi: eT,
            gauge_abi: eb,
            deposit_abi: eD,
          },
          busd: {
            name: 'busd',
            full_name: 'busd',
            symbol: 'busd',
            reference_asset: 'USD',
            swap_address: '0x79a8C46DeA5aDa233ABaFFD40F3A0A2B1e5A4F27',
            token_address: '0x3B3Ac5386837Dc563660FB6a0937DFAa5924333B',
            gauge_address: '0x69Fb7c45726cfE2baDeE8317005d3F94bE838840',
            deposit_address: '0xb6c057591E073249F2D9D88Ba59a46CFC9B59EdB',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT', 'BUSD'],
            wrapped_coins: ['byDAI', 'byUSDC', 'byUSDT', 'yBUSD'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x4Fabb145d64652a948d72533023f6E7A623C7C53',
            ],
            wrapped_coin_addresses: [
              '0xC2cB1040220768554cf699b0d863A3cd4324ce32',
              '0x26EA744E5B887E5205727f55dFBE8685e3b21951',
              '0xE6354ed5bC4b393a5Aad09f21c46E101e692d447',
              '0x04bC0Ab673d88aE9dbC9DA2380cB6B79C4BCa9aE',
            ],
            underlying_decimals: [18, 6, 6, 18],
            wrapped_decimals: [18, 6, 6, 18],
            use_lending: [!0, !0, !0, !0],
            swap_abi: eO,
            gauge_abi: eb,
            deposit_abi: eS,
          },
          susd: {
            name: 'susd',
            full_name: 'susd',
            symbol: 'susd',
            reference_asset: 'USD',
            swap_address: '0xA5407eAE9Ba41422680e2e00537571bcC53efBfD',
            token_address: '0xC25a3A3b969415c80451098fa907EC722572917F',
            gauge_address: '0xA90996896660DEcC6E997655E065b23788857849',
            deposit_address: '0xFCBa3E75865d2d561BE8D220616520c171F12851',
            sCurveRewards_address: '0xdcb6a51ea3ca5d3fd898fd6564757c7aaec3ca92',
            is_plain: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT', 'sUSD'],
            wrapped_coins: ['DAI', 'USDC', 'USDT', 'sUSD'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',
            ],
            wrapped_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',
            ],
            underlying_decimals: [18, 6, 6, 18],
            wrapped_decimals: [18, 6, 6, 18],
            swap_abi: eB,
            gauge_abi: eg,
            deposit_abi: eF,
            sCurveRewards_abi: eR,
          },
          pax: {
            name: 'pax',
            full_name: 'pax',
            symbol: 'pax',
            reference_asset: 'USD',
            swap_address: '0x06364f10B501e868329afBc005b3492902d6C763',
            token_address: '0xD905e2eaeBe188fc92179b6350807D8bd91Db0D8',
            gauge_address: '0x64E3C23bfc40722d3B649844055F1D51c1ac041d',
            deposit_address: '0xA50cCc70b6a011CffDdf45057E39679379187287',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT', 'USDP'],
            wrapped_coins: ['ycDAI', 'ycUSDC', 'ycUSDT', 'USDP'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x8E870D67F660D95d5be530380D0eC0bd388289E1',
            ],
            wrapped_coin_addresses: [
              '0x99d1Fa417f94dcD62BfE781a1213c092a47041Bc',
              '0x9777d7E2b60bB01759D0E2f8be2095df444cb07E',
              '0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59',
              '0x8E870D67F660D95d5be530380D0eC0bd388289E1',
            ],
            underlying_decimals: [18, 6, 6, 18],
            wrapped_decimals: [18, 6, 6, 18],
            use_lending: [!0, !0, !0, !1],
            swap_abi: eL,
            gauge_abi: eb,
            deposit_abi: eI,
          },
          ren: {
            name: 'ren',
            full_name: 'ren',
            symbol: 'ren',
            reference_asset: 'BTC',
            swap_address: '0x93054188d876f558f4a66B2EF1d97d16eDf0895B',
            token_address: '0x49849C98ae39Fff122806C06791Fa73784FB3675',
            gauge_address: '0xB1F2cdeC61db658F091671F5f199635aEF202CAC',
            is_plain: !0,
            underlying_coins: ['renBTC', 'WBTC'],
            wrapped_coins: ['renBTC', 'WBTC'],
            underlying_coin_addresses: [
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
            ],
            wrapped_coin_addresses: [
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
            ],
            underlying_decimals: [8, 8],
            wrapped_decimals: [8, 8],
            swap_abi: eN,
            gauge_abi: eb,
          },
          sbtc: {
            name: 'sbtc',
            full_name: 'sbtc',
            symbol: 'sbtc',
            reference_asset: 'BTC',
            swap_address: '0x7fC77b5c7614E1533320Ea6DDc2Eb61fa00A9714',
            token_address: '0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3',
            gauge_address: '0x705350c4BcD35c9441419DdD5d2f097d7a55410F',
            sCurveRewards_address: '0x13C1542A468319688B89E323fe9A3Be3A90EBb27',
            is_plain: !0,
            underlying_coins: ['renBTC', 'WBTC', 'sBTC'],
            wrapped_coins: ['renBTC', 'WBTC', 'sBTC'],
            underlying_coin_addresses: [
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            wrapped_coin_addresses: [
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            underlying_decimals: [8, 8, 18],
            wrapped_decimals: [8, 8, 18],
            swap_abi: eP,
            gauge_abi: eg,
            sCurveRewards_abi: eq,
          },
          hbtc: {
            name: 'hbtc',
            full_name: 'hbtc',
            symbol: 'hbtc',
            reference_asset: 'BTC',
            swap_address: '0x4CA9b3063Ec5866A4B82E437059D2C43d1be596F',
            token_address: '0xb19059ebb43466C323583928285a49f558E572Fd',
            gauge_address: '0x4c18E409Dc8619bFb6a1cB56D114C3f592E0aE79',
            is_plain: !0,
            underlying_coins: ['HBTC', 'WBTC'],
            wrapped_coins: ['HBTC', 'WBTC'],
            underlying_coin_addresses: [
              '0x0316EB71485b0Ab14103307bf65a021042c6d380',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
            ],
            wrapped_coin_addresses: [
              '0x0316EB71485b0Ab14103307bf65a021042c6d380',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
            ],
            underlying_decimals: [18, 8],
            wrapped_decimals: [18, 8],
            swap_abi: ej,
            gauge_abi: eb,
          },
          '3pool': {
            name: '3pool',
            full_name: '3pool',
            symbol: '3pool',
            reference_asset: 'USD',
            swap_address: '0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7',
            token_address: '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            gauge_address: '0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A',
            is_plain: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT'],
            wrapped_coins: ['DAI', 'USDC', 'USDT'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            swap_abi: eU,
            gauge_abi: eb,
          },
          gusd: {
            name: 'gusd',
            full_name: 'gusd',
            symbol: 'gusd',
            reference_asset: 'USD',
            swap_address: '0x4f062658EaAF2C1ccf8C8e36D6824CDf41167956',
            token_address: '0xD2967f45c4f384DEEa880F807Be904762a3DeA07',
            gauge_address: '0xC5cfaDA84E902aD92DD40194f0883ad49639b023',
            deposit_address: '0x64448B78561690B70E17CBE8029a3e5c1bB7136e',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['GUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['GUSD', '3Crv'],
            underlying_coin_addresses: [
              '0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [2, 18, 6, 6],
            wrapped_decimals: [2, 18],
            swap_abi: e$,
            gauge_abi: eb,
            deposit_abi: eG,
          },
          husd: {
            name: 'husd',
            full_name: 'husd',
            symbol: 'husd',
            reference_asset: 'USD',
            swap_address: '0x3eF6A01A0f81D6046290f3e2A8c5b843e738E604',
            token_address: '0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858',
            gauge_address: '0x2db0E83599a91b508Ac268a6197b8B14F5e72840',
            deposit_address: '0x09672362833d8f703D5395ef3252D4Bfa51c15ca',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['HUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['HUSD', '3Crv'],
            underlying_coin_addresses: [
              '0xdF574c24545E5FfEcb9a659c229253D4111d87e1',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0xdF574c24545E5FfEcb9a659c229253D4111d87e1',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [8, 18, 6, 6],
            wrapped_decimals: [8, 18],
            swap_abi: eW,
            gauge_abi: eb,
            deposit_abi: eY,
          },
          usdk: {
            name: 'usdk',
            full_name: 'usdk',
            symbol: 'usdk',
            reference_asset: 'USD',
            swap_address: '0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb',
            token_address: '0x97E2768e8E73511cA874545DC5Ff8067eB19B787',
            gauge_address: '0xC2b1DF84112619D190193E48148000e3990Bf627',
            deposit_address: '0xF1f85a74AD6c64315F85af52d3d46bF715236ADc',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['USDK', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['USDK', '3Crv'],
            underlying_coin_addresses: [
              '0x1c48f86ae57291F7686349F12601910BD8D470bb',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x1c48f86ae57291F7686349F12601910BD8D470bb',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: eZ,
            gauge_abi: eb,
            deposit_abi: eV,
          },
          usdn: {
            name: 'usdn',
            full_name: 'usdn',
            symbol: 'usdn',
            reference_asset: 'USD',
            swap_address: '0x0f9cb53Ebe405d49A0bbdBD291A65Ff571bC83e1',
            token_address: '0x4f3E8F405CF5aFC05D68142F3783bDfE13811522',
            gauge_address: '0xF98450B5602fa59CC66e1379DFfB6FDDc724CfC4',
            deposit_address: '0x094d12e5b541784701FD8d65F11fc0598FBC6332',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['USDN', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['USDN', '3Crv'],
            underlying_coin_addresses: [
              '0x674C6Ad92Fd080e4004b2312b45f796a192D27a0',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x674C6Ad92Fd080e4004b2312b45f796a192D27a0',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: eJ,
            gauge_abi: eb,
            deposit_abi: eH,
          },
          musd: {
            name: 'musd',
            full_name: 'musd',
            symbol: 'musd',
            reference_asset: 'USD',
            swap_address: '0x8474DdbE98F5aA3179B3B3F5942D724aFcdec9f6',
            token_address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',
            gauge_address: '0x5f626c30EC1215f4EdCc9982265E8b1F411D1352',
            deposit_address: '0x803A2B40c5a9BB2B86DD630B274Fa2A9202874C2',
            sCurveRewards_address: '0xE6E6E25EfdA5F69687aA9914f8d750C523A1D261',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['mUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['mUSD', '3Crv'],
            underlying_coin_addresses: [
              '0xe2f2a5C287993345a840Db3B0845fbC70f5935a5',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0xe2f2a5C287993345a840Db3B0845fbC70f5935a5',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: eK,
            gauge_abi: eg,
            deposit_abi: ez,
            sCurveRewards_abi: eX,
          },
          rsv: {
            name: 'rsv',
            full_name: 'rsv',
            symbol: 'rsv',
            reference_asset: 'USD',
            swap_address: '0xC18cC39da8b11dA8c3541C598eE022258F9744da',
            token_address: '0xC2Ee6b0334C261ED60C72f6054450b61B8f18E35',
            gauge_address: '0x4dC4A289a8E33600D8bD4cf5F6313E43a37adec7',
            deposit_address: '0xBE175115BF33E12348ff77CcfEE4726866A0Fbd5',
            sCurveRewards_address: '0xAD4768F408dD170e62E074188D81A29AE31B8Fd8',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['RSV', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['RSV', '3Crv'],
            underlying_coin_addresses: [
              '0x196f4727526eA7FB1e17b2071B3d8eAA38486988',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x196f4727526eA7FB1e17b2071B3d8eAA38486988',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: eQ,
            gauge_abi: eg,
            deposit_abi: e2,
            sCurveRewards_abi: e5,
          },
          tbtc: {
            name: 'tbtc',
            full_name: 'tbtc',
            symbol: 'tbtc',
            reference_asset: 'BTC',
            swap_address: '0xC25099792E9349C7DD09759744ea681C7de2cb66',
            token_address: '0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd',
            gauge_address: '0x6828bcF74279eE32f2723eC536c22c51Eed383C6',
            deposit_address: '0xaa82ca713D94bBA7A89CEAB55314F9EfFEdDc78c',
            sCurveRewards_address: '0xAF379f0228ad0d46bB7B4f38f9dc9bCC1ad0360c',
            is_meta: !0,
            base_pool: 'sbtc',
            underlying_coins: ['TBTC', 'renBTC', 'WBTC', 'sBTC'],
            wrapped_coins: ['TBTC', 'sbtcCrv'],
            underlying_coin_addresses: [
              '0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa',
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            wrapped_coin_addresses: [
              '0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa',
              '0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3',
            ],
            underlying_decimals: [18, 8, 8, 18],
            wrapped_decimals: [18, 18],
            swap_abi: e0,
            gauge_abi: eg,
            deposit_abi: e6,
            sCurveRewards_abi: e1,
          },
          dusd: {
            name: 'dusd',
            full_name: 'dusd',
            symbol: 'dusd',
            reference_asset: 'USD',
            swap_address: '0x8038C01A0390a8c547446a0b2c18fc9aEFEcc10c',
            token_address: '0x3a664Ab939FD8482048609f652f9a0B0677337B9',
            gauge_address: '0xAEA6c312f4b3E04D752946d329693F7293bC2e6D',
            deposit_address: '0x61E10659fe3aa93d036d099405224E4Ac24996d0',
            sCurveRewards_address: '0xd9Acb0BAeeD77C99305017821167674Cc7e82f7a',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['DUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['DUSD', '3Crv'],
            underlying_coin_addresses: [
              '0x5BC25f649fc4e26069dDF4cF4010F9f706c23831',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x5BC25f649fc4e26069dDF4cF4010F9f706c23831',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: e8,
            gauge_abi: eg,
            deposit_abi: e3,
            sCurveRewards_abi: e4,
          },
          pbtc: {
            name: 'pbtc',
            full_name: 'pbtc',
            symbol: 'pbtc',
            reference_asset: 'BTC',
            swap_address: '0x7F55DDe206dbAD629C080068923b36fe9D6bDBeF',
            token_address: '0xDE5331AC4B3630f94853Ff322B66407e0D6331E8',
            gauge_address: '0xd7d147c6Bb90A718c3De8C0568F9B560C79fa416',
            deposit_address: '0x11F419AdAbbFF8d595E7d5b223eee3863Bb3902C',
            sCurveRewards_address: '0xf7977edc1fa61aa9b5f90d70a74a3fbc46e9dad3',
            is_meta: !0,
            base_pool: 'sbtc',
            underlying_coins: ['pBTC', 'renBTC', 'WBTC', 'sBTC'],
            wrapped_coins: ['pBTC', 'sbtcCrv'],
            underlying_coin_addresses: [
              '0x5228a22e72ccC52d415EcFd199F99D0665E7733b',
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            wrapped_coin_addresses: [
              '0x5228a22e72ccC52d415EcFd199F99D0665E7733b',
              '0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3',
            ],
            underlying_decimals: [18, 8, 8, 18],
            wrapped_decimals: [18, 18],
            swap_abi: e9,
            gauge_abi: ev,
            deposit_abi: e7,
            sCurveRewards_abi: te,
          },
          bbtc: {
            name: 'bbtc',
            full_name: 'bbtc',
            symbol: 'bbtc',
            reference_asset: 'BTC',
            swap_address: '0x071c661B4DeefB59E2a3DdB20Db036821eeE8F4b',
            token_address: '0x410e3E86ef427e30B9235497143881f717d93c2A',
            gauge_address: '0xdFc7AdFa664b08767b735dE28f9E84cd30492aeE',
            deposit_address: '0xC45b2EEe6e09cA176Ca3bB5f7eEe7C47bF93c756',
            is_meta: !0,
            base_pool: 'sbtc',
            underlying_coins: ['BBTC', 'renBTC', 'WBTC', 'sBTC'],
            wrapped_coins: ['BBTC', 'sbtcCrv'],
            underlying_coin_addresses: [
              '0x9be89d2a4cd102d8fecc6bf9da793be995c22541',
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            wrapped_coin_addresses: [
              '0x9be89d2a4cd102d8fecc6bf9da793be995c22541',
              '0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3',
            ],
            underlying_decimals: [8, 8, 8, 18],
            wrapped_decimals: [8, 18],
            swap_abi: tt,
            gauge_abi: ev,
            deposit_abi: tn,
          },
          obtc: {
            name: 'obtc',
            full_name: 'obtc',
            symbol: 'obtc',
            reference_asset: 'BTC',
            swap_address: '0xd81dA8D904b52208541Bade1bD6595D8a251F8dd',
            token_address: '0x2fE94ea3d5d4a175184081439753DE15AeF9d614',
            gauge_address: '0x11137B10C210b579405c21A07489e28F3c040AB1',
            deposit_address: '0xd5BCf53e2C81e1991570f33Fa881c49EEa570C8D',
            sCurveRewards_address: '0x7f1ae7a1fc275b5b9c3ad4497fa94e3b9424e76e',
            is_meta: !0,
            base_pool: 'sbtc',
            underlying_coins: ['oBTC', 'renBTC', 'WBTC', 'sBTC'],
            wrapped_coins: ['oBTC', 'sbtcCrv'],
            underlying_coin_addresses: [
              '0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68',
              '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            wrapped_coin_addresses: [
              '0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68',
              '0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3',
            ],
            underlying_decimals: [18, 8, 8, 18],
            wrapped_decimals: [18, 18],
            swap_abi: ta,
            gauge_abi: ev,
            deposit_abi: ti,
            sCurveRewards_abi: ts,
          },
          seth: {
            name: 'seth',
            full_name: 'seth',
            symbol: 'seth',
            reference_asset: 'ETH',
            swap_address: '0xc5424b857f758e906013f3555dad202e4bdb4567',
            token_address: '0xA3D87FffcE63B53E0d54fAa1cc983B7eB0b74A9c',
            gauge_address: '0x3C0FFFF15EA30C35d7A85B85c0782D6c94e1d238',
            is_plain: !0,
            underlying_coins: ['ETH', 'sETH'],
            wrapped_coins: ['ETH', 'sETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tu,
            gauge_abi: ev,
          },
          eurs: {
            name: 'eurs',
            full_name: 'eurs',
            symbol: 'eurs',
            reference_asset: 'EUR',
            swap_address: '0x0Ce6a5fF5217e38315f87032CF90686C96627CAA',
            token_address: '0x194eBd173F6cDacE046C53eACcE9B953F28411d1',
            gauge_address: '0x90Bb609649E0451E5aD952683D64BD2d1f245840',
            sCurveRewards_address: '0xc0d8994cd78ee1980885df1a0c5470fc977b5cfe',
            is_plain: !0,
            underlying_coins: ['EURS', 'sEUR'],
            wrapped_coins: ['EURS', 'sEUR'],
            underlying_coin_addresses: [
              '0xdB25f211AB05b1c97D595516F45794528a807ad8',
              '0xD71eCFF9342A5Ced620049e616c5035F1dB98620',
            ],
            wrapped_coin_addresses: [
              '0xdB25f211AB05b1c97D595516F45794528a807ad8',
              '0xD71eCFF9342A5Ced620049e616c5035F1dB98620',
            ],
            underlying_decimals: [2, 18],
            wrapped_decimals: [2, 18],
            swap_abi: tp,
            gauge_abi: ev,
            sCurveRewards_abi: to,
          },
          ust: {
            name: 'ust',
            full_name: 'ust',
            symbol: 'ust',
            reference_asset: 'USD',
            swap_address: '0x890f4e345B1dAED0367A877a1612f86A1f86985f',
            token_address: '0x94e131324b6054c0D789b190b2dAC504e4361b53',
            gauge_address: '0x3B7020743Bc2A4ca9EaF9D0722d42E20d6935855',
            deposit_address: '0xB0a0716841F2Fc03fbA72A891B8Bb13584F52F2d',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['UST', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['UST', '3Crv'],
            underlying_coin_addresses: [
              '0xa47c8bf37f92abed4a126bda807a7b7498661acd',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0xa47c8bf37f92abed4a126bda807a7b7498661acd',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: ty,
            gauge_abi: ev,
            deposit_abi: td,
          },
          aave: {
            name: 'aave',
            full_name: 'aave',
            symbol: 'aave',
            reference_asset: 'USD',
            swap_address: '0xDeBF20617708857ebe4F679508E7b7863a8A8EeE',
            token_address: '0xFd2a8fA60Abd58Efe3EeE34dd494cD491dC14900',
            gauge_address: '0xd662908ADA2Ea1916B3318327A97eB18aD588b5d',
            sCurveRewards_address: '0x96d7bc17912e4f320c4894194564cf8425cfe8d9',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT'],
            wrapped_coins: ['aDAI', 'aUSDC', 'aUSDT'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x028171bCA77440897B824Ca71D1c56caC55b68A3',
              '0xBcca60bB61934080951369a648Fb03DF4F96263C',
              '0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            use_lending: [!0, !0, !0],
            swap_abi: tm,
            gauge_abi: ev,
            sCurveRewards_abi: tr,
          },
          steth: {
            name: 'steth',
            full_name: 'steth',
            symbol: 'steth',
            reference_asset: 'ETH',
            swap_address: '0xDC24316b9AE028F1497c275EB9192a3Ea0f67022',
            token_address: '0x06325440D014e39736583c165C2963BA99fAf14E',
            gauge_address: '0x182B723a58739a9c974cFDB385ceaDb237453c28',
            sCurveRewards_address: '0x99ac10631F69C753DDb595D074422a0922D9056B',
            is_plain: !0,
            underlying_coins: ['ETH', 'stETH'],
            wrapped_coins: ['ETH', 'stETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tl,
            gauge_abi: ev,
            sCurveRewards_abi: tc,
          },
          saave: {
            name: 'saave',
            full_name: 'saave',
            symbol: 'saave',
            reference_asset: 'USD',
            swap_address: '0xEB16Ae0052ed37f479f7fe63849198Df1765a733',
            token_address: '0x02d341CcB60fAaf662bC0554d13778015d1b285C',
            gauge_address: '0x462253b8F74B72304c145DB0e4Eebd326B22ca39',
            sCurveRewards_address: '0xe5f41acad47849c6eb28b93913ca81893fb5a2a6',
            is_lending: !0,
            underlying_coins: ['DAI', 'sUSD'],
            wrapped_coins: ['aDAI', 'aSUSD'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',
            ],
            wrapped_coin_addresses: [
              '0x028171bCA77440897B824Ca71D1c56caC55b68A3',
              '0x6c5024cd4f8a59110119c56f8933403a539555eb',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            use_lending: [!0, !0],
            swap_abi: tf,
            gauge_abi: ev,
            sCurveRewards_abi: tr,
          },
          ankreth: {
            name: 'ankreth',
            full_name: 'ankreth',
            symbol: 'ankreth',
            reference_asset: 'ETH',
            swap_address: '0xA96A65c051bF88B4095Ee1f2451C2A9d43F53Ae2',
            token_address: '0xaA17A236F2bAdc98DDc0Cf999AbB47D47Fc0A6Cf',
            gauge_address: '0x6d10ed2cf043e6fcf51a0e7b4c2af3fa06695707',
            sCurveRewards_address: '0x3547DFCa04358540891149559e691B146c6B0043',
            is_plain: !0,
            underlying_coins: ['ETH', 'ankrETH'],
            wrapped_coins: ['ETH', 'ankrETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xE95A203B1a91a908F9B9CE46459d101078c2c3cb',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xE95A203B1a91a908F9B9CE46459d101078c2c3cb',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: t_,
            gauge_abi: ev,
            sCurveRewards_abi: tb,
          },
          usdp: {
            name: 'usdp',
            full_name: 'usdp',
            symbol: 'usdp',
            reference_asset: 'USD',
            swap_address: '0x42d7025938bEc20B69cBae5A77421082407f053A',
            token_address: '0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6',
            gauge_address: '0x055be5DDB7A925BfEF3417FC157f53CA77cA7222',
            deposit_address: '0x3c8cAee4E09296800f8D29A68Fa3837e2dae4940',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['USDP', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['USDP', '3Crv'],
            underlying_coin_addresses: [
              '0x1456688345527bE1f37E9e627DA0837D6f08C925',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x1456688345527bE1f37E9e627DA0837D6f08C925',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tg,
            gauge_abi: ev,
            deposit_abi: tv,
          },
          ib: {
            name: 'ironbank',
            full_name: 'ironbank',
            symbol: 'ib',
            reference_asset: 'USD',
            swap_address: '0x2dded6Da1BF5DBdF597C45fcFaa3194e53EcfeAF',
            token_address: '0x5282a4eF67D9C33135340fB3289cc1711c13638C',
            gauge_address: '0xF5194c3325202F456c95c1Cf0cA36f8475C1949F',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT'],
            wrapped_coins: ['cyDAI', 'cyUSDC', 'cyUSDT'],
            underlying_coin_addresses: [
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x8e595470ed749b85c6f7669de83eae304c2ec68f',
              '0x76eb2fe28b36b3ee97f3adae0c69606eedb2a37c',
              '0x48759f220ed983db51fa7a8c0d2aab8f3ce4166a',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [8, 8, 8],
            use_lending: [!0, !0, !0],
            swap_abi: tw,
            gauge_abi: ev,
          },
          link: {
            name: 'link',
            full_name: 'link',
            symbol: 'link',
            reference_asset: 'LINK',
            swap_address: '0xF178C0b5Bb7e7aBF4e12A4838C7b7c5bA2C623c0',
            token_address: '0xcee60cfa923170e4f8204ae08b4fa6a3f5656f3a',
            gauge_address: '0xfd4d8a17df4c27c1dd245d153ccf4499e806c87d',
            is_plain: !0,
            underlying_coins: ['LINK', 'sLINK'],
            wrapped_coins: ['LINK', 'sLINK'],
            underlying_coin_addresses: [
              '0x514910771AF9Ca656af840dff83E8264EcF986CA',
              '0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6',
            ],
            wrapped_coin_addresses: [
              '0x514910771AF9Ca656af840dff83E8264EcF986CA',
              '0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: th,
            gauge_abi: ev,
          },
          tusd: {
            name: 'tusd',
            full_name: 'tusd',
            symbol: 'tusd',
            reference_asset: 'USD',
            swap_address: '0xecd5e75afb02efa118af914515d6521aabd189f1',
            token_address: '0xecd5e75afb02efa118af914515d6521aabd189f1',
            gauge_address: '0x359FD5d6417aE3D8D6497d9B2e7A890798262BA4',
            deposit_address: '0xA79828DF1850E8a3A3064576f380D90aECDD3359',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['TUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['TUSD', '3Crv'],
            underlying_coin_addresses: [
              '0x0000000000085d4780B73119b644AE5ecd22b376',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x0000000000085d4780B73119b644AE5ecd22b376',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tM,
            gauge_abi: ev,
            deposit_abi: tA,
          },
          frax: {
            name: 'frax',
            full_name: 'frax',
            symbol: 'frax',
            reference_asset: 'USD',
            swap_address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',
            token_address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',
            gauge_address: '0x72e158d38dbd50a483501c24f792bdaaa3e7d55c',
            deposit_address: '0xA79828DF1850E8a3A3064576f380D90aECDD3359',
            sCurveRewards_address: '0xBBbAf1adf4d39B2843928CCa1E65564e5ce99ccC',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['FRAX', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['FRAX', '3Crv'],
            underlying_coin_addresses: [
              '0x853d955acef822db058eb8505911ed77f175b99e',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x853d955acef822db058eb8505911ed77f175b99e',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tM,
            deposit_abi: tA,
            gauge_abi: ev,
            sCurveRewards_abi: tE,
          },
          lusd: {
            name: 'lusd',
            full_name: 'lusd',
            symbol: 'lusd',
            reference_asset: 'USD',
            swap_address: '0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA',
            token_address: '0xEd279fDD11cA84bEef15AF5D39BB4d4bEE23F0cA',
            gauge_address: '0x9b8519a9a00100720ccdc8a120fbed319ca47a14',
            deposit_address: '0xA79828DF1850E8a3A3064576f380D90aECDD3359',
            sCurveRewards_address: '0xeb31da939878d1d780fdbcc244531c0fb80a2cf3',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['LUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['LUSD', '3Crv'],
            underlying_coin_addresses: [
              '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tM,
            gauge_abi: ev,
            deposit_abi: tA,
            sCurveRewards_abi: tE,
          },
          busdv2: {
            name: 'busdv2',
            full_name: 'busdv2',
            symbol: 'busdv2',
            reference_asset: 'USD',
            swap_address: '0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a',
            token_address: '0x4807862AA8b2bF68830e4C8dc86D0e9A998e085a',
            gauge_address: '0xd4b22fedca85e684919955061fdf353b9d38389b',
            deposit_address: '0xA79828DF1850E8a3A3064576f380D90aECDD3359',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['BUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['BUSD', '3Crv'],
            underlying_coin_addresses: [
              '0x4Fabb145d64652a948d72533023f6E7A623C7C53',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x4Fabb145d64652a948d72533023f6E7A623C7C53',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tM,
            gauge_abi: ev,
            deposit_abi: tA,
          },
          reth: {
            name: 'reth',
            full_name: 'reth',
            symbol: 'reth',
            reference_asset: 'ETH',
            swap_address: '0xF9440930043eb3997fc70e1339dBb11F341de7A8',
            token_address: '0x53a901d48795C58f485cBB38df08FA96a24669D5',
            gauge_address: '0x824F13f1a2F29cFEEa81154b46C0fc820677A637',
            sCurveRewards_address: '0x3b7382805A1d887b73e98570796C5cEFeA32A462',
            is_plain: !0,
            underlying_coins: ['ETH', 'rETH'],
            wrapped_coins: ['ETH', 'rETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x9559aaa82d9649c7a7b220e7c461d2e74c9a3593',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x9559aaa82d9649c7a7b220e7c461d2e74c9a3593',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tx,
            gauge_abi: ew,
            sCurveRewards_abi: tE,
          },
          alusd: {
            name: 'alusd',
            full_name: 'alusd',
            symbol: 'alusd',
            reference_asset: 'USD',
            swap_address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',
            token_address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',
            gauge_address: '0x9582C4ADACB3BCE56Fea3e590F05c3ca2fb9C477',
            deposit_address: '0xA79828DF1850E8a3A3064576f380D90aECDD3359',
            sCurveRewards_address: '0xb76256d1091e93976c61449d6e500d9f46d827d4',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['alUSD', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['alUSD', '3Crv'],
            underlying_coin_addresses: [
              '0xbc6da0fe9ad5f3b0d58160288917aa56653660e9',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0xbc6da0fe9ad5f3b0d58160288917aa56653660e9',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tM,
            gauge_abi: ew,
            deposit_abi: tA,
            sCurveRewards_abi: tE,
          },
          mim: {
            name: 'mim',
            full_name: 'mim',
            symbol: 'mim',
            reference_asset: 'USD',
            swap_address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B',
            token_address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B',
            gauge_address: '0xd8b712d29381748dB89c36BCa0138d7c75866ddF',
            deposit_address: '0xA79828DF1850E8a3A3064576f380D90aECDD3359',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['MIM', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['MIM', '3Crv'],
            underlying_coin_addresses: [
              '0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tM,
            gauge_abi: eM,
            deposit_abi: tA,
            sCurveRewards_abi: tE,
          },
          tricrypto2: {
            name: 'tricrypto2',
            full_name: 'tricrypto2',
            symbol: 'tricrypto2',
            reference_asset: 'CRYPTO',
            swap_address: '0xD51a44d3FaE010294C616388b506AcdA1bfAAE46',
            token_address: '0xc4AD29ba4B3c580e6D59105FFf484999997675Ff',
            gauge_address: '0xDeFd8FdD20e0f34115C7018CCfb655796F6B2168',
            deposit_address: '0x3993d34e7e99Abf6B6f367309975d1360222D446',
            is_crypto: !0,
            underlying_coins: ['USDT', 'WBTC', 'ETH'],
            wrapped_coins: ['USDT', 'WBTC', 'WETH'],
            underlying_coin_addresses: [
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
            ],
            wrapped_coin_addresses: [
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
            ],
            underlying_decimals: [6, 8, 18],
            wrapped_decimals: [6, 8, 18],
            swap_abi: tC,
            gauge_abi: ew,
            deposit_abi: tk,
          },
          eurt: {
            name: 'eurt',
            full_name: 'eurt',
            symbol: 'eurt',
            reference_asset: 'EUR',
            swap_address: '0xfd5db7463a3ab53fd211b4af195c5bccc1a03890',
            token_address: '0xfd5db7463a3ab53fd211b4af195c5bccc1a03890',
            gauge_address: '0xe8060Ad8971450E624d5289A10017dD30F5dA85F',
            is_plain: !0,
            underlying_coins: ['EURT', 'sEUR'],
            wrapped_coins: ['EURT', 'sEUR'],
            underlying_coin_addresses: [
              '0xC581b735A1688071A1746c968e0798D642EDE491',
              '0xD71eCFF9342A5Ced620049e616c5035F1dB98620',
            ],
            wrapped_coin_addresses: [
              '0xC581b735A1688071A1746c968e0798D642EDE491',
              '0xD71eCFF9342A5Ced620049e616c5035F1dB98620',
            ],
            underlying_decimals: [6, 18],
            wrapped_decimals: [6, 18],
            swap_abi: tD,
            gauge_abi: ew,
          },
          eurtusd: {
            name: 'eurtusd',
            full_name: 'eurtusd',
            symbol: 'eurtusd',
            reference_asset: 'CRYPTO',
            swap_address: '0x9838eCcC42659FA8AA7daF2aD134b53984c9427b',
            token_address: '0x3b6831c0077a1e44ED0a21841C3bC4dC11bCE833',
            gauge_address: '0x4Fd86Ce7Ecea88F7E0aA78DC12625996Fb3a04bC',
            deposit_address: '0x5D0F47B32fDd343BfA74cE221808e2abE4A53827',
            is_meta: !0,
            is_crypto: !0,
            base_pool: '3pool',
            underlying_coins: ['EURT', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['EURT', '3Crv'],
            underlying_coin_addresses: [
              '0xC581b735A1688071A1746c968e0798D642EDE491',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0xC581b735A1688071A1746c968e0798D642EDE491',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [6, 18, 6, 6],
            wrapped_decimals: [6, 18],
            swap_abi: tT,
            gauge_abi: eh,
            deposit_abi: tS,
          },
          eursusd: {
            name: 'eursusd',
            full_name: 'eursusd',
            symbol: 'eursusd',
            reference_asset: 'CRYPTO',
            swap_address: '0x98a7F18d4E56Cfe84E3D081B40001B3d5bD3eB8B',
            token_address: '0x3D229E1B4faab62F621eF2F6A610961f7BD7b23B',
            gauge_address: '0x65CA7Dc5CB661fC58De57B1E1aF404649a27AD35',
            is_crypto: !0,
            is_plain: !0,
            underlying_coins: ['USDC', 'EURS'],
            wrapped_coins: ['USDC', 'EURS'],
            underlying_coin_addresses: [
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdB25f211AB05b1c97D595516F45794528a807ad8',
            ],
            wrapped_coin_addresses: [
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdB25f211AB05b1c97D595516F45794528a807ad8',
            ],
            underlying_decimals: [6, 2],
            wrapped_decimals: [6, 2],
            swap_abi: tO,
            gauge_abi: eh,
          },
          crveth: {
            name: 'crveth',
            full_name: 'crveth',
            symbol: 'crveth',
            reference_asset: 'CRYPTO',
            swap_address: '0x8301AE4fc9c624d1D396cbDAa1ed877821D7C511',
            token_address: '0xEd4064f376cB8d68F770FB1Ff088a3d0F3FF5c4d',
            gauge_address: '0x1cEBdB0856dd985fAe9b8fEa2262469360B8a3a6',
            is_crypto: !0,
            underlying_coins: ['ETH', 'CRV'],
            wrapped_coins: ['WETH', 'CRV'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xD533a949740bb3306d119CC777fa900bA034cd52',
            ],
            wrapped_coin_addresses: [
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
              '0xD533a949740bb3306d119CC777fa900bA034cd52',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tF,
            gauge_abi: eh,
          },
          rai: {
            name: 'rai',
            full_name: 'rai',
            symbol: 'rai',
            reference_asset: 'USD',
            swap_address: '0x618788357D0EBd8A37e763ADab3bc575D54c2C7d',
            token_address: '0x6BA5b4e438FA0aAf7C1bD179285aF65d13bD3D90',
            gauge_address: '0x66ec719045bBD62db5eBB11184c18237D3Cc2E62',
            deposit_address: '0xcB636B81743Bb8a7F1E355DEBb7D33b07009cCCC',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['RAI', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['RAI', '3Crv'],
            underlying_coin_addresses: [
              '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tB,
            gauge_abi: eh,
            deposit_abi: tR,
          },
          cvxeth: {
            name: 'cvxeth',
            full_name: 'cvxeth',
            symbol: 'cvxeth',
            reference_asset: 'CRYPTO',
            swap_address: '0xB576491F1E6e5E62f1d8F26062Ee822B40B0E0d4',
            token_address: '0x3A283D9c08E8b55966afb64C515f5143cf907611',
            gauge_address: '0x7E1444BA99dcdFfE8fBdb42C02F0005D14f13BE1',
            is_crypto: !0,
            underlying_coins: ['ETH', 'CVX'],
            wrapped_coins: ['WETH', 'CVX'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b',
            ],
            wrapped_coin_addresses: [
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
              '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tF,
            gauge_abi: eh,
          },
          xautusd: {
            name: 'xautusd',
            full_name: 'xautusd',
            symbol: 'xautusd',
            reference_asset: 'CRYPTO',
            swap_address: '0xAdCFcf9894335dC340f6Cd182aFA45999F45Fc44',
            token_address: '0x8484673cA7BfF40F82B041916881aeA15ee84834',
            gauge_address: '0x1B3E14157ED33F60668f2103bCd5Db39a1573E5B',
            deposit_address: '0xc5FA220347375ac4f91f9E4A4AAb362F22801504',
            is_meta: !0,
            is_crypto: !0,
            base_pool: '3pool',
            underlying_coins: ['XAUt', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['XAUt', '3Crv'],
            underlying_coin_addresses: [
              '0x68749665ff8d2d112fa859aa293f07a622782f38',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x68749665ff8d2d112fa859aa293f07a622782f38',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [6, 18, 6, 6],
            wrapped_decimals: [6, 18],
            swap_abi: tT,
            gauge_abi: eh,
            deposit_abi: tS,
          },
          spelleth: {
            name: 'spelleth',
            full_name: 'spelleth',
            symbol: 'spelleth',
            reference_asset: 'CRYPTO',
            swap_address: '0x98638FAcf9a3865cd033F36548713183f6996122',
            token_address: '0x8282BD15dcA2EA2bDf24163E8f2781B30C43A2ef',
            gauge_address: '0x08380a4999Be1a958E2abbA07968d703C7A3027C',
            is_crypto: !0,
            underlying_coins: ['ETH', 'SPELL'],
            wrapped_coins: ['WETH', 'SPELL'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x090185f2135308bad17527004364ebcc2d37e5f6',
            ],
            wrapped_coin_addresses: [
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
              '0x090185f2135308bad17527004364ebcc2d37e5f6',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tF,
            gauge_abi: eh,
          },
          teth: {
            name: 'teth',
            full_name: 'teth',
            symbol: 'teth',
            reference_asset: 'CRYPTO',
            swap_address: '0x752eBeb79963cf0732E9c0fec72a49FD1DEfAEAC',
            token_address: '0xCb08717451aaE9EF950a2524E33B6DCaBA60147B',
            gauge_address: '0x6070fBD4E608ee5391189E7205d70cc4A274c017',
            is_crypto: !0,
            underlying_coins: ['ETH', 'T'],
            wrapped_coins: ['WETH', 'T'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xCdF7028ceAB81fA0C6971208e83fa7872994beE5',
            ],
            wrapped_coin_addresses: [
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
              '0xCdF7028ceAB81fA0C6971208e83fa7872994beE5',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tF,
            gauge_abi: eh,
          },
          '2pool': {
            name: '2pool',
            full_name: '2pool',
            symbol: '2pool',
            reference_asset: 'USD',
            swap_address: '0x1005f7406f32a61bd760cfa14accd2737913d546',
            token_address: '0x1005f7406f32a61bd760cfa14accd2737913d546',
            gauge_address: '0x9f330db38caaae5b61b410e2f0aad63fff2109d8',
            is_plain: !0,
            underlying_coins: ['USDC', 'USDT'],
            wrapped_coins: ['USDC', 'USDT'],
            underlying_coin_addresses: [
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            underlying_decimals: [6, 6],
            wrapped_decimals: [6, 6],
            swap_abi: tI,
            gauge_abi: ex,
          },
          '4pool': {
            name: '4pool',
            full_name: '4pool',
            symbol: '4pool',
            reference_asset: 'USD',
            swap_address: '0x4e0915C88bC70750D68C481540F081fEFaF22273',
            token_address: '0x4e0915C88bC70750D68C481540F081fEFaF22273',
            gauge_address: '0x34883134a39b206a451c2d3b0e7cac44be4d9181',
            is_plain: !0,
            underlying_coins: ['USDC', 'USDT', 'UST', 'FRAX'],
            wrapped_coins: ['USDC', 'USDT', 'UST', 'FRAX'],
            underlying_coin_addresses: [
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0xa693B19d2931d498c5B318dF961919BB4aee87a5',
              '0x853d955acef822db058eb8505911ed77f175b99e',
            ],
            wrapped_coin_addresses: [
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
              '0xa693B19d2931d498c5B318dF961919BB4aee87a5',
              '0x853d955acef822db058eb8505911ed77f175b99e',
            ],
            underlying_decimals: [6, 6, 6, 18],
            wrapped_decimals: [6, 6, 6, 18],
            swap_abi: tL,
            gauge_abi: ex,
          },
          fraxusdc: {
            name: 'fraxusdc',
            full_name: 'fraxusdc',
            symbol: 'fraxusdc',
            reference_asset: 'USD',
            swap_address: '0xDcEF968d416a41Cdac0ED8702fAC8128A64241A2',
            token_address: '0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC',
            gauge_address: '0xCFc25170633581Bf896CB6CDeE170e3E3Aa59503',
            is_plain: !0,
            underlying_coins: ['FRAX', 'USDC'],
            wrapped_coins: ['FRAX', 'USDC'],
            underlying_coin_addresses: [
              '0x853d955aCEf822Db058eb8505911ED77F175b99e',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
            ],
            wrapped_coin_addresses: [
              '0x853d955aCEf822Db058eb8505911ED77F175b99e',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
            ],
            underlying_decimals: [18, 6],
            wrapped_decimals: [18, 6],
            swap_abi: tN,
            gauge_abi: ex,
          },
          euroc: {
            name: 'euroc',
            full_name: 'euroc',
            symbol: 'euroc',
            reference_asset: 'CRYPTO',
            swap_address: '0xE84f5b1582BA325fDf9cE6B0c1F087ccfC924e54',
            token_address: '0x70fc957eb90E37Af82ACDbd12675699797745F68',
            gauge_address: '0x4329c8F09725c0e3b6884C1daB1771bcE17934F9',
            deposit_address: '0xd446A98F88E1d053d1F64986E3Ed083bb1Ab7E5A',
            is_meta: !0,
            is_crypto: !0,
            base_pool: '3pool',
            underlying_coins: ['EUROC', 'DAI', 'USDC', 'USDT'],
            wrapped_coins: ['EUROC', '3Crv'],
            underlying_coin_addresses: [
              '0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c',
              '0x6B175474E89094C44Da98b954EedeAC495271d0F',
              '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
              '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            ],
            wrapped_coin_addresses: [
              '0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c',
              '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
            ],
            underlying_decimals: [6, 18, 6, 6],
            wrapped_decimals: [6, 18],
            swap_abi: tT,
            gauge_abi: ex,
            deposit_abi: tS,
          },
          frxeth: {
            name: 'frxeth',
            full_name: 'frxeth',
            symbol: 'frxeth',
            reference_asset: 'ETH',
            swap_address: '0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577',
            token_address: '0xf43211935C781D5ca1a41d2041F397B8A7366C7A',
            gauge_address: '0x2932a86df44Fe8D2A706d8e9c5d51c24883423F5',
            is_plain: !0,
            underlying_coins: ['ETH', 'frxETH'],
            wrapped_coins: ['ETH', 'frxETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x5E8422345238F34275888049021821E8E08CAa1f',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x5E8422345238F34275888049021821E8E08CAa1f',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tP,
            gauge_abi: ex,
          },
          sbtc2: {
            name: 'sbtc2',
            full_name: 'sbtc2',
            symbol: 'sbtc2',
            reference_asset: 'BTC',
            swap_address: '0xf253f83AcA21aAbD2A20553AE0BF7F65C755A07F',
            token_address: '0x051d7e5609917Bd9b73f04BAc0DED8Dd46a74301',
            gauge_address: '0x6D787113F23bED1D5e1530402B3f364D0A6e5Af3',
            is_plain: !0,
            underlying_coins: ['WBTC', 'sBTC'],
            wrapped_coins: ['WBTC', 'sBTC'],
            underlying_coin_addresses: [
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            wrapped_coin_addresses: [
              '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
              '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
            ],
            underlying_decimals: [8, 18],
            wrapped_decimals: [8, 18],
            swap_abi: tq,
            gauge_abi: ex,
          },
          fraxusdp: {
            name: 'fraxusdp',
            full_name: 'fraxusdp',
            symbol: 'fraxusdp',
            reference_asset: 'USD',
            swap_address: '0xaE34574AC03A15cd58A92DC79De7B1A0800F1CE3',
            token_address: '0xFC2838a17D8e8B1D5456E0a351B0708a09211147',
            gauge_address: '0xfb860600F1bE1f1c72A89B2eF5CAF345aff7D39d',
            is_plain: !0,
            underlying_coins: ['FRAX', 'USDP'],
            wrapped_coins: ['FRAX', 'USDP'],
            underlying_coin_addresses: [
              '0x853d955aCEf822Db058eb8505911ED77F175b99e',
              '0x8E870D67F660D95d5be530380D0eC0bd388289E1',
            ],
            wrapped_coin_addresses: [
              '0x853d955aCEf822Db058eb8505911ED77F175b99e',
              '0x8E870D67F660D95d5be530380D0eC0bd388289E1',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tN,
            gauge_abi: ex,
          },
          wbeth: {
            name: 'wbeth',
            full_name: 'wbeth',
            symbol: 'wbeth',
            reference_asset: 'ETH',
            swap_address: '0xBfAb6FA95E0091ed66058ad493189D2cB29385E6',
            token_address: '0xBfAb6FA95E0091ed66058ad493189D2cB29385E6',
            gauge_address: '0x50161102a240b1456d770Dbb55c76d8dc2D160Aa',
            is_plain: !0,
            underlying_coins: ['ETH', 'wBETH'],
            wrapped_coins: ['ETH', 'wBETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xa2E3356610840701BDf5611a53974510Ae27E2e1',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0xa2E3356610840701BDf5611a53974510Ae27E2e1',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tj,
            gauge_abi: ex,
          },
        }),
        tG = em({
          'sfrxeth-llamma': {
            name: 'sfrxeth',
            full_name: 'sfrxeth',
            symbol: 'sfrxeth',
            reference_asset: 'CRYPTO',
            swap_address: '0x136e783846ef68C8Bd00a3369F787dF8d683a696',
            token_address: '0x0000000000000000000000000000000000000000',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_crypto: !0,
            is_plain: !0,
            is_llamma: !0,
            underlying_coins: ['crvUSD', 'sfrxETH'],
            wrapped_coins: ['crvUSD', 'sfrxETH'],
            underlying_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0xac3E018457B222d93114458476f3E3416Abbe38F',
            ],
            wrapped_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0xac3E018457B222d93114458476f3E3416Abbe38F',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tU,
            gauge_abi: ex,
          },
          'wsteth-llamma': {
            name: 'wsteth',
            full_name: 'wsteth',
            symbol: 'wsteth',
            reference_asset: 'CRYPTO',
            swap_address: '0x37417b2238aa52d0dd2d6252d989e728e8f706e4',
            token_address: '0x0000000000000000000000000000000000000000',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_crypto: !0,
            is_plain: !0,
            is_llamma: !0,
            underlying_coins: ['crvUSD', 'wstETH'],
            wrapped_coins: ['crvUSD', 'wstETH'],
            underlying_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',
            ],
            wrapped_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tU,
            gauge_abi: ex,
          },
          'wbtc-llamma': {
            name: 'wbtc',
            full_name: 'wbtc',
            symbol: 'wbtc',
            reference_asset: 'CRYPTO',
            swap_address: '0xe0438eb3703bf871e31ce639bd351109c88666ea',
            token_address: '0x0000000000000000000000000000000000000000',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_crypto: !0,
            is_plain: !0,
            is_llamma: !0,
            underlying_coins: ['crvUSD', 'WBTC'],
            wrapped_coins: ['crvUSD', 'WBTC'],
            underlying_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',
            ],
            wrapped_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',
            ],
            underlying_decimals: [18, 8],
            wrapped_decimals: [18, 8],
            swap_abi: tU,
            gauge_abi: ex,
          },
          'weth-llamma': {
            name: 'weth',
            full_name: 'weth',
            symbol: 'weth',
            reference_asset: 'CRYPTO',
            swap_address: '0x1681195c176239ac5e72d9aebacf5b2492e0c4ee',
            token_address: '0x0000000000000000000000000000000000000000',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_crypto: !0,
            is_plain: !0,
            is_llamma: !0,
            underlying_coins: ['crvUSD', 'WETH'],
            wrapped_coins: ['crvUSD', 'WETH'],
            underlying_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
            ],
            wrapped_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tU,
            gauge_abi: ex,
          },
          'sfrxeth2-llamma': {
            name: 'sfrxeth2',
            full_name: 'sfrxeth2',
            symbol: 'sfrxeth2',
            reference_asset: 'CRYPTO',
            swap_address: '0xfa96ad0a9e64261db86950e2da362f5572c5c6fd',
            token_address: '0x0000000000000000000000000000000000000000',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_crypto: !0,
            is_plain: !0,
            is_llamma: !0,
            underlying_coins: ['crvUSD', 'sfrxETH'],
            wrapped_coins: ['crvUSD', 'sfrxETH'],
            underlying_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0xac3E018457B222d93114458476f3E3416Abbe38F',
            ],
            wrapped_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0xac3E018457B222d93114458476f3E3416Abbe38F',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tU,
            gauge_abi: ex,
          },
          'tbtc-llamma': {
            name: 'tbtc',
            full_name: 'tbtc',
            symbol: 'tbtc',
            reference_asset: 'CRYPTO',
            swap_address: '0xf9bd9da2427a50908c4c6d1599d8e62837c2bcb0',
            token_address: '0x0000000000000000000000000000000000000000',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_crypto: !0,
            is_plain: !0,
            is_llamma: !0,
            underlying_coins: ['crvUSD', 'tBTC'],
            wrapped_coins: ['crvUSD', 'tBTC'],
            underlying_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0x18084fba666a33d37592fa2633fd49a74dd93a88',
            ],
            wrapped_coin_addresses: [
              '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
              '0x18084fba666a33d37592fa2633fd49a74dd93a88',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: tU,
            gauge_abi: ex,
          },
        }),
        tW = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"offpeg_fee_multiplier","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"offpeg_fee_multiplier","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_coins","type":"address[2]"},{"name":"_underlying_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"},{"name":"_offpeg_fee_multiplier","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10374"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10336"},{"stateMutability":"view","type":"function","name":"dynamic_fee","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"22089"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7358"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2237133"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4445096"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"},{"name":"_use_underlying","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5357975"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5358005"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5525027"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5541345"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"},{"name":"_use_underlying","type":"bool"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"},{"name":"_use_underlying","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4008194"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"},{"name":"_use_underlying","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"159459"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"154920"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"new_fee","type":"uint256"},{"name":"new_admin_fee","type":"uint256"},{"name":"new_offpeg_fee_multiplier","type":"uint256"}],"outputs":[],"gas":"148809"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"141271"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"23012"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"77050"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"65727"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"23102"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"61714"},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[],"gas":"43291"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40385"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23222"},{"stateMutability":"nonpayable","type":"function","name":"set_aave_referral","inputs":[{"name":"referral_code","type":"uint256"}],"outputs":[],"gas":"38352"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_receiver","inputs":[{"name":"_reward_receiver","type":"address"}],"outputs":[],"gas":"38385"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"38415"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3397"},{"stateMutability":"view","type":"function","name":"underlying_coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3427"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3457"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3378"},{"stateMutability":"view","type":"function","name":"offpeg_fee_multiplier","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3528"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3588"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3678"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3708"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3738"},{"stateMutability":"view","type":"function","name":"future_offpeg_fee_multiplier","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3768"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3798"},{"stateMutability":"view","type":"function","name":"reward_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3828"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3858"}]'
        ),
        tY = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_prices","type":"uint256[2]"}],"outputs":[],"name":"constructor"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1971"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2001"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2031"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"378"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"492"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"507"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"6701"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10891"},{"stateMutability":"view","type":"function","name":"fee_calc","inputs":[{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5706"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"6092"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[],"gas":"1236533"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1632"},{"stateMutability":"view","type":"function","name":"calc_token_fee","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"15892"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[],"gas":"1257246"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[3]"}],"outputs":[],"gas":"212087"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1939"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"8142"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[],"gas":"1176756"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"352907"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"155212"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"150657"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"294400"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"632237"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"21832"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"74570"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"60647"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"21922"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"37845"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"21982"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_receiver","inputs":[{"name":"_reward_receiver","type":"address"}],"outputs":[],"gas":"37115"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"37145"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2018"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2048"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2078"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2108"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2138"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2168"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2198"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2228"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2258"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2288"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2318"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2348"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2378"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2408"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2438"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2468"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2498"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2528"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2558"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2633"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2618"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2648"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2678"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2708"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2738"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2768"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"2798"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2828"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2858"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2888"},{"stateMutability":"view","type":"function","name":"reward_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2918"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2948"}]'
        ),
        tZ = JSON.parse(
          '[{"inputs":[{"name":"_pool","type":"address"},{"name":"_base_pool","type":"address"}],"outputs":[],"stateMutability":"nonpayable","type":"constructor","name":"constructor"},{"inputs":[{"name":"_amounts","type":"uint256[5]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[5]"}],"name":"remove_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"8403","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4305","inputs":[{"name":"_amounts","type":"uint256[5]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"6199","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1343","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1373","inputs":[{"name":"arg0","type":"uint256"}],"name":"underlying_coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1358","inputs":[],"name":"pool","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1388","inputs":[],"name":"base_pool","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1418","inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"}]'
        ),
        tV = JSON.parse(
          '[{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Deposit","inputs":[{"name":"_user","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"name":"_user","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateLiquidityLimit","inputs":[{"name":"_user","type":"address","indexed":true},{"name":"_original_balance","type":"uint256","indexed":false},{"name":"_original_supply","type":"uint256","indexed":false},{"name":"_working_balance","type":"uint256","indexed":false},{"name":"_working_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_crv_token","type":"address"},{"name":"_factory","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deposit","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"user_checkpoint","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"claimable_tokens","inputs":[{"name":"addr","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"claimed_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"claimable_reward","inputs":[{"name":"_user","type":"address"},{"name":"_reward_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"set_rewards_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_reward","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_reward_distributor","inputs":[{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deposit_reward_token","inputs":[{"name":"_reward_token","type":"address"},{"name":"_amount","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_manager","inputs":[{"name":"_manager","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"update_voting_escrow","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_killed","inputs":[{"name":"_is_killed","type":"bool"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_checkpoint","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_lp_token","type":"address"},{"name":"_manager","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"manager","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"voting_escrow","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"working_balances","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"working_supply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"period","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"period_timestamp","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_checkpoint_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_fraction","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_inv_supply","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"integrate_inv_supply_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"reward_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"reward_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"distributor","type":"address"},{"name":"period_finish","type":"uint256"},{"name":"rate","type":"uint256"},{"name":"last_update","type":"uint256"},{"name":"integral","type":"uint256"}]}]},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"reward_integral_for","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"inflation_rate","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        tJ = em({
          aave: {
            name: 'aave',
            full_name: 'aave',
            symbol: 'aave',
            reference_asset: 'USD',
            swap_address: '0x445FE580eF8d70FF569aB36e80c647af338db351',
            token_address: '0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171',
            gauge_address: '0x20759F567BB3EcDB55c817c9a1d13076aB215EdC',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC.e', 'USDT'],
            wrapped_coins: ['amDAI', 'amUSDC', 'amUSDT'],
            underlying_coin_addresses: [
              '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',
              '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',
              '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',
            ],
            wrapped_coin_addresses: [
              '0x27F8D03b3a2196956ED754baDc28D73be8830A6e',
              '0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',
              '0x60D55F02A771d515e077c9C2403a1ef324885CeC',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            use_lending: [!0, !0, !0],
            swap_abi: tm,
            gauge_abi: tV,
          },
          ren: {
            name: 'ren',
            full_name: 'ren',
            symbol: 'ren',
            reference_asset: 'BTC',
            swap_address: '0xC2d95EEF97Ec6C17551d45e77B590dc1F9117C67',
            token_address: '0xf8a57c1d3b9629b77b6726a042ca48990A84Fb49',
            gauge_address: '0x8D9649e50A0d1da8E939f800fB926cdE8f18B47D',
            is_lending: !0,
            underlying_coins: ['WBTC', 'renBTC'],
            wrapped_coins: ['amWBTC', 'renBTC'],
            underlying_coin_addresses: [
              '0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            wrapped_coin_addresses: [
              '0x5c2ed810328349100A66B82b78a1791B101C9D61',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            underlying_decimals: [8, 8],
            wrapped_decimals: [8, 8],
            use_lending: [!0, !1],
            swap_abi: tW,
            gauge_abi: tV,
          },
          atricrypto3: {
            name: 'atricrypto3',
            full_name: 'atricrypto3',
            symbol: 'atricrypto3',
            reference_asset: 'CRYPTO',
            swap_address: '0x92215849c439E1f8612b6646060B4E3E5ef822cC',
            token_address: '0xdAD97F7713Ae9437fa9249920eC8507e5FbB23d3',
            gauge_address: '0xBb1B19495B8FE7C402427479B9aC14886cbbaaeE',
            deposit_address: '0x1d8b86e3D88cDb2d34688e87E72F388Cb541B7C8',
            is_meta: !0,
            is_crypto: !0,
            is_fake: !0,
            base_pool: 'aave',
            meta_coin_idx: 0,
            underlying_coins: ['DAI', 'USDC.e', 'USDT', 'WBTC', 'WETH'],
            wrapped_coins: ['am3CRV', 'amWBTC', 'amWETH'],
            underlying_coin_addresses: [
              '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',
              '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',
              '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',
              '0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6',
              '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',
            ],
            wrapped_coin_addresses: [
              '0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171',
              '0x5c2ed810328349100A66B82b78a1791B101C9D61',
              '0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',
            ],
            underlying_decimals: [18, 6, 6, 8, 18],
            wrapped_decimals: [18, 8, 18],
            swap_abi: tY,
            gauge_abi: tV,
            deposit_abi: tZ,
          },
          eurtusd: {
            name: 'eurtusd',
            full_name: 'eurtusd',
            symbol: 'eurtusd',
            reference_asset: 'CRYPTO',
            swap_address: '0xB446BF7b8D6D4276d0c75eC0e3ee8dD7Fe15783A',
            token_address: '0x600743B1d8A96438bD46836fD34977a00293f6Aa',
            gauge_address: '0x8b397084699Cc64E429F610F81Fac13bf061ef55',
            deposit_address: '0x225FB4176f0E20CDb66b4a3DF70CA3063281E855',
            is_meta: !0,
            is_crypto: !0,
            base_pool: 'aave',
            underlying_coins: ['EURT', 'DAI', 'USDC.e', 'USDT'],
            wrapped_coins: ['EURT', 'am3CRV'],
            underlying_coin_addresses: [
              '0x7BDF330f423Ea880FF95fC41A280fD5eCFD3D09f',
              '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',
              '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',
              '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',
            ],
            wrapped_coin_addresses: [
              '0x7BDF330f423Ea880FF95fC41A280fD5eCFD3D09f',
              '0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171',
            ],
            underlying_decimals: [6, 18, 6, 6],
            wrapped_decimals: [6, 18],
            swap_abi: tT,
            gauge_abi: tV,
            deposit_abi: tS,
          },
          eursusd: {
            name: 'eursusd',
            full_name: 'eursusd',
            symbol: 'eursusd',
            reference_asset: 'CRYPTO',
            swap_address: '0x9b3d675FDbe6a0935E8B7d1941bc6f78253549B7',
            token_address: '0x7BD9757FbAc089d60DaFF1Fa6bfE3BC99b0F5735',
            gauge_address: '0x18006c6A7955Bf6Db72DE34089B975f733601660',
            deposit_address: '0x4DF7eF55E99a56851187822d96B4E17D98A47DeD',
            is_meta: !0,
            is_crypto: !0,
            base_pool: 'aave',
            underlying_coins: ['EURS', 'DAI', 'USDC.e', 'USDT'],
            wrapped_coins: ['EURS', 'am3CRV'],
            underlying_coin_addresses: [
              '0xe111178a87a3bff0c8d18decba5798827539ae99',
              '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',
              '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',
              '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',
            ],
            wrapped_coin_addresses: [
              '0xe111178a87a3bff0c8d18decba5798827539ae99',
              '0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171',
            ],
            underlying_decimals: [2, 18, 6, 6],
            wrapped_decimals: [2, 18],
            swap_abi: tT,
            gauge_abi: tV,
            deposit_abi: tS,
          },
        }),
        tH = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_owner","type":"address"},{"name":"_coin","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"288"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"75317"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"111952"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"37821"},{"stateMutability":"view","type":"function","name":"get_previous_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"2221"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"2251"},{"stateMutability":"view","type":"function","name":"get_twap_balances","inputs":[{"name":"_first_balances","type":"uint256[2]"},{"name":"_last_balances","type":"uint256[2]"},{"name":"_time_elapsed","type":"uint256"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"1489"},{"stateMutability":"view","type":"function","name":"get_price_cumulative_last","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"2311"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"5654"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"5616"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1010459"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"152079"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"148840"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[],"gas":"110458"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"97239"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"21892"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"74630"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"60707"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"21982"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3478"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"10340"},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[],"gas":"74962"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"37995"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"22132"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"2217"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2247"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2168"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2198"},{"stateMutability":"view","type":"function","name":"block_timestamp_last","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2228"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2258"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2288"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2318"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2348"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2378"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2408"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2438"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2468"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2498"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2528"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"8960"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"8013"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2833"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3078"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2678"}]'
        ),
        tK = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_pool","type":"address"},{"name":"_base_pool","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"25605"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}],"gas":"26803"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"14494"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"32024"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3174"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3998"},{"stateMutability":"view","type":"function","name":"pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"1268"},{"stateMutability":"view","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"1298"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"1437"},{"stateMutability":"view","type":"function","name":"base_coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"1467"}]'
        ),
        tz = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"},{"name":"_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10374"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10336"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1020424"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4025403"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6217815"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2460710"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2641329"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"188799"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6217461"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1276"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3908396"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"159339"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"154800"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[],"gas":"112758"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"103439"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"22892"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"76930"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"65607"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"22982"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7838"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"36554"},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[],"gas":"82682"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40295"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23132"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3217"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3247"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3168"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3198"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3288"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3318"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3348"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3378"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3528"}]'
        ),
        tX = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_prices","type":"uint256[2]"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3361"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3391"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3421"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"468"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"582"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"597"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"11991"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"21481"},{"stateMutability":"view","type":"function","name":"fee_calc","inputs":[{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"11096"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"11582"},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3122"},{"stateMutability":"view","type":"function","name":"calc_token_fee","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"26582"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[],"gas":"1400833"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[3]"}],"outputs":[],"gas":"233573"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3429"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"13432"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[],"gas":"1310913"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"389296"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"163102"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"157247"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"306190"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"682926"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"23222"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"77260"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"65937"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"23312"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40535"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23372"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"38505"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3378"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3528"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3588"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3678"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3708"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3738"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3768"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3798"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3828"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3858"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3888"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3918"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3993"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3978"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"4008"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"4038"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4068"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4098"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4128"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"4158"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4188"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4218"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"4248"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"4278"}]'
        ),
        tQ = JSON.parse(
          '[{"name":"Deposit","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_admin","type":"address"},{"name":"_lp_token","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"288"},{"stateMutability":"view","type":"function","name":"reward_contract","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2628"},{"stateMutability":"view","type":"function","name":"last_claim","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2454"},{"stateMutability":"view","type":"function","name":"claimed_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2976"},{"stateMutability":"view","type":"function","name":"claimable_reward","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2944"},{"stateMutability":"view","type":"function","name":"claimable_reward_write","inputs":[{"name":"_addr","type":"address"},{"name":"_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2067617"},{"stateMutability":"nonpayable","type":"function","name":"set_rewards_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[],"gas":"35643"},{"stateMutability":"nonpayable","type":"function","name":"claim_rewards","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deposit","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw","inputs":[{"name":"_value","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"8092597"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"8130547"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"38091"},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"40635"},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"40659"},{"stateMutability":"nonpayable","type":"function","name":"set_rewards","inputs":[{"name":"_reward_contract","type":"address"},{"name":"_claim_sig","type":"bytes32"},{"name":"_reward_tokens","type":"address[8]"}],"outputs":[],"gas":"4442660"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"addr","type":"address"}],"outputs":[],"gas":"39375"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"39320"},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2928"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3173"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2988"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3448"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13350"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11103"},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3217"},{"stateMutability":"view","type":"function","name":"reward_balances","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3353"},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3383"},{"stateMutability":"view","type":"function","name":"claim_sig","inputs":[],"outputs":[{"name":"","type":"bytes"}],"gas":"11223"},{"stateMutability":"view","type":"function","name":"reward_integral","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3443"},{"stateMutability":"view","type":"function","name":"reward_integral_for","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3688"},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3288"},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3318"}]'
        ),
        t2 = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_reward","inputs":[{"name":"_token","type":"address"},{"name":"_distributor","type":"address"},{"name":"_duration","type":"uint256"}],"outputs":[],"gas":"147850"},{"stateMutability":"nonpayable","type":"function","name":"remove_reward","inputs":[{"name":"_token","type":"address"}],"outputs":[],"gas":"898282"},{"stateMutability":"nonpayable","type":"function","name":"set_receiver","inputs":[{"name":"_receiver","type":"address"}],"outputs":[],"gas":"37605"},{"stateMutability":"nonpayable","type":"function","name":"get_reward","inputs":[],"outputs":[],"gas":"496490"},{"stateMutability":"nonpayable","type":"function","name":"notify_reward_amount","inputs":[{"name":"_token","type":"address"}],"outputs":[],"gas":"1502780"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_duration","inputs":[{"name":"_token","type":"address"},{"name":"_duration","type":"uint256"}],"outputs":[],"gas":"40303"},{"stateMutability":"nonpayable","type":"function","name":"set_reward_distributor","inputs":[{"name":"_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[],"gas":"38012"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"37755"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"37700"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2658"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2688"},{"stateMutability":"view","type":"function","name":"reward_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2718"},{"stateMutability":"view","type":"function","name":"reward_tokens","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"2857"},{"stateMutability":"view","type":"function","name":"reward_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2778"},{"stateMutability":"view","type":"function","name":"reward_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"distributor","type":"address"},{"name":"period_finish","type":"uint256"},{"name":"rate","type":"uint256"},{"name":"duration","type":"uint256"},{"name":"received","type":"uint256"},{"name":"paid","type":"uint256"}],"gas":"14685"},{"stateMutability":"view","type":"function","name":"last_update_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2838"}]'
        ),
        t5 = em({
          '2pool': {
            name: '2pool',
            full_name: '2pool',
            symbol: '2pool',
            reference_asset: 'USD',
            swap_address: '0x27e611fd27b276acbd5ffd632e5eaebec9761e40',
            token_address: '0x27e611fd27b276acbd5ffd632e5eaebec9761e40',
            gauge_address: '0x15bB164F9827De760174d3d3dAD6816eF50dE13c',
            is_plain: !0,
            underlying_coins: ['DAI', 'USDC'],
            wrapped_coins: ['DAI', 'USDC'],
            underlying_coin_addresses: [
              '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',
              '0x04068da6c83afcfa0e13ba15a6696662335d5b75',
            ],
            wrapped_coin_addresses: [
              '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',
              '0x04068da6c83afcfa0e13ba15a6696662335d5b75',
            ],
            underlying_decimals: [18, 6],
            wrapped_decimals: [18, 6],
            swap_abi: tI,
            gauge_abi: tV,
          },
          fusdt: {
            name: 'fusdt',
            full_name: 'fusdt',
            symbol: 'fusdt',
            reference_asset: 'USD',
            swap_address: '0x92d5ebf3593a92888c25c0abef126583d4b5312e',
            token_address: '0x92d5ebf3593a92888c25c0abef126583d4b5312e',
            gauge_address: '0x06e3C4da96fd076b97b7ca3Ae23527314b6140dF',
            deposit_address: '0xa42bd395f183726d1a8774cfa795771f8acfd777',
            sCurveRewards_address: '0xfe1a3dd8b169fb5bf0d5dbfe813d956f39ff6310',
            is_meta: !0,
            base_pool: '2pool',
            underlying_coins: ['fUSDT', 'DAI', 'USDC'],
            wrapped_coins: ['fUSDT', 'DAI+USDC'],
            underlying_coin_addresses: [
              '0x049d68029688eabf473097a2fc38ef61633a3c7a',
              '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',
              '0x04068da6c83afcfa0e13ba15a6696662335d5b75',
            ],
            wrapped_coin_addresses: [
              '0x049d68029688eabf473097a2fc38ef61633a3c7a',
              '0x27e611fd27b276acbd5ffd632e5eaebec9761e40',
            ],
            underlying_decimals: [6, 18, 6],
            wrapped_decimals: [6, 18],
            swap_abi: tH,
            gauge_abi: tQ,
            deposit_abi: tK,
            sCurveRewards_abi: t2,
          },
          ren: {
            name: 'ren',
            full_name: 'ren',
            symbol: 'ren',
            reference_asset: 'BTC',
            is_plain: !0,
            swap_address: '0x3eF6A01A0f81D6046290f3e2A8c5b843e738E604',
            token_address: '0x5B5CFE992AdAC0C9D48E05854B2d91C73a003858',
            gauge_address: '0xbC38bD19227F91424eD4132F630f51C9A42Fa338',
            underlying_coins: ['WBTC', 'renBTC'],
            wrapped_coins: ['WBTC', 'renBTC'],
            underlying_coin_addresses: [
              '0x321162Cd933E2Be498Cd2267a90534A804051b11',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            wrapped_coin_addresses: [
              '0x321162Cd933E2Be498Cd2267a90534A804051b11',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            underlying_decimals: [8, 8],
            wrapped_decimals: [8, 8],
            swap_abi: tz,
            gauge_abi: tV,
          },
          tricrypto: {
            name: 'tricrypto',
            full_name: 'tricrypto',
            symbol: 'tricrypto',
            reference_asset: 'CRYPTO',
            swap_address: '0x3a1659Ddcf2339Be3aeA159cA010979FB49155FF',
            token_address: '0x58e57cA18B7A47112b877E31929798Cd3D703b0f',
            gauge_address: '0x319E268f0A4C85D404734ee7958857F5891506d7',
            is_crypto: !0,
            is_plain: !0,
            underlying_coins: ['fUSDT', 'WBTC', 'ETH'],
            wrapped_coins: ['fUSDT', 'WBTC', 'ETH'],
            underlying_coin_addresses: [
              '0x049d68029688eAbF473097a2fC38ef61633A3C7A',
              '0x321162Cd933E2Be498Cd2267a90534A804051b11',
              '0x74b23882a30290451A17c44f4F05243b6b58C76d',
            ],
            wrapped_coin_addresses: [
              '0x049d68029688eAbF473097a2fC38ef61633A3C7A',
              '0x321162Cd933E2Be498Cd2267a90534A804051b11',
              '0x74b23882a30290451A17c44f4F05243b6b58C76d',
            ],
            underlying_decimals: [6, 8, 18],
            wrapped_decimals: [6, 8, 18],
            swap_abi: tX,
            gauge_abi: tV,
          },
          ib: {
            name: 'ironbank',
            full_name: 'ironbank',
            symbol: 'ib',
            reference_asset: 'USD',
            swap_address: '0x4FC8D635c3cB1d0aa123859e2B2587d0FF2707b1',
            token_address: '0xDf38ec60c0eC001142a33eAa039e49E9b84E64ED',
            gauge_address: '0xDee85272EAe1aB4afBc6433F4d819BaBC9c7045A',
            sCurveRewards_address: '0x92bbf58c2a4514d44343b987d608627eb7d1d24f',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'fUSDT'],
            wrapped_coins: ['iDAI', 'iUSDC', 'iFUSDT'],
            underlying_coin_addresses: [
              '0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E',
              '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',
              '0x049d68029688eAbF473097a2fC38ef61633A3C7A',
            ],
            wrapped_coin_addresses: [
              '0x04c762a5dF2Fa02FE868F25359E0C259fB811CfE',
              '0x328A7b4d538A2b3942653a9983fdA3C12c571141',
              '0x70faC71debfD67394D1278D98A29dea79DC6E57A',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [8, 8, 8],
            use_lending: [!0, !0, !0],
            swap_abi: tw,
            gauge_abi: tQ,
            sCurveRewards_abi: t2,
          },
          geist: {
            name: 'geist',
            full_name: 'geist',
            symbol: 'geist',
            reference_asset: 'USD',
            swap_address: '0x0fa949783947Bf6c1b171DB13AEACBB488845B3f',
            token_address: '0xD02a30d33153877BC20e5721ee53DeDEE0422B2F',
            gauge_address: '0xF7b9c402c4D6c2eDbA04a7a515b53D11B1E9b2cc',
            is_lending: !0,
            underlying_coins: ['DAI', 'USDC', 'fUSDT'],
            wrapped_coins: ['gDAI', 'gUSDC', 'gfUSDT'],
            underlying_coin_addresses: [
              '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',
              '0x04068da6c83afcfa0e13ba15a6696662335d5b75',
              '0x049d68029688eabf473097a2fc38ef61633a3c7a',
            ],
            wrapped_coin_addresses: [
              '0x07e6332dd090d287d3489245038daf987955dcfb',
              '0xe578c856933d8e1082740bf7661e379aa2a30b26',
              '0x940f41f0ec9ba1a34cf001cc03347ac092f5f6b5',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            use_lending: [!0, !0, !0],
            swap_abi: tm,
            gauge_abi: tV,
          },
        }),
        t0 = em({
          aave: {
            name: 'aave',
            full_name: 'aave',
            symbol: 'aave',
            reference_asset: 'USD',
            swap_address: '0x7f90122BF0700F9E7e1F688fe926940E8839F353',
            token_address: '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
            gauge_address: '0x4620D46b4db7fB04a01A75fFed228Bc027C9A899',
            is_lending: !0,
            underlying_coins: ['DAI.e', 'USDC.e', 'USDT.e'],
            wrapped_coins: ['avDAI', 'avUSDC', 'avUSDT'],
            underlying_coin_addresses: [
              '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',
              '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',
              '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',
            ],
            wrapped_coin_addresses: [
              '0x47AFa96Cdc9fAb46904A55a6ad4bf6660B53c38a',
              '0x46A51127C3ce23fb7AB1DE06226147F446e4a857',
              '0x532E6537FEA298397212F09A61e03311686f548e',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            use_lending: [!0, !0, !0],
            swap_abi: tm,
            gauge_abi: tV,
          },
          ren: {
            name: 'ren',
            full_name: 'ren',
            symbol: 'ren',
            reference_asset: 'BTC',
            swap_address: '0x16a7DA911A4DD1d83F3fF066fE28F3C792C50d90',
            token_address: '0xC2b1DF84112619D190193E48148000e3990Bf627',
            gauge_address: '0x00F7d467ef51E44f11f52a0c0Bef2E56C271b264',
            is_lending: !0,
            underlying_coins: ['WBTC.e', 'renBTC'],
            wrapped_coins: ['avWBTC', 'renBTC'],
            underlying_coin_addresses: [
              '0x50b7545627a5162F82A992c33b87aDc75187B218',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            wrapped_coin_addresses: [
              '0x686bEF2417b6Dc32C50a3cBfbCC3bb60E1e9a15D',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            underlying_decimals: [8, 8],
            wrapped_decimals: [8, 8],
            use_lending: [!0, !1],
            swap_abi: tW,
            gauge_abi: tV,
          },
          atricrypto: {
            name: 'atricrypto',
            full_name: 'atricrypto',
            symbol: 'atricrypto',
            reference_asset: 'CRYPTO',
            swap_address: '0xB755B949C126C04e0348DD881a5cF55d424742B2',
            token_address: '0x1daB6560494B04473A0BE3E7D83CF3Fdf3a51828',
            gauge_address: '0x1879075f1c055564CB968905aC404A5A01a1699A',
            deposit_address: '0x58e57cA18B7A47112b877E31929798Cd3D703b0f',
            is_meta: !0,
            is_crypto: !0,
            is_fake: !0,
            base_pool: 'aave',
            meta_coin_idx: 0,
            underlying_coins: ['DAI.e', 'USDC.e', 'USDT.e', 'WBTC.e', 'WETH.e'],
            wrapped_coins: ['av3CRV', 'avWBTC', 'avWETH'],
            underlying_coin_addresses: [
              '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',
              '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',
              '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',
              '0x50b7545627a5162F82A992c33b87aDc75187B218',
              '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB',
            ],
            wrapped_coin_addresses: [
              '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
              '0x686bEF2417b6Dc32C50a3cBfbCC3bb60E1e9a15D',
              '0x53f7c5869a859F0AeC3D334ee8B4Cf01E3492f21',
            ],
            underlying_decimals: [18, 6, 6, 8, 18],
            wrapped_decimals: [18, 8, 18],
            use_lending: [!1, !1, !1, !1, !1],
            swap_abi: tY,
            gauge_abi: tV,
            deposit_abi: tZ,
          },
          aaveV3: {
            name: 'aaveV3',
            full_name: 'aaveV3',
            symbol: 'aaveV3',
            reference_asset: 'USD',
            swap_address: '0xD2AcAe14ae2ee0f6557aC6C6D0e407a92C36214b',
            token_address: '0x5bE26703a658c332CE612eAe3A497059dA98394a',
            gauge_address: '0x55f9Ba282c39793DB29C68F8f113fC97D23a6445',
            is_lending: !0,
            underlying_coins: ['DAI.e', 'USDC', 'USDt'],
            wrapped_coins: ['aAvaDAI', 'aAvaUSDC', 'aAvaUSDT'],
            underlying_coin_addresses: [
              '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',
              '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',
              '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',
            ],
            wrapped_coin_addresses: [
              '0x82E64f49Ed5EC1bC6e43DAD4FC8Af9bb3A2312EE',
              '0x625E7708f30cA75bfd92586e17077590C60eb4cD',
              '0x6ab707Aca953eDAeFBc4fD23bA73294241490620',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            use_lending: [!0, !0, !0],
            swap_abi: tm,
            gauge_abi: tV,
          },
          avaxcrypto: {
            name: 'avaxcrypto',
            full_name: 'avaxcrypto',
            symbol: 'avaxcrypto',
            reference_asset: 'CRYPTO',
            swap_address: '0x204f0620E7E7f07B780535711884835977679bba',
            token_address: '0x6a4aC4DE3bF6bCD2975E2cb15A46954D9bA43fDb',
            gauge_address: '0xf6C5Be565A25Be925c9D8fB0368a87bd20ee470b',
            deposit_address: '0x9f2Fa7709B30c75047980a0d70A106728f0Ef2db',
            is_meta: !0,
            is_crypto: !0,
            base_pool: 'factory-v2-99',
            meta_coin_idx: 0,
            underlying_coins: ['USDC', 'USDt', 'BTC.b', 'AVAX'],
            wrapped_coins: ['2CRV', 'BTC.b', 'WAVAX'],
            underlying_coin_addresses: [
              '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e',
              '0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7',
              '0x152b9d0FdC40C096757F570A51E494bd4b943E50',
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
            ],
            wrapped_coin_addresses: [
              '0x0974D9d3bc463Fa17497aAFc3a87535553298FbE',
              '0x152b9d0FdC40C096757F570A51E494bd4b943E50',
              '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',
            ],
            underlying_decimals: [6, 6, 8, 18],
            wrapped_decimals: [18, 8, 18],
            swap_abi: JSON.parse(
              '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_prices","type":"uint256[2]"}],"outputs":[],"name":"constructor"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee_calc","inputs":[{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_fee","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[3]"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
            ),
            gauge_abi: tV,
            deposit_abi: JSON.parse(
              '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_pool","type":"address"},{"name":"_base_pool","type":"address"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[]},{"stateMutability":"payable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"},{"name":"use_eth","type":"bool"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"underlying_coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
            ),
          },
        }),
        t6 = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[],"name":"constructor"},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"426"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"558"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"595"},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"6499"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"9743"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"360707"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16670379"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4557895"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"17621237"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"}],"outputs":[],"gas":"174292"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5182497"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7264"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"16601846"},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[],"gas":"3226971"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[],"gas":"153778"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[],"gas":"150123"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[],"gas":"293264"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[],"gas":"3504861"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"21722"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"76107"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"61722"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"21812"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"37735"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"21872"},{"stateMutability":"nonpayable","type":"function","name":"set_admin_fee_receiver","inputs":[{"name":"_admin_fee_receiver","type":"address"}],"outputs":[],"gas":"37062"},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1976"},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2006"},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2036"},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2066"},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2096"},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2126"},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2156"},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2186"},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2216"},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2246"},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2276"},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2306"},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2336"},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2366"},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2396"},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2426"},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2456"},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2486"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2516"},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2546"},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2576"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2606"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2681"},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2666"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2696"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2726"},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2756"},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2786"},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2816"},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"2846"},{"stateMutability":"view","type":"function","name":"kill_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2876"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2906"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2936"},{"stateMutability":"view","type":"function","name":"admin_fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"2966"}]'
        ),
        t1 = JSON.parse(
          '[{"inputs":[{"name":"_pool","type":"address"},{"name":"_base_pool","type":"address"}],"outputs":[],"stateMutability":"nonpayable","type":"constructor","name":"constructor"},{"gas":"4244","inputs":[],"name":"price_oracle","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4274","inputs":[],"name":"price_scale","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"21320","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"23822","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"31724","inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"name":"remove_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"14811","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"9456","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4764","inputs":[{"name":"_amounts","type":"uint256[3]"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"6585","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1535","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1571","inputs":[{"name":"arg0","type":"uint256"}],"name":"underlying_coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1556","inputs":[],"name":"pool","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1586","inputs":[],"name":"base_pool","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1616","inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"}]'
        ),
        t8 = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_coins","type":"address[2]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"288"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79157"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"117092"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39121"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"4677"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10674"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10636"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"844048"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3326331"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2112598"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1018"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"159505"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"155422"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[],"gas":"113605"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"103911"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"23042"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"78640"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"66942"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"23132"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7860"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"21859"},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[],"gas":"82576"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40445"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23282"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3303"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3333"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3318"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3348"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3378"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3528"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3588"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3648"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13908"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11661"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3953"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4198"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3798"}]'
        ),
        t3 = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_owner","type":"address"},{"name":"_coins","type":"address[2]"},{"name":"_pool_token","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"},{"name":"_oracle","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"new_fee","type":"uint256"},{"name":"new_admin_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"oracle","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"lp_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
        ),
        t4 = em({
          '2pool': {
            name: '2pool',
            full_name: '2pool',
            symbol: '2pool',
            reference_asset: 'USD',
            swap_address: '0x7f90122bf0700f9e7e1f688fe926940e8839f353',
            token_address: '0x7f90122bf0700f9e7e1f688fe926940e8839f353',
            gauge_address: '0xCE5F24B7A95e9cBa7df4B54E911B4A3Dc8CDAf6f',
            is_plain: !0,
            underlying_coins: ['USDC.e', 'USD₮0'],
            wrapped_coins: ['USDC.e', 'USD₮0'],
            underlying_coin_addresses: [
              '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',
              '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',
            ],
            wrapped_coin_addresses: [
              '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',
              '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',
            ],
            underlying_decimals: [6, 6],
            wrapped_decimals: [6, 6],
            swap_abi: tI,
            gauge_abi: tV,
          },
          tricrypto: {
            name: 'tricrypto',
            full_name: 'tricrypto',
            symbol: 'tricrypto',
            reference_asset: 'CRYPTO',
            is_crypto: !0,
            swap_address: '0x960ea3e3C7FB317332d990873d354E18d7645590',
            token_address: '0x8e0B8c8BB9db49a46697F3a5Bb8A308e744821D2',
            gauge_address: '0x555766f3da968ecBefa690Ffd49A2Ac02f47aa5f',
            deposit_address: '0xF97c707024ef0DD3E77a0824555a46B622bfB500',
            underlying_coins: ['USD₮0', 'WBTC', 'ETH'],
            wrapped_coins: ['USD₮0', 'WBTC', 'WETH'],
            underlying_coin_addresses: [
              '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',
              '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f',
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
            ],
            wrapped_coin_addresses: [
              '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',
              '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f',
              '0x82af49447d8a07e3bd95bd0d56f35241523fbab1',
            ],
            underlying_decimals: [6, 8, 18],
            wrapped_decimals: [6, 8, 18],
            swap_abi: tC,
            gauge_abi: tV,
            deposit_abi: tk,
          },
          ren: {
            name: 'ren',
            full_name: 'ren',
            symbol: 'ren',
            reference_asset: 'BTC',
            is_plain: !0,
            swap_address: '0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb',
            token_address: '0x3E01dD8a5E1fb3481F0F589056b428Fc308AF0Fb',
            gauge_address: '0xDB3fd1bfC67b5D4325cb31C04E0Cae52f1787FD6',
            underlying_coins: ['WBTC', 'renBTC'],
            wrapped_coins: ['WBTC', 'renBTC'],
            underlying_coin_addresses: [
              '0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            wrapped_coin_addresses: [
              '0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f',
              '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
            ],
            underlying_decimals: [8, 8],
            wrapped_decimals: [8, 8],
            swap_abi: t8,
            gauge_abi: tV,
          },
          eursusd: {
            name: 'eursusd',
            full_name: 'eursusd',
            symbol: 'eursusd',
            reference_asset: 'CRYPTO',
            swap_address: '0xA827a652Ead76c6B0b3D19dba05452E06e25c27e',
            token_address: '0x3dFe1324A0ee9d86337d06aEB829dEb4528DB9CA',
            gauge_address: '0x6339eF8Df0C2d3d3E7eE697E241666a916B81587',
            deposit_address: '0x25e2e8d104BC1A70492e2BE32dA7c1f8367F9d2c',
            is_meta: !0,
            is_crypto: !0,
            base_pool: '2pool',
            underlying_coins: ['EURS', 'USDC.e', 'USD₮0'],
            wrapped_coins: ['EURS', '2CRV'],
            underlying_coin_addresses: [
              '0xd22a58f79e9481d1a88e00c343885a588b34b68b',
              '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',
              '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',
            ],
            wrapped_coin_addresses: [
              '0xd22a58f79e9481d1a88e00c343885a588b34b68b',
              '0x7f90122bf0700f9e7e1f688fe926940e8839f353',
            ],
            underlying_decimals: [2, 6, 6],
            wrapped_decimals: [2, 18],
            swap_abi: t6,
            gauge_abi: tV,
            deposit_abi: t1,
          },
          wsteth: {
            name: 'wsteth',
            full_name: 'wsteth',
            symbol: 'wsteth',
            reference_asset: 'ETH',
            is_plain: !0,
            swap_address: '0x6eB2dc694eB516B16Dc9FBc678C60052BbdD7d80',
            token_address: '0xDbcD16e622c95AcB2650b38eC799f76BFC557a0b',
            gauge_address: '0x098EF55011B6B8c99845128114A9D9159777d697',
            underlying_coins: ['ETH', 'wstETH'],
            wrapped_coins: ['ETH', 'wstETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x5979D7b546E38E414F7E9822514be443A4800529',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x5979D7b546E38E414F7E9822514be443A4800529',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: t3,
            gauge_abi: tV,
          },
        }),
        t9 = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fees","type":"uint256[3]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fees","type":"uint256[3]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fees","type":"uint256[3]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewAdmin","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"NewAdmin","inputs":[{"name":"admin","type":"address","indexed":true}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_coins","type":"address[3]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_admin_fee","type":"uint256"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"360"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"78945"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116925"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39181"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[3]"}],"gas":"6834"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10358"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10358"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"947474"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1879145"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3098855"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1294964"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1453628"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}],"gas":"292198"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3098883"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1151"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1840077"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"158694"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"154917"},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"}],"outputs":[],"gas":"113448"},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[],"gas":"103771"},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[],"gas":"23051"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_owner","type":"address"}],"outputs":[],"gas":"78686"},{"stateMutability":"nonpayable","type":"function","name":"apply_transfer_ownership","inputs":[],"outputs":[],"gas":"66954"},{"stateMutability":"nonpayable","type":"function","name":"revert_transfer_ownership","inputs":[],"outputs":[],"gas":"23141"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7919"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"45837"},{"stateMutability":"nonpayable","type":"function","name":"donate_admin_fees","inputs":[],"outputs":[],"gas":"122256"},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[],"gas":"40454"},{"stateMutability":"nonpayable","type":"function","name":"unkill_me","inputs":[],"outputs":[],"gas":"23291"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3375"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3405"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3390"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3420"},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3450"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3480"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3510"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3540"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3570"},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3600"},{"stateMutability":"view","type":"function","name":"transfer_ownership_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3630"},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3660"},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3690"},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3720"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"14039"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11798"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4076"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4372"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3870"}]'
        ),
        t7 = em({
          '3pool': {
            name: '3pool',
            full_name: '3pool',
            symbol: '3pool',
            reference_asset: 'USD',
            is_plain: !0,
            swap_address: '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
            token_address: '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
            gauge_address: '0x15F52286C0FF1d7A7dDbC9E300dd66628D46D4e6',
            underlying_coins: ['DAI', 'USDC.e', 'USDT'],
            wrapped_coins: ['DAI', 'USDC.e', 'USDT'],
            underlying_coin_addresses: [
              '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1',
              '0x7f5c764cbc14f9669b88837ca1490cca17c31607',
              '0x94b008aa00579c1307b0ef2c499ad98a8ce58e58',
            ],
            wrapped_coin_addresses: [
              '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1',
              '0x7f5c764cbc14f9669b88837ca1490cca17c31607',
              '0x94b008aa00579c1307b0ef2c499ad98a8ce58e58',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            swap_abi: t9,
            gauge_abi: tV,
          },
          wsteth: {
            name: 'wsteth',
            full_name: 'wsteth',
            symbol: 'wsteth',
            reference_asset: 'ETH',
            is_plain: !0,
            swap_address: '0xB90B9B1F91a01Ea22A182CD84C1E22222e39B415',
            token_address: '0xEfDE221f306152971D8e9f181bFe998447975810',
            gauge_address: '0xD53cCBfED6577d8dc82987e766e75E3cb73a8563',
            underlying_coins: ['ETH', 'wstETH'],
            wrapped_coins: ['ETH', 'wstETH'],
            underlying_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x1f32b1c2345538c0c6f582fcb022739c4a194ebb',
            ],
            wrapped_coin_addresses: [
              '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
              '0x1f32b1c2345538c0c6f582fcb022739c4a194ebb',
            ],
            underlying_decimals: [18, 18],
            wrapped_decimals: [18, 18],
            swap_abi: t3,
            gauge_abi: tV,
          },
        }),
        ne = JSON.parse(
          '[{"type":"event","name":"TokenExchange","inputs":[{"type":"address","name":"buyer","indexed":true},{"type":"uint256","name":"sold_id","indexed":false},{"type":"uint256","name":"tokens_sold","indexed":false},{"type":"uint256","name":"bought_id","indexed":false},{"type":"uint256","name":"tokens_bought","indexed":false}],"anonymous":false},{"type":"event","name":"AddLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256","name":"fee","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false},{"type":"event","name":"RemoveLiquidity","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256[3]","name":"token_amounts","indexed":false},{"type":"uint256","name":"token_supply","indexed":false}],"anonymous":false},{"type":"event","name":"RemoveLiquidityOne","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"token_amount","indexed":false},{"type":"uint256","name":"coin_index","indexed":false},{"type":"uint256","name":"coin_amount","indexed":false}],"anonymous":false},{"type":"event","name":"CommitNewAdmin","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"address","name":"admin","indexed":true}],"anonymous":false},{"type":"event","name":"NewAdmin","inputs":[{"type":"address","name":"admin","indexed":true}],"anonymous":false},{"type":"event","name":"CommitNewParameters","inputs":[{"type":"uint256","name":"deadline","indexed":true},{"type":"uint256","name":"admin_fee","indexed":false},{"type":"uint256","name":"mid_fee","indexed":false},{"type":"uint256","name":"out_fee","indexed":false},{"type":"uint256","name":"fee_gamma","indexed":false},{"type":"uint256","name":"allowed_extra_profit","indexed":false},{"type":"uint256","name":"adjustment_step","indexed":false},{"type":"uint256","name":"ma_half_time","indexed":false}],"anonymous":false},{"type":"event","name":"NewParameters","inputs":[{"type":"uint256","name":"admin_fee","indexed":false},{"type":"uint256","name":"mid_fee","indexed":false},{"type":"uint256","name":"out_fee","indexed":false},{"type":"uint256","name":"fee_gamma","indexed":false},{"type":"uint256","name":"allowed_extra_profit","indexed":false},{"type":"uint256","name":"adjustment_step","indexed":false},{"type":"uint256","name":"ma_half_time","indexed":false}],"anonymous":false},{"type":"event","name":"RampAgamma","inputs":[{"type":"uint256","name":"initial_A","indexed":false},{"type":"uint256","name":"future_A","indexed":false},{"type":"uint256","name":"initial_gamma","indexed":false},{"type":"uint256","name":"future_gamma","indexed":false},{"type":"uint256","name":"initial_time","indexed":false},{"type":"uint256","name":"future_time","indexed":false}],"anonymous":false},{"type":"event","name":"StopRampA","inputs":[{"type":"uint256","name":"current_A","indexed":false},{"type":"uint256","name":"current_gamma","indexed":false},{"type":"uint256","name":"time","indexed":false}],"anonymous":false},{"type":"event","name":"ClaimAdminFee","inputs":[{"type":"address","name":"admin","indexed":true},{"type":"uint256","name":"tokens","indexed":false}],"anonymous":false},{"type":"constructor","stateMutability":"nonpayable","outputs":[],"inputs":[{"type":"address","name":"owner"},{"type":"address","name":"admin_fee_receiver"},{"type":"uint256","name":"A"},{"type":"uint256","name":"gamma"},{"type":"uint256","name":"mid_fee"},{"type":"uint256","name":"out_fee"},{"type":"uint256","name":"allowed_extra_profit"},{"type":"uint256","name":"fee_gamma"},{"type":"uint256","name":"adjustment_step"},{"type":"uint256","name":"admin_fee"},{"type":"uint256","name":"ma_half_time"},{"type":"uint256[2]","name":"initial_prices"}]},{"type":"fallback","stateMutability":"payable"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"price_oracle","inputs":[{"type":"uint256","name":"k"}],"gas":"3189"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"price_scale","inputs":[{"type":"uint256","name":"k"}],"gas":"3219"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"last_prices","inputs":[{"type":"uint256","name":"k"}],"gas":"3249"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"token","inputs":[],"gas":"540"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"coins","inputs":[{"type":"uint256","name":"i"}],"gas":"684"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"A","inputs":[],"gas":"703"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"gamma","inputs":[],"gas":"11360"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"fee","inputs":[],"gas":"21008"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"fee_calc","inputs":[{"type":"uint256[3]","name":"xp"}],"gas":"10799"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"get_virtual_price","inputs":[],"gas":"11241"},{"type":"function","stateMutability":"payable","outputs":[{"type":"uint256","name":""}],"name":"exchange","inputs":[{"type":"uint256","name":"i"},{"type":"uint256","name":"j"},{"type":"uint256","name":"dx"},{"type":"uint256","name":"min_dy"},{"type":"bool","name":"use_eth"}],"gas":"775369"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"get_dy","inputs":[{"type":"uint256","name":"i"},{"type":"uint256","name":"j"},{"type":"uint256","name":"dx"}],"gas":"3208"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"calc_token_fee","inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256[3]","name":"xp"}],"gas":"15069"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"add_liquidity","inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"uint256","name":"min_mint_amount"}],"gas":"726697"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"remove_liquidity","inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[3]","name":"min_amounts"}],"gas":"233147"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"calc_token_amount","inputs":[{"type":"uint256[3]","name":"amounts"},{"type":"bool","name":"deposit"}],"gas":"3524"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"calc_withdraw_one_coin","inputs":[{"type":"uint256","name":"token_amount"},{"type":"uint256","name":"i"}],"gas":"12128"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"remove_liquidity_one_coin","inputs":[{"type":"uint256","name":"token_amount"},{"type":"uint256","name":"i"},{"type":"uint256","name":"min_amount"}],"gas":"637383"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"claim_admin_fees","inputs":[],"gas":"360524"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"ramp_A_gamma","inputs":[{"type":"uint256","name":"future_A"},{"type":"uint256","name":"future_gamma"},{"type":"uint256","name":"future_time"}],"gas":"161064"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"stop_ramp_A_gamma","inputs":[],"gas":"156373"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"commit_new_parameters","inputs":[{"type":"uint256","name":"_new_mid_fee"},{"type":"uint256","name":"_new_out_fee"},{"type":"uint256","name":"_new_admin_fee"},{"type":"uint256","name":"_new_fee_gamma"},{"type":"uint256","name":"_new_allowed_extra_profit"},{"type":"uint256","name":"_new_adjustment_step"},{"type":"uint256","name":"_new_ma_half_time"}],"gas":"305138"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"apply_new_parameters","inputs":[],"gas":"652722"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"revert_new_parameters","inputs":[],"gas":"23231"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"commit_transfer_ownership","inputs":[{"type":"address","name":"_owner"}],"gas":"78866"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"apply_transfer_ownership","inputs":[],"gas":"67134"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"revert_transfer_ownership","inputs":[],"gas":"23321"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"kill_me","inputs":[],"gas":"40544"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"unkill_me","inputs":[],"gas":"23381"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"set_admin_fee_receiver","inputs":[{"type":"address","name":"_admin_fee_receiver"}],"gas":"38565"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"last_prices_timestamp","inputs":[],"gas":"3450"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"initial_A_gamma","inputs":[],"gas":"3480"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_A_gamma","inputs":[],"gas":"3510"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"initial_A_gamma_time","inputs":[],"gas":"3540"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_A_gamma_time","inputs":[],"gas":"3570"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"allowed_extra_profit","inputs":[],"gas":"3600"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_allowed_extra_profit","inputs":[],"gas":"3630"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"fee_gamma","inputs":[],"gas":"3660"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_fee_gamma","inputs":[],"gas":"3690"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"adjustment_step","inputs":[],"gas":"3720"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_adjustment_step","inputs":[],"gas":"3750"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"ma_half_time","inputs":[],"gas":"3780"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_ma_half_time","inputs":[],"gas":"3810"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"mid_fee","inputs":[],"gas":"3840"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"out_fee","inputs":[],"gas":"3870"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"admin_fee","inputs":[],"gas":"3900"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_mid_fee","inputs":[],"gas":"3930"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_out_fee","inputs":[],"gas":"3960"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"future_admin_fee","inputs":[],"gas":"3990"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"balances","inputs":[{"type":"uint256","name":"arg0"}],"gas":"4065"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"D","inputs":[],"gas":"4050"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"owner","inputs":[],"gas":"4080"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"future_owner","inputs":[],"gas":"4110"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"xcp_profit","inputs":[],"gas":"4140"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"xcp_profit_a","inputs":[],"gas":"4170"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"virtual_price","inputs":[],"gas":"4200"},{"type":"function","stateMutability":"view","outputs":[{"type":"bool","name":""}],"name":"is_killed","inputs":[],"gas":"4230"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"kill_deadline","inputs":[],"gas":"4260"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"transfer_ownership_deadline","inputs":[],"gas":"4290"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"admin_actions_deadline","inputs":[],"gas":"4320"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"admin_fee_receiver","inputs":[],"gas":"4350"}]'
        ),
        nt = JSON.parse(
          '[{"type":"constructor","stateMutability":"nonpayable","outputs":[],"inputs":[{"type":"address","name":"_pool"},{"type":"address","name":"_base_pool"}]},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"add_liquidity","inputs":[{"type":"uint256[5]","name":"_amounts"},{"type":"uint256","name":"_min_mint_amount"}],"gas":"67403"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"exchange_underlying","inputs":[{"type":"uint256","name":"i"},{"type":"uint256","name":"j"},{"type":"uint256","name":"_dx"},{"type":"uint256","name":"_min_dy"}],"gas":"42830"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"remove_liquidity","inputs":[{"type":"uint256","name":"_amount"},{"type":"uint256[5]","name":"_min_amounts"}],"gas":"93404"},{"type":"function","stateMutability":"nonpayable","outputs":[],"name":"remove_liquidity_one_coin","inputs":[{"type":"uint256","name":"_token_amount"},{"type":"uint256","name":"i"},{"type":"uint256","name":"_min_amount"}],"gas":"33153"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"get_dy_underlying","inputs":[{"type":"uint256","name":"i"},{"type":"uint256","name":"j"},{"type":"uint256","name":"_dx"}],"gas":"19678"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"calc_token_amount","inputs":[{"type":"uint256[5]","name":"_amounts"},{"type":"bool","name":"_is_deposit"}],"gas":"9954"},{"type":"function","stateMutability":"view","outputs":[{"type":"uint256","name":""}],"name":"calc_withdraw_one_coin","inputs":[{"type":"uint256","name":"token_amount"},{"type":"uint256","name":"i"}],"gas":"14541"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"coins","inputs":[{"type":"uint256","name":"arg0"}],"gas":"2709"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"underlying_coins","inputs":[{"type":"uint256","name":"arg0"}],"gas":"2745"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"pool","inputs":[],"gas":"2730"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"base_pool","inputs":[],"gas":"2760"},{"type":"function","stateMutability":"view","outputs":[{"type":"address","name":""}],"name":"token","inputs":[],"gas":"2790"}]'
        ),
        nn = em({
          '3pool': {
            name: '3pool',
            full_name: '3pool',
            symbol: '3pool',
            reference_asset: 'USD',
            swap_address: '0x7f90122BF0700F9E7e1F688fe926940E8839F353',
            token_address: '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
            gauge_address: '0xb721cc32160ab0da2614cc6ab16ed822aeebc101',
            sCurveRewards_address: '0x6C09F6727113543Fd061a721da512B7eFCDD0267',
            is_plain: !0,
            underlying_coins: ['WXDAI', 'USDC', 'USDT'],
            wrapped_coins: ['WXDAI', 'USDC', 'USDT'],
            underlying_coin_addresses: [
              '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',
              '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',
              '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',
            ],
            wrapped_coin_addresses: [
              '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',
              '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',
              '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            swap_abi: eU,
            gauge_abi: tV,
            sCurveRewards_abi: t2,
          },
          rai: {
            name: 'rai',
            full_name: 'rai',
            symbol: 'rai',
            reference_asset: 'USD',
            swap_address: '0x85bA9Dfb4a3E4541420Fc75Be02E2B42042D7e46',
            token_address: '0x36390a1Ae126f16C5D222CB1F2AB341dD09f2FEC',
            gauge_address: '0x0000000000000000000000000000000000000000',
            deposit_address: '0xdf6eb52c4A9d7d5964b918c50D47a643Fd7D3D4c',
            is_meta: !0,
            base_pool: '3pool',
            underlying_coins: ['RAI', 'WXDAI', 'USDC', 'USDT'],
            wrapped_coins: ['RAI', 'x3CRV'],
            underlying_coin_addresses: [
              '0xd7a28aa9c470e7e9d8c676bcd5dd2f40c5683afa',
              '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',
              '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',
              '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',
            ],
            wrapped_coin_addresses: [
              '0xd7a28aa9c470e7e9d8c676bcd5dd2f40c5683afa',
              '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: tB,
            gauge_abi: tQ,
            deposit_abi: tR,
          },
          tricrypto: {
            name: 'tricrypto',
            full_name: 'tricrypto',
            symbol: 'tricrypto',
            reference_asset: 'CRYPTO',
            swap_address: '0x5633E00994896D0F472926050eCb32E38bef3e65',
            token_address: '0x02E7e2dd3BA409148A49D5cc9a9034D2f884F245',
            gauge_address: '0x0000000000000000000000000000000000000000',
            deposit_address: '0xF182926A64C0A19234E7E1FCDfE772aA7A1CA351',
            is_crypto: !0,
            is_meta: !0,
            base_pool: '3pool',
            meta_coin_idx: 0,
            underlying_coins: ['WXDAI', 'USDC', 'USDT', 'WBTC', 'WETH'],
            wrapped_coins: ['x3CRV', 'WBTC', 'WETH'],
            underlying_coin_addresses: [
              '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',
              '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',
              '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',
              '0x8e5bBbb09Ed1ebdE8674Cda39A0c169401db4252',
              '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',
            ],
            wrapped_coin_addresses: [
              '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
              '0x8e5bBbb09Ed1ebdE8674Cda39A0c169401db4252',
              '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',
            ],
            underlying_decimals: [18, 6, 6, 8, 18],
            wrapped_decimals: [18, 8, 18],
            swap_abi: ne,
            gauge_abi: tQ,
            deposit_abi: nt,
          },
          eureusd: {
            name: 'eureusd',
            full_name: 'eureusd',
            symbol: 'eureusd',
            reference_asset: 'CRYPTO',
            swap_address: '0x056C6C5e684CeC248635eD86033378Cc444459B0',
            token_address: '0x0CA1C1eC4EBf3CC67a9f545fF90a3795b318cA4a',
            gauge_address: '0xd91770E868c7471a9585d1819143063A40c54D00',
            deposit_address: '0xE3FFF29d4DC930EBb787FeCd49Ee5963DADf60b6',
            is_meta: !0,
            is_crypto: !0,
            base_pool: '3pool',
            underlying_coins: ['EURe', 'WXDAI', 'USDC', 'USDT'],
            wrapped_coins: ['EURe', 'x3CRV'],
            underlying_coin_addresses: [
              '0xcB444e90D8198415266c6a2724b7900fb12FC56E',
              '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',
              '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',
              '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',
            ],
            wrapped_coin_addresses: [
              '0xcB444e90D8198415266c6a2724b7900fb12FC56E',
              '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
            ],
            underlying_decimals: [18, 18, 6, 6],
            wrapped_decimals: [18, 18],
            swap_abi: JSON.parse(
              '[{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"uint256"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"uint256"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fee","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_index","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"deadline","type":"uint256"},{"indexed":true,"name":"admin","type":"address"}],"name":"CommitNewAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"admin","type":"address"}],"name":"NewAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"deadline","type":"uint256"},{"indexed":false,"name":"admin_fee","type":"uint256"},{"indexed":false,"name":"mid_fee","type":"uint256"},{"indexed":false,"name":"out_fee","type":"uint256"},{"indexed":false,"name":"fee_gamma","type":"uint256"},{"indexed":false,"name":"allowed_extra_profit","type":"uint256"},{"indexed":false,"name":"adjustment_step","type":"uint256"},{"indexed":false,"name":"ma_half_time","type":"uint256"}],"name":"CommitNewParameters","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"admin_fee","type":"uint256"},{"indexed":false,"name":"mid_fee","type":"uint256"},{"indexed":false,"name":"out_fee","type":"uint256"},{"indexed":false,"name":"fee_gamma","type":"uint256"},{"indexed":false,"name":"allowed_extra_profit","type":"uint256"},{"indexed":false,"name":"adjustment_step","type":"uint256"},{"indexed":false,"name":"ma_half_time","type":"uint256"}],"name":"NewParameters","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"initial_A","type":"uint256"},{"indexed":false,"name":"future_A","type":"uint256"},{"indexed":false,"name":"initial_gamma","type":"uint256"},{"indexed":false,"name":"future_gamma","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampAgamma","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"current_A","type":"uint256"},{"indexed":false,"name":"current_gamma","type":"uint256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"StopRampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"admin","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"ClaimAdminFee","type":"event"},{"inputs":[{"name":"owner","type":"address"},{"name":"admin_fee_receiver","type":"address"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"},{"name":"_token","type":"address"},{"name":"_coins","type":"address[2]"}],"outputs":[],"stateMutability":"nonpayable","type":"constructor","name":"constructor"},{"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price_oracle","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"},{"name":"sender","type":"address"},{"name":"receiver","type":"address"},{"name":"cb","type":"bytes"}],"name":"exchange_extended","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"amounts","type":"uint256[2]"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claim_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"name":"ramp_A_gamma","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stop_ramp_A_gamma","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"name":"commit_new_parameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"apply_new_parameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revert_new_parameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_owner","type":"address"}],"name":"commit_transfer_ownership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"apply_transfer_ownership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revert_transfer_ownership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kill_me","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unkill_me","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_admin_fee_receiver","type":"address"}],"name":"set_admin_fee_receiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lp_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price_scale","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_prices","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_prices_timestamp","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initial_A_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_A_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initial_A_gamma_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_A_gamma_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowed_extra_profit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_allowed_extra_profit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_fee_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adjustment_step","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_adjustment_step","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ma_half_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_ma_half_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mid_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"out_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_mid_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_out_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"D","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_owner","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xcp_profit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xcp_profit_a","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"is_killed","outputs":[{"name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"kill_deadline","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transfer_ownership_deadline","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_actions_deadline","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_fee_receiver","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"}]'
            ),
            gauge_abi: tV,
            deposit_abi: JSON.parse(
              '[{"inputs":[{"name":"pool","type":"address"},{"name":"base_pool","type":"address"}],"outputs":[],"stateMutability":"nonpayable","type":"constructor","name":"constructor"},{"inputs":[{"name":"i","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"}],"name":"underlying_coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"base_pool","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price_oracle","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price_scale","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"name":"remove_liquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
            ),
          },
        }),
        na = em({
          '3pool': {
            name: '3pool',
            full_name: '3pool',
            symbol: '3pool',
            reference_asset: 'USD',
            swap_address: '0xace58a26b8db90498ef0330fdc9c2655db0c45e2',
            token_address: '0xace58a26b8db90498ef0330fdc9c2655db0c45e2',
            gauge_address: '0x0000000000000000000000000000000000000000',
            is_plain: !0,
            underlying_coins: ['DAI', 'USDC', 'USDT'],
            wrapped_coins: ['DAI', 'USDC', 'USDT'],
            underlying_coin_addresses: [
              '0xc234A67a4F840E61adE794be47de455361b52413',
              '0x8f552a71EFE5eeFc207Bf75485b356A0b3f01eC9',
              '0x8e70cD5B4Ff3f62659049e74b6649c6603A0E594',
            ],
            wrapped_coin_addresses: [
              '0xc234A67a4F840E61adE794be47de455361b52413',
              '0x8f552a71EFE5eeFc207Bf75485b356A0b3f01eC9',
              '0x8e70cD5B4Ff3f62659049e74b6649c6603A0E594',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            swap_abi: t9,
            gauge_abi: tV,
          },
        }),
        ni = em({
          '3pool': {
            name: '3pool',
            full_name: '3pool',
            symbol: '3pool',
            reference_asset: 'USD',
            swap_address: '0xbF7E49483881C76487b0989CD7d9A8239B20CA41',
            token_address: '0xbF7E49483881C76487b0989CD7d9A8239B20CA41',
            gauge_address: '0xC2b1DF84112619D190193E48148000e3990Bf627',
            is_plain: !0,
            underlying_coins: ['DAI', 'USDC.e', 'USDT'],
            wrapped_coins: ['DAI', 'USDC.e', 'USDT'],
            underlying_coin_addresses: [
              '0xe3520349F477A5F6EB06107066048508498A291b',
              '0xB12BFcA5A55806AaF64E99521918A4bf0fC40802',
              '0x4988a896b1227218e4A686fdE5EabdcAbd91571f',
            ],
            wrapped_coin_addresses: [
              '0xe3520349F477A5F6EB06107066048508498A291b',
              '0xB12BFcA5A55806AaF64E99521918A4bf0fC40802',
              '0x4988a896b1227218e4A686fdE5EabdcAbd91571f',
            ],
            underlying_decimals: [18, 6, 6],
            wrapped_decimals: [18, 6, 6],
            swap_abi: t9,
            gauge_abi: tQ,
          },
        }),
        ns = em({}),
        nu = em({}),
        np = em({}),
        no = em({}),
        ny = em({}),
        nd = em({}),
        nm = em({}),
        nr = em({}),
        nl = em({}),
        nc = em({}),
        nf = ec({
          crv: '0xD533a949740bb3306d119CC777fa900bA034cd52',
          '3crv': '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490',
          crvusd: '0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E',
          scrvusd: '0x0655977FEb2f289A4aB78af67BAB0d17aAb84367',
          usde: '0x4c9EDD5852cd905f086C759E8383e09bff1E68B3',
          susde: '0x9D39A5DE30e57443BfF2A8307A4256c8797A3497',
          usds: '0xdc035d45d973e3ec169d2276ddab16f1e407384f',
          susds: '0xa3931d71877c0e7a3148cb7eb4463524fec27fbd',
          ycdai: '0x99d1Fa417f94dcD62BfE781a1213c092a47041Bc',
          ycusdc: '0x9777d7E2b60bB01759D0E2f8be2095df444cb07E',
          ycusdt: '0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59',
          usdp: '0x8E870D67F660D95d5be530380D0eC0bd388289E1',
          adai: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',
          ausdc: '0xBcca60bB61934080951369a648Fb03DF4F96263C',
          ausdt: '0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811',
          asusd: '0x6c5024cd4f8a59110119c56f8933403a539555eb',
          cdai: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',
          cusdc: '0x39AA39c021dfbaE8faC545936693aC917d5E7563',
          cydai: '0x8e595470ed749b85c6f7669de83eae304c2ec68f',
          cyusdc: '0x76eb2fe28b36b3ee97f3adae0c69606eedb2a37c',
          cyusdt: '0x48759f220ed983db51fa7a8c0d2aab8f3ce4166a',
          bydai: '0xC2cB1040220768554cf699b0d863A3cd4324ce32',
          byusdc: '0x26EA744E5B887E5205727f55dFBE8685e3b21951',
          byusdt: '0xE6354ed5bC4b393a5Aad09f21c46E101e692d447',
          ybusd: '0x04bC0Ab673d88aE9dbC9DA2380cB6B79C4BCa9aE',
          ydai: '0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01',
          yusdc: '0xd6aD7a6750A7593E092a9B218d66C0A814a3436e',
          yusdt: '0x83f798e925BcD4017Eb265844FDDAbb448f1707D',
          ytusd: '0x73a052500105205d34Daf004eAb301916DA8190f',
          gusd: '0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd',
          husd: '0xdF574c24545E5FfEcb9a659c229253D4111d87e1',
          usdk: '0x1c48f86ae57291F7686349F12601910BD8D470bb',
          musd: '0xe2f2a5C287993345a840Db3B0845fbC70f5935a5',
          rsv: '0x196f4727526eA7FB1e17b2071B3d8eAA38486988',
          dusd: '0x5BC25f649fc4e26069dDF4cF4010F9f706c23831',
          ust: '0xa47c8bf37f92abed4a126bda807a7b7498661acd',
          usdn: '0x674C6Ad92Fd080e4004b2312b45f796a192D27a0',
          dai: '0x6B175474E89094C44Da98b954EedeAC495271d0F',
          usdc: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
          usdt: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
          susd: '0x57Ab1ec28D129707052df4dF418D58a2D46d5f51',
          tusd: '0x0000000000085d4780B73119b644AE5ecd22b376',
          frax: '0x853d955acef822db058eb8505911ed77f175b99e',
          lusd: '0x5f98805A4E8be255a32880FDeC7F6728C6568bA0',
          busd: '0x4Fabb145d64652a948d72533023f6E7A623C7C53',
          alusd: '0xbc6da0fe9ad5f3b0d58160288917aa56653660e9',
          mim: '0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3',
          rai: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',
          wormholeust: '0xa693B19d2931d498c5B318dF961919BB4aee87a5',
          eth: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
          weth: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
          ankreth: '0xE95A203B1a91a908F9B9CE46459d101078c2c3cb',
          seth: '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb',
          reth: '0x9559aaa82d9649c7a7b220e7c461d2e74c9a3593',
          steth: '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',
          wsteth: '0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0',
          frxeth: '0x5E8422345238F34275888049021821E8E08CAa1f',
          sfrxeth: '0xac3E018457B222d93114458476f3E3416Abbe38F',
          wbeth: '0xa2E3356610840701BDf5611a53974510Ae27E2e1',
          sbtccrv: '0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3',
          hbtc: '0x0316EB71485b0Ab14103307bf65a021042c6d380',
          renbtc: '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',
          wbtc: '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',
          tbtc: '0x18084fba666a33d37592fa2633fd49a74dd93a88',
          pbtc: '0x5228a22e72ccC52d415EcFd199F99D0665E7733b',
          bbtc: '0x9be89d2a4cd102d8fecc6bf9da793be995c22541',
          obtc: '0x8064d9Ae6cDf087b1bcd5BDf3531bD5d8C537a68',
          sbtc: '0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6',
          eurs: '0xdB25f211AB05b1c97D595516F45794528a807ad8',
          seur: '0xD71eCFF9342A5Ced620049e616c5035F1dB98620',
          eurt: '0xC581b735A1688071A1746c968e0798D642EDE491',
          euroc: '0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c',
          link: '0x514910771AF9Ca656af840dff83E8264EcF986CA',
          slink: '0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6',
          cvx: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b',
          cvxcrv: '0x62b9c7356a2dc64a1969e19c23e4f579f9810aa7',
          snx: '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f',
          spell: '0x090185f2135308bad17527004364ebcc2d37e5f6',
          t: '0xCdF7028ceAB81fA0C6971208e83fa7872994beE5',
          xaut: '0x68749665ff8d2d112fa859aa293f07a622782f38',
        }),
        n_ = [
          '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',
          '0x39AA39c021dfbaE8faC545936693aC917d5E7563',
          '0x8e595470ed749b85c6f7669de83eae304c2ec68f',
          '0x48759f220ed983db51fa7a8c0d2aab8f3ce4166a',
          '0x76eb2fe28b36b3ee97f3adae0c69606eedb2a37c',
        ].map((e) => e.toLowerCase()),
        nb = [
          '0xC2cB1040220768554cf699b0d863A3cd4324ce32',
          '0x26EA744E5B887E5205727f55dFBE8685e3b21951',
          '0xE6354ed5bC4b393a5Aad09f21c46E101e692d447',
          '0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01',
          '0xd6aD7a6750A7593E092a9B218d66C0A814a3436e',
          '0x83f798e925BcD4017Eb265844FDDAbb448f1707D',
          '0x04bC0Ab673d88aE9dbC9DA2380cB6B79C4BCa9aE',
          '0x73a052500105205d34Daf004eAb301916DA8190f',
        ].map((e) => e.toLowerCase()),
        ng = [
          '0x99d1Fa417f94dcD62BfE781a1213c092a47041Bc',
          '0x9777d7E2b60bB01759D0E2f8be2095df444cb07E',
          '0x1bE5d71F2dA660BFdee8012dDc58D024448A0A59',
        ].map((e) => e.toLowerCase()),
        nv = [
          '0x028171bCA77440897B824Ca71D1c56caC55b68A3',
          '0xBcca60bB61934080951369a648Fb03DF4F96263C',
          '0x3Ed3B47Dd13EC9a98b44e6204A523E766B225811',
          '0x6c5024cd4f8a59110119c56f8933403a539555eb',
        ].map((e) => e.toLowerCase()),
        nw = ec({
          crv: '0x172370d5cd63279efa6d502dab29171933a610af',
          dai: '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063',
          'usdc.e': '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',
          usdt: '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',
          amdai: '0x27F8D03b3a2196956ED754baDc28D73be8830A6e',
          amusdc: '0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',
          amusdt: '0x60D55F02A771d515e077c9C2403a1ef324885CeC',
          am3crv: '0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171',
          weth: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',
          amweth: '0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',
          wbtc: '0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6',
          renbtc: '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
          amwbtc: '0x5c2ed810328349100A66B82b78a1791B101C9D61',
          matic: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
          wmatic: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',
          eurt: '0x7BDF330f423Ea880FF95fC41A280fD5eCFD3D09f',
        }),
        nh = [
          '0x27F8D03b3a2196956ED754baDc28D73be8830A6e',
          '0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',
          '0x60D55F02A771d515e077c9C2403a1ef324885CeC',
          '0x5c2ed810328349100A66B82b78a1791B101C9D61',
          '0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',
        ].map((e) => e.toLowerCase()),
        nx = ec({
          crv: '0x1E4F97b9f9F913c46F1632781732927B9019C68b',
          dai: '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e',
          usdc: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',
          fusdt: '0x049d68029688eabf473097a2fc38ef61633a3c7a',
          idai: '0x04c762a5dF2Fa02FE868F25359E0C259fB811CfE',
          iusdc: '0x328A7b4d538A2b3942653a9983fdA3C12c571141',
          ifusdt: '0x70faC71debfD67394D1278D98A29dea79DC6E57A',
          gdai: '0x07e6332dd090d287d3489245038daf987955dcfb',
          gusdc: '0xe578c856933d8e1082740bf7661e379aa2a30b26',
          gfusdt: '0x940f41f0ec9ba1a34cf001cc03347ac092f5f6b5',
          'dai+usdc': '0x27e611fd27b276acbd5ffd632e5eaebec9761e40',
          frax: '0xdc301622e621166bd8e82f2ca0a26c13ad0be355',
          wbtc: '0x321162Cd933E2Be498Cd2267a90534A804051b11',
          renbtc: '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
          eth: '0x74b23882a30290451A17c44f4F05243b6b58C76d',
        }),
        nM = [
          '0x04c762a5dF2Fa02FE868F25359E0C259fB811CfE',
          '0x328A7b4d538A2b3942653a9983fdA3C12c571141',
          '0x70faC71debfD67394D1278D98A29dea79DC6E57A',
        ].map((e) => e.toLowerCase()),
        nA = [
          '0x07e6332dd090d287d3489245038daf987955dcfb',
          '0xe578c856933d8e1082740bf7661e379aa2a30b26',
          '0x940f41f0ec9ba1a34cf001cc03347ac092f5f6b5',
        ].map((e) => e.toLowerCase()),
        nE = ec({
          crv: '0x47536F17F4fF30e64A96a7555826b8f9e66ec468',
          'crv.e': '0x249848BeCA43aC405b8102Ec90Dd5F22CA513c06',
          'dai.e': '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',
          'usdc.e': '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',
          'usdt.e': '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',
          usdc: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',
          usdt: '0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7',
          avdai: '0x47AFa96Cdc9fAb46904A55a6ad4bf6660B53c38a',
          avusdc: '0x46A51127C3ce23fb7AB1DE06226147F446e4a857',
          avusdt: '0x532E6537FEA298397212F09A61e03311686f548e',
          av3crv: '0x1337bedc9d22ecbe766df105c9623922a27963ec',
          '2crv': '0x0974D9d3bc463Fa17497aAFc3a87535553298FbE',
          'wbtc.e': '0x50b7545627a5162F82A992c33b87aDc75187B218',
          renbtc: '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
          avwbtc: '0x686bEF2417b6Dc32C50a3cBfbCC3bb60E1e9a15D',
          'btc.b': '0x152b9d0FdC40C096757F570A51E494bd4b943E50',
          'weth.e': '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB',
          avweth: '0x53f7c5869a859F0AeC3D334ee8B4Cf01E3492f21',
          avax: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
          wavax: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',
        }),
        nC = [
          '0x47AFa96Cdc9fAb46904A55a6ad4bf6660B53c38a',
          '0x46A51127C3ce23fb7AB1DE06226147F446e4a857',
          '0x532E6537FEA298397212F09A61e03311686f548e',
          '0x686bEF2417b6Dc32C50a3cBfbCC3bb60E1e9a15D',
          '0x53f7c5869a859F0AeC3D334ee8B4Cf01E3492f21',
        ].map((e) => e.toLowerCase()),
        nk = ec({
          crv: '0x11cDb42B0EB46D95f990BeDD4695A6e3fA034978',
          'usdc.e': '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8',
          usdt: '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9',
          '2crv': '0x7f90122bf0700f9e7e1f688fe926940e8839f353',
          eurs: '0xd22a58f79e9481d1a88e00c343885a588b34b68b',
          wbtc: '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f',
          renbtc: '0xDBf31dF14B66535aF65AaC99C32e9eA844e14501',
          eth: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
          weth: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1',
          wsteth: '0x5979D7b546E38E414F7E9822514be443A4800529',
        }),
        nD = ec({
          crv: '0x0994206dfE8De6Ec6920FF4D779B0d950605Fb53',
          dai: '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1',
          'usdc.e': '0x7f5c764cbc14f9669b88837ca1490cca17c31607',
          usdt: '0x94b008aa00579c1307b0ef2c499ad98a8ce58e58',
          susd: '0x8c6f28f2f1a3c87f0f938b96d27520d9751ec8d9',
          mim: '0xb153fb3d196a8eb25522705560ac152eeec57901',
          '3crv': '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
          eth: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
          weth: '0x4200000000000000000000000000000000000006',
          seth: '0xe405de8f52ba7559f9df3c368500b6e6ae6cee49',
          wsteth: '0x1f32b1c2345538c0c6f582fcb022739c4a194ebb',
        }),
        nT = ec({
          crv: '0x712b3d230f3c1c19db860d80619288b1f0bdd0bd',
          wxdai: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',
          usdc: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',
          usdt: '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',
          rai: '0xd7a28aa9c470e7e9d8c676bcd5dd2f40c5683afa',
          x3crv: '0x1337BedC9D22ecbe766dF105c9623922A27963EC',
          wbtc: '0x8e5bBbb09Ed1ebdE8674Cda39A0c169401db4252',
          weth: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',
          eure: '0xcB444e90D8198415266c6a2724b7900fb12FC56E',
        }),
        nS = ec({
          crv: '0x712b3d230f3c1c19db860d80619288b1f0bdd0bd',
          dai: '0xc234A67a4F840E61adE794be47de455361b52413',
          usdc: '0x8f552a71EFE5eeFc207Bf75485b356A0b3f01eC9',
          usdt: '0x8e70cD5B4Ff3f62659049e74b6649c6603A0E594',
          '3crv': '0xace58a26b8db90498ef0330fdc9c2655db0c45e2',
        }),
        nO = ec({
          crv: '0x64D5BaF5ac030e2b7c435aDD967f787ae94D0205',
          dai: '0xe3520349F477A5F6EB06107066048508498A291b',
          'usdc.e': '0xB12BFcA5A55806AaF64E99521918A4bf0fC40802',
          usdt: '0x4988a896b1227218e4A686fdE5EabdcAbd91571f',
          '3crv': '0xbF7E49483881C76487b0989CD7d9A8239B20CA41',
        }),
        nF = ec({
          crv: '0x64D5BaF5ac030e2b7c435aDD967f787ae94D0205',
          dai: '0x765277EebeCA2e31912C9946eAe1021199B39C61',
          usdc: '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f',
          usdt: '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',
          '3crv': '0x7A0e3b70b1dB0D6CA63Cac240895b2D21444A7b9',
        }),
        nB = ec({
          crv: '0x0a7432cF27F1aE3825c313F3C81e7D3efD7639aB',
          dai: '0x90Ca507a5D4458a4C6C6249d186b6dCb02a5BCCd',
          usdc: '0xef4229c8c3250C675F21BCefa42f58EfbfF6002a',
          usdt: '0x88eeC49252c8cbc039DCdB394c0c2BA2f1637EA0',
          '3crv': '0x998395fEd908d33CF27115A1D9Ab6555def6cd45',
        }),
        nR = ec({
          crv: '0x0a7432cF27F1aE3825c313F3C81e7D3efD7639aB',
          weth: '0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91',
        }),
        nI = ec({
          crv: '0x8Ee73c484A26e0A5df2Ee2a4960B789967dd0415',
          eth: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
          weth: '0x4200000000000000000000000000000000000006',
        }),
        nL = ec({
          bnb: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
          wbnb: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',
        }),
        nN = ec({
          crv: '0x331B9182088e2A7d6D3Fe4742AbA1fB231aEcc56',
          frax: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
        }),
        nP = ec({
          crv: '0x3d5320821bfca19fb0b5428f2c79d63bd5246f89',
          okb: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
        }),
        nq = ec({
          crv: '0xcfd1d50ce23c46d3cf6407487b2f8934e96dc8f9',
          mnt: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
        }),
        nj = ec({
          crv: '0x5af79133999f7908953e94b7a5cf367740ebee35',
          s: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
        }),
        nU = ec({
          crv: '0x5af79133999f7908953e94b7a5cf367740ebee35',
          s: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
        }),
        n$ = ec({
          crv: '0xD533a949740bb3306d119CC777fa900bA034cd52',
          minter: '0xd061D61a4d941c39E5453435B6345Dc261C2fcE0',
          root_gauge_factory: '0x306A45a1478A000dC701A6e1f7a569afb8D9DCD6',
          voting_escrow: '0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          fee_distributor_crvusd: '0xD16d5eC345Dd86Fb63C6a9C43c517210F1027914',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x45312ea0eFf7E09C83CBE249fa1d7598c4C8cd4e',
          deposit_and_stake: '0x56C526b0159a258887e0d79ec3a80dfb940d0cD7',
          stable_calc: '0x0DCDED3545D565bA3B19E683431381007245d983',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0xb9fc157394af804a3578134a6585c0dc9cc990d4',
          crvusd_factory: '0x4F8846Ae9380B90d2E71D5e3D042dff3E7ebb40d',
          crypto_factory: '0xF18056Bbd320E96A48e3Fbf8bC061322531aac99',
          stable_ng_factory: '0x6A8cbed756804B16E05E741eDaBd5cB544AE21bf',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0x0c0e5f2fF0ff18a3be9b835635039256dC4B4963',
          factory_admin: '',
          voting_parameter: '0xBCfF8B0b9419b9A88c44546519b1e909cF330399',
          voting_ownership: '0xE478de485ad2fe566d49342Cbd03E49ed7DB3356',
          circulating_supply: '0x14139EB676342b6bC8E41E0d419969f23A49881e',
        }),
        nG = ec({
          crv: '0x172370d5cd63279efa6d502dab29171933a610af',
          child_gauge_factory: '0x55a1C26CE60490A15Bdd6bD73De4F6346525e01e',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0xb5acc710aede048600e10eedcefdf98d4abf4b1e',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0DCDED3545D565bA3B19E683431381007245d983',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x722272d36ef0da72ff51c5a65db7b870e2e8d4ee',
          crypto_factory: '0xE5De15A9C9bBedb4F5EC13B131E61245f2983A69',
          stable_ng_factory: '0x1764ee18e8B3ccA4787249Ceb249356192594585',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0xC1b393EfEF38140662b91441C6710Aa704973228',
          factory_admin: '',
        }),
        nW = ec({
          crv: '0x1E4F97b9f9F913c46F1632781732927B9019C68b',
          child_gauge_factory: '0x004A476B5B76738E34c86C7144554B9d34402F13',
          child_gauge_factory_old: '0xDb205f215f568ADf21b9573b62566f6d9a40bed6',
          voting_escrow: '0xb75dca485e21a77e1b433ecacb74475fc67e259c',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0DCDED3545D565bA3B19E683431381007245d983',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x686d67265703d1f124c45e33d47d794c566889ba',
          eywa_factory: '0x37F22A0B028f2152e6CAcef210e0C4d3b875f367',
          crypto_factory: '0xE5De15A9C9bBedb4F5EC13B131E61245f2983A69',
          stable_ng_factory: '0xe61Fb97Ef6eBFBa12B36Ffd7be785c1F5A2DE66b',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0x9AF14D26075f142eb3F292D5065EB3faa646167b',
          factory_admin: '',
        }),
        nY = ec({
          crv: '0x47536F17F4fF30e64A96a7555826b8f9e66ec468',
          child_gauge_factory: '0x97aDC08FA1D849D2C48C5dcC1DaB568B169b0267',
          child_gauge_factory_old: '0xDb205f215f568ADf21b9573b62566f6d9a40bed6',
          voting_escrow: '0xc55837710bc500f1e3c7bb9dd1d51f7c5647e657',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0DCDED3545D565bA3B19E683431381007245d983',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0xb17b674D9c5CB2e441F8e196a2f048A81355d031',
          stable_ng_factory: '0x1764ee18e8B3ccA4787249Ceb249356192594585',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0x3d6cB2F6DcF47CDd9C13E4e3beAe9af041d8796a',
          factory_admin: '',
        }),
        nZ = ec({
          crv: '0x11cDb42B0EB46D95f990BeDD4695A6e3fA034978',
          child_gauge_factory: '0x988d1037e9608B21050A8EFba0c6C45e01A3Bce7',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0x98c80fa823759b642c3e02f40533c164f40727ae',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x2191718CD32d02B8E60BAdFFeA33E4B5DD9A0A0D',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0xb17b674D9c5CB2e441F8e196a2f048A81355d031',
          stable_ng_factory: '0x9AF14D26075f142eb3F292D5065EB3faa646167b',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0xbC0797015fcFc47d9C1856639CaE50D0e69FbEE8',
          factory_admin: '',
        }),
        nV = ec({
          crv: '0x0994206dfE8De6Ec6920FF4D779B0d950605Fb53',
          child_gauge_factory: '0x871fBD4E01012e2E8457346059e8C189d664DbA4',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0x65a0b01756e837e6670634816e4f5b3a3ff21107',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0DCDED3545D565bA3B19E683431381007245d983',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x2db0E83599a91b508Ac268a6197b8B14F5e72840',
          stable_ng_factory: '0x5eeE3091f747E60a045a2E715a4c71e600e31F6E',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0xc6C09471Ee39C7E30a067952FcC89c8922f9Ab53',
          factory_admin: '',
          gas_oracle: '0xc0d3C0d3C0d3c0D3C0D3C0d3C0d3C0D3C0D3000f',
          gas_oracle_blob: '0x420000000000000000000000000000000000000f',
        }),
        nJ = ec({
          crv: '0x712b3d230f3c1c19db860d80619288b1f0bdd0bd',
          child_gauge_factory: '0x06471ED238306a427241B3eA81352244E77B004F',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0xefde221f306152971d8e9f181bfe998447975810',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0DCDED3545D565bA3B19E683431381007245d983',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0xD19Baeadc667Cf2015e395f2B08668Ef120f41F5',
          stable_ng_factory: '0xbC0797015fcFc47d9C1856639CaE50D0e69FbEE8',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0xb47988aD49DCE8D909c6f9Cf7B26caF04e1445c8',
          factory_admin: '',
        }),
        nH = ec({
          crv: '0x7C598c96D02398d89FbCb9d41Eab3DF0C16F227D',
          child_gauge_factory: '0xe35A879E5EfB4F1Bb7F70dCF3250f2e19f096bd8',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x4244eB811D6e0Ef302326675207A95113dB4E1F8',
          factory_admin: '',
        }),
        nK = ec({
          crv: '0x64D5BaF5ac030e2b7c435aDD967f787ae94D0205',
          child_gauge_factory: '0xe35A879E5EfB4F1Bb7F70dCF3250f2e19f096bd8',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0000000000000000000000000000000000000000',
          deposit_and_stake: '0x0000000000000000000000000000000000000000',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          crvusd_factory: '0x4F8846Ae9380B90d2E71D5e3D042dff3E7ebb40d',
          eywa_factory: '0x37F22A0B028f2152e6CAcef210e0C4d3b875f367',
          crypto_factory: '0xF18056Bbd320E96A48e3Fbf8bC061322531aac99',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0x0c0e5f2fF0ff18a3be9b835635039256dC4B4963',
          stable_ng_factory: '0x5eeE3091f747E60a045a2E715a4c71e600e31F6E',
          factory_admin: '',
        }),
        nz = ec({
          crv: '0x64D5BaF5ac030e2b7c435aDD967f787ae94D0205',
          child_gauge_factory: '0xe35A879E5EfB4F1Bb7F70dCF3250f2e19f096bd8',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x0DCDED3545D565bA3B19E683431381007245d983',
          deposit_and_stake: '0x37c5ab57AF7100Bdc9B668d766e193CCbF6614FD',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x40bc62805471eF53DdD5C5cF99ed3d9e5aa81b48',
          stable_ng_factory: '0x1764ee18e8B3ccA4787249Ceb249356192594585',
          twocrypto_factory: '0xd3B17f862956464ae4403cCF829CE69199856e1e',
          tricrypto_factory: '0x3d6cB2F6DcF47CDd9C13E4e3beAe9af041d8796a',
          factory_admin: '',
        }),
        nX = ec({
          crv: '0x0a7432cF27F1aE3825c313F3C81e7D3efD7639aB',
          child_gauge_factory: '0xe35A879E5EfB4F1Bb7F70dCF3250f2e19f096bd8',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          stable_calc: '0xCA8d0747B5573D69653C3aC22242e6341C36e4b4',
          crypto_calc: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          factory: '0x5277A0226d10392295E8D383E9724D6E416d6e6C',
          stable_ng_factory: '0x1764ee18e8B3ccA4787249Ceb249356192594585',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0x3d6cB2F6DcF47CDd9C13E4e3beAe9af041d8796a',
          factory_admin: '',
        }),
        nQ = ec({
          crv: '0x5945932099f124194452a4c62d34bB37f16183B2',
          child_gauge_factory: '0x167D9C27070Ce04b79820E6aaC0cF243d6098812',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0x0000000000000000000000000000000000000000',
          gauge_controller: '0x0000000000000000000000000000000000000000',
          address_provider: '0x0000000000000000000000000000000000000000',
          router: '0x7C915390e109CA66934f1eB285854375D1B127FA',
          deposit_and_stake: '0x253548e98C769aD2850da8DB3E4c2b2cE46E3839',
          stable_ng_factory: '0xFcAb5d04e8e031334D5e8D2C166B08daB0BE6CaE',
          twocrypto_factory: '0xf3a546AF64aFd6BB8292746BA66DB33aFAE72114',
          tricrypto_factory: '0x5d4174C40f1246dABe49693845442927d5929f0D',
          factory_admin: '0x0000000000000000000000000000000000000000',
        }),
        n2 = ec({
          crv: '0x8Ee73c484A26e0A5df2Ee2a4960B789967dd0415',
          child_gauge_factory: '0xe35A879E5EfB4F1Bb7F70dCF3250f2e19f096bd8',
          child_gauge_factory_old: '0xabC000d88f23Bb45525E447528DBF656A9D55bf5',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0xA464e6DCda8AC41e03616F95f4BC98a13b8922Dc',
          gauge_controller: '0x2F50D538606Fa9EDD2B11E2446BEb18C9D5846bB',
          address_provider: '0x0000000022d53366457f9d5e68ec105046fc4383',
          router: '0x4f37A9d177470499A2dD084621020b023fcffc1F',
          deposit_and_stake: '0x69522fb5337663d3B4dFB0030b881c1A750Adb4f',
          stable_calc: '0x5552b631e2aD801fAa129Aacf4B701071cC9D1f7',
          crypto_calc: '0xEfadDdE5B43917CcC738AdE6962295A0B343f7CE',
          factory: '0x3093f9B57A428F3EB6285a589cb35bEA6e78c336',
          crypto_factory: '0x5EF72230578b3e399E6C6F4F6360edF95e83BBfd',
          stable_ng_factory: '0xd2002373543Ce3527023C75e7518C274A51ce712',
          twocrypto_factory: '0xc9Fe0C63Af9A39402e8a5514f9c43Af0322b665F',
          tricrypto_factory: '0xA5961898870943c68037F6848d2D866Ed2016bcB',
          factory_admin: '0x0000000000000000000000000000000000000000',
          gas_oracle: '0xc0d3C0d3C0d3c0D3C0D3C0d3C0d3C0D3C0D3000f',
          gas_oracle_blob: '0x420000000000000000000000000000000000000f',
        }),
        n5 = ec({
          crv: '0x8Ee73c484A26e0A5df2Ee2a4960B789967dd0415',
          child_gauge_factory: '0xe35A879E5EfB4F1Bb7F70dCF3250f2e19f096bd8',
          child_gauge_factory_old: '0xDb205f215f568ADf21b9573b62566f6d9a40bed6',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0x0000000000000000000000000000000000000000',
          gauge_controller: '0x0000000000000000000000000000000000000000',
          address_provider: '0x0000000000000000000000000000000000000000',
          router: '0xA72C85C258A81761433B4e8da60505Fe3Dd551CC',
          deposit_and_stake: '0x4f37A9d177470499A2dD084621020b023fcffc1F',
          stable_calc: '0x0fE38dCC905eC14F6099a83Ac5C93BF2601300CF',
          crypto_calc: '0xd6681e74eEA20d196c15038C580f721EF2aB6320',
          factory: '0xEfDE221f306152971D8e9f181bFe998447975810',
          crypto_factory: '0xBd5fBd2FA58cB15228a9Abdac9ec994f79E3483C',
          stable_ng_factory: '0xd7E72f3615aa65b92A4DBdC211E296a35512988B',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0xc55837710bc500F1E3c7bb9dd1d51F7c5647E657',
          factory_admin: '0x0000000000000000000000000000000000000000',
        }),
        n0 = ec({
          crv: '0x331B9182088e2A7d6D3Fe4742AbA1fB231aEcc56',
          child_gauge_factory: '0x0B8D6B6CeFC7Aa1C2852442e518443B1b22e1C52',
          child_gauge_factory_old: '0xeF672bD94913CB6f1d2812a6e18c1fFdEd8eFf5c',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0x0000000000000000000000000000000000000000',
          gauge_controller: '0x0000000000000000000000000000000000000000',
          address_provider: '0x0000000000000000000000000000000000000000',
          router: '0x56C526b0159a258887e0d79ec3a80dfb940d0cD7',
          deposit_and_stake: '0xF0d4c12A5768D806021F80a262B4d39d26C58b8D',
          stable_ng_factory: '0xd2002373543Ce3527023C75e7518C274A51ce712',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0xc9Fe0C63Af9A39402e8a5514f9c43Af0322b665F',
          factory_admin: '0x0000000000000000000000000000000000000000',
        }),
        n6 = ec({
          crv: '0x0000000000000000000000000000000000000000',
          child_gauge_factory: '0xD5C3e070E121488806AaA5565283A164ACEB94Df',
          child_gauge_factory_old: '0xeF672bD94913CB6f1d2812a6e18c1fFdEd8eFf5c',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0x0000000000000000000000000000000000000000',
          gauge_controller: '0x0000000000000000000000000000000000000000',
          address_provider: '0x0000000000000000000000000000000000000000',
          router: '0xBFab8ebc836E1c4D81837798FC076D219C9a1855',
          deposit_and_stake: '0x5552b631e2aD801fAa129Aacf4B701071cC9D1f7',
          stable_ng_factory: '0x5eeE3091f747E60a045a2E715a4c71e600e31F6E',
          twocrypto_factory: '0x0c59d36b23f809f8b6C7cb4c8C590a0AC103baEf',
          tricrypto_factory: '0xd3B17f862956464ae4403cCF829CE69199856e1e',
          factory_admin: '0x0000000000000000000000000000000000000000',
        }),
        n1 = ec({
          crv: '0x0000000000000000000000000000000000000000',
          child_gauge_factory: '0x0B8D6B6CeFC7Aa1C2852442e518443B1b22e1C52',
          child_gauge_factory_old: '0xeF672bD94913CB6f1d2812a6e18c1fFdEd8eFf5c',
          voting_escrow: '0x0000000000000000000000000000000000000000',
          fee_distributor: '0x0000000000000000000000000000000000000000',
          gauge_controller: '0x0000000000000000000000000000000000000000',
          address_provider: '0x0000000000000000000000000000000000000000',
          router: '0x4f37A9d177470499A2dD084621020b023fcffc1F',
          deposit_and_stake: '0xF0d4c12A5768D806021F80a262B4d39d26C58b8D',
          stable_ng_factory: '0x5eeE3091f747E60a045a2E715a4c71e600e31F6E',
          twocrypto_factory: '0x98EE851a00abeE0d95D08cF4CA2BdCE32aeaAF7F',
          tricrypto_factory: '0x0C9D8c7e486e822C29488Ff51BFf0167B4650953',
          factory_admin: '0x0000000000000000000000000000000000000000',
        }),
        n8 = {
          1: {
            NAME: 'ethereum',
            ALIASES: n$,
            POOLS_DATA: t$,
            LLAMMAS_DATA: tG,
            COINS: nf,
            NATIVE_COIN: {
              symbol: 'ETH',
              wrappedSymbol: 'WETH',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
            },
            cTokens: n_,
            yTokens: nb,
            ycTokens: ng,
            aTokens: nv,
          },
          10: {
            NAME: 'optimism',
            ALIASES: nV,
            POOLS_DATA: t7,
            COINS: nD,
            NATIVE_COIN: {
              symbol: 'ETH',
              wrappedSymbol: 'WETH',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x4200000000000000000000000000000000000006',
            },
          },
          56: {
            NAME: 'bsc',
            ALIASES: n5,
            POOLS_DATA: ny,
            COINS: nL,
            NATIVE_COIN: {
              symbol: 'BNB',
              wrappedSymbol: 'WBNB',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',
            },
          },
          100: {
            NAME: 'xdai',
            ALIASES: nJ,
            POOLS_DATA: nn,
            COINS: nT,
            NATIVE_COIN: {
              symbol: 'XDAi',
              wrappedSymbol: 'WXDAI',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xe91d153e0b41518a2ce8dd3d7944fa863463a97d',
            },
          },
          137: {
            NAME: 'polygon',
            ALIASES: nG,
            POOLS_DATA: tJ,
            COINS: nw,
            NATIVE_COIN: {
              symbol: 'MATIC',
              wrappedSymbol: 'WMATIC',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',
            },
            aTokens: nh,
          },
          146: {
            NAME: 'sonic',
            ALIASES: ec({
              crv: '0x5af79133999f7908953e94b7a5cf367740ebee35',
              child_gauge_factory: '0xf3A431008396df8A8b2DF492C913706BDB0874ef',
              voting_escrow: '0x0000000000000000000000000000000000000000',
              fee_distributor: '0x0000000000000000000000000000000000000000',
              gauge_controller: '0x0000000000000000000000000000000000000000',
              address_provider: '0x87FE17697D0f14A222e8bEf386a0860eCffDD617',
              router: '0x5eeE3091f747E60a045a2E715a4c71e600e31F6E',
              deposit_and_stake: '0x505d666E4DD174DcDD7FA090ed95554486d2Be44',
              stable_ng_factory: '0x7C2085419BE6a04f4ad88ea91bC9F5C6E6C463D8',
              twocrypto_factory: '0x1A83348F9cCFD3Fe1A8C0adBa580Ac4e267Fe495',
              tricrypto_factory: '0x635742dCC8313DCf8c904206037d962c042EAfBd',
              factory_admin: '0x0000000000000000000000000000000000000000',
            }),
            POOLS_DATA: nl,
            COINS: nj,
            NATIVE_COIN: {
              symbol: 'S',
              wrappedSymbol: 'wS',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x039e2fb66102314ce7b64ce5ce3e5183bc94ad38',
            },
          },
          196: {
            NAME: 'x-layer',
            ALIASES: n6,
            POOLS_DATA: nm,
            COINS: nP,
            NATIVE_COIN: {
              symbol: 'OKB',
              wrappedSymbol: 'WOKB',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xe538905cf8410324e03a5a23c1c177a474d59b2b',
            },
          },
          250: {
            NAME: 'fantom',
            ALIASES: nW,
            POOLS_DATA: t5,
            COINS: nx,
            NATIVE_COIN: {
              symbol: 'FTM',
              wrappedSymbol: 'WFTM',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83',
            },
            cTokens: nM,
            aTokens: nA,
          },
          252: {
            NAME: 'fraxtal',
            ALIASES: n0,
            POOLS_DATA: nd,
            COINS: nN,
            NATIVE_COIN: {
              symbol: 'FRAX',
              wrappedSymbol: 'wFRAX',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xfc00000000000000000000000000000000000002',
            },
          },
          324: {
            NAME: 'zksync',
            ALIASES: nQ,
            POOLS_DATA: np,
            COINS: nR,
            NATIVE_COIN: {
              symbol: 'ETH',
              wrappedSymbol: 'WETH',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x5aea5775959fbc2557cc8789bc1bf90a239d9a91',
            },
          },
          999: {
            NAME: 'hyperliquid',
            ALIASES: ec({
              crv: '0x0000000000000000000000000000000000000000',
              child_gauge_factory: '0x8b3EFBEfa6eD222077455d6f0DCdA3bF4f3F57A6',
              voting_escrow: '0x0000000000000000000000000000000000000000',
              fee_distributor: '0x0000000000000000000000000000000000000000',
              gauge_controller: '0x0000000000000000000000000000000000000000',
              address_provider: '0x87FE17697D0f14A222e8bEf386a0860eCffDD617',
              router: '0xd2002373543Ce3527023C75e7518C274A51ce712',
              deposit_and_stake: '0x5a8C93EE12a8Df4455BA111647AdA41f29D5CfcC',
              stable_ng_factory: '0x604388Bb1159AFd21eB5191cE22b4DeCdEE2Ae22',
              twocrypto_factory: '0xc9Fe0C63Af9A39402e8a5514f9c43Af0322b665F',
              tricrypto_factory: '0x5702BDB1Ec244704E3cBBaAE11a0275aE5b07499',
              factory_admin: '0x0000000000000000000000000000000000000000',
            }),
            POOLS_DATA: nc,
            COINS: nU,
            NATIVE_COIN: {
              symbol: 'HYPE',
              wrappedSymbol: 'WHYPE',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x5555555555555555555555555555555555555555',
            },
          },
          1284: {
            NAME: 'moonbeam',
            ALIASES: nH,
            POOLS_DATA: na,
            COINS: nS,
            NATIVE_COIN: {
              symbol: 'GLMR',
              wrappedSymbol: 'WGLMR',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xacc15dc74880c9944775448304b263d191c6077f',
            },
          },
          2222: {
            NAME: 'kava',
            ALIASES: nz,
            POOLS_DATA: ns,
            COINS: nF,
            NATIVE_COIN: {
              symbol: 'KAVA',
              wrappedSymbol: 'WKAVA',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xc86c7c0efbd6a49b35e8714c5f59d99de09a225b',
            },
          },
          5e3: {
            NAME: 'mantle',
            ALIASES: n1,
            POOLS_DATA: nr,
            COINS: nq,
            NATIVE_COIN: {
              symbol: 'MNT',
              wrappedSymbol: 'WMNT',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x78c1b0c915c4faa5fffa6cabf0219da63d7f4cb8',
            },
          },
          8453: {
            NAME: 'base',
            ALIASES: n2,
            POOLS_DATA: no,
            COINS: nI,
            NATIVE_COIN: {
              symbol: 'ETH',
              wrappedSymbol: 'WETH',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x4200000000000000000000000000000000000006',
            },
          },
          42161: {
            NAME: 'arbitrum',
            ALIASES: nZ,
            POOLS_DATA: t4,
            COINS: nk,
            NATIVE_COIN: {
              symbol: 'ETH',
              wrappedSymbol: 'WETH',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1',
            },
          },
          42220: {
            NAME: 'celo',
            ALIASES: nX,
            POOLS_DATA: nu,
            COINS: nB,
            NATIVE_COIN: {
              symbol: 'CELO',
              wrappedSymbol: 'WCELO',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0x3ad443d769a07f287806874f8e5405ce3ac902b9',
            },
          },
          43114: {
            NAME: 'avalanche',
            ALIASES: nY,
            POOLS_DATA: t0,
            COINS: nE,
            NATIVE_COIN: {
              symbol: 'AVAX',
              wrappedSymbol: 'WAVAX',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7',
            },
            aTokens: nC,
          },
          0x4e454152: {
            NAME: 'aurora',
            ALIASES: nK,
            POOLS_DATA: ni,
            COINS: nO,
            NATIVE_COIN: {
              symbol: 'ETH',
              wrappedSymbol: 'WETH',
              address: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
              wrappedAddress: '0xc9bdeed33cd01541e1eed10f90519d2c06fe3feb',
            },
          },
        };
      var n3 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let n4 = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
        n9 = BigInt(
          '115792089237316195423570985008687907853269984665640564039457584007913129639935'
        ),
        n7 = (e) => e.replace(/(\.\d*[1-9])0+$/gi, '$1').replace(/\.0+$/gi, ''),
        ae = (e) => {
          if (Number(e) !== Number(e)) throw Error(`${e} is not a number`);
          return e;
        },
        at = (e, t = 18) => {
          if (Number(e) !== Number(e)) throw Error(`${e} is not a number`);
          let [n, a] = String(e).split('.');
          return a ? n + '.' + a.slice(0, t) : n;
        };
      function an(e, t = 18) {
        return M.XS(at(e, t), t);
      }
      let aa = (e) => new z.A(ae(e)),
        ai = (e, t = 18) => aa(ey(e, t)),
        as = (e, t = 18) => e.toFixed(t),
        au = (e, t = 18) => an(as(e, t), t),
        ap = (e) => e.toLowerCase() === n4.toLowerCase(),
        ao = (e) => e.map((e) => e.toLowerCase()).indexOf(n4.toLowerCase()),
        ay = (e) => (e * an('130', 0)) / an('100', 0),
        ad = (e) => (Array.isArray(e) ? [Number(e[0]), Number(e[1])] : Number(e)),
        am = (e) => (Array.isArray(e) ? e[0] : e),
        ar = (e) => (0 === e[1] ? e[0] : e),
        al = (e, t) => (
          Array.isArray(t) ? ((e[0] = e[0] + t[0]), (e[1] = e[1] + t[1])) : (e[0] = e[0] + t), e
        );
      function ac(...e) {
        return (
          1 == e.length && Array.isArray(e[0]) && (e = e[0]),
          e.map((e) => e.toLowerCase()).map((e) => this.constants.COINS[e] || e)
        );
      }
      function af(...e) {
        let t = ac.call(this, ...e),
          n = [...Object.keys(this.constants.DECIMALS), ...this.constants.GAUGES];
        for (let e of t)
          if (!n.includes(e)) throw Error(`Coin with address '${e}' is not available`);
        return t;
      }
      function a_(...e) {
        return (
          1 == e.length && Array.isArray(e[0]) && (e = e[0]),
          e.map((e) => {
            var t;
            return null !== (t = this.constants.DECIMALS[e.toLowerCase()]) && void 0 !== t ? t : 18;
          })
        );
      }
      function ab(e, t) {
        return n3(this, void 0, void 0, function* () {
          let n = af.call(this, e),
            a = a_.call(this, n),
            i = ao(n);
          -1 !== i && n.splice(i, 1);
          let s = [];
          for (let e of n)
            s.push(...t.map((t) => this.contracts[e].multicallContract.balanceOf(t)));
          let u = yield this.multicallProvider.all(s);
          if (-1 !== i) {
            let e = [];
            for (let n of t) e.push(yield this.provider.getBalance(n));
            u.splice(i * t.length, 0, ...e);
          }
          let p = {};
          t.forEach((n, a) => {
            p[n] = e.map((e, n) => u[a + n * t.length]);
          });
          let o = {};
          for (let e of t) o[e] = p[e].map((e, t) => this.formatUnits(e, a[t]));
          return o;
        });
      }
      function ag(e) {
        return (
          1 == e.length && Array.isArray(e[0]) && (e = e[0]),
          0 === e.length && '' !== this.signerAddress && (e = [this.signerAddress]),
          e.filter((e, t, n) => n.indexOf(e) === t)
        );
      }
      function av(e) {
        if (!(e = e || this.signerAddress))
          throw Error('Need to connect wallet or pass address into args');
        return e;
      }
      function aw(e, ...t) {
        return n3(this, void 0, void 0, function* () {
          t = ag.call(this, t);
          let n = yield ab.call(this, e, t);
          return 1 === t.length ? n[t[0]] : n;
        });
      }
      function ah(e, t, n) {
        return n3(this, void 0, void 0, function* () {
          let a;
          let i = [...e],
            s = ao(i);
          if ((-1 !== s && i.splice(s, 1), 1 === i.length))
            a = [yield this.contracts[i[0]].contract.allowance(t, n, this.constantOptions)];
          else {
            let e = i.map((e) => this.contracts[e].multicallContract.allowance(t, n));
            a = yield this.multicallProvider.all(e);
          }
          return -1 !== s && a.splice(s, 0, n9), a;
        });
      }
      function ax(e, t, n) {
        return n3(this, void 0, void 0, function* () {
          let a = af.call(this, e),
            i = a_.call(this, a);
          return (yield ah.call(this, a, t, n)).map((e, t) => this.formatUnits(e, i[t]));
        });
      }
      function aM(e, t, n, a) {
        return n3(this, void 0, void 0, function* () {
          let i = af.call(this, e),
            s = a_.call(this, i),
            u = yield ah.call(this, i, n, a),
            p = t.map((e, t) => an(e, s[t]));
          return u.map((e, t) => e >= p[t]).reduce((e, t) => e && t);
        });
      }
      function aA(e, t, n) {
        return n3(this, arguments, void 0, function* (e, t, n, a = !0) {
          let i = this.signerAddress,
            s = yield ah.call(this, e, i, n),
            u = [];
          for (let i = 0; i < s.length; i++)
            if (s[i] < t[i]) {
              let p = this.contracts[e[i]].contract,
                o = a ? n9 : t[i];
              if ((yield this.updateFeeData(), s[i] > an('0'))) {
                let e = ay(am(yield p.approve.estimateGas(n, an('0'), this.constantOptions))),
                  t = yield p.approve(
                    n,
                    an('0'),
                    Object.assign(Object.assign({}, this.options), { gasLimit: e })
                  );
                u.push(t.hash), yield t.wait();
              }
              let y = ay(am(yield p.approve.estimateGas(n, o, this.constantOptions))),
                d = yield p.approve(
                  n,
                  o,
                  Object.assign(Object.assign({}, this.options), { gasLimit: y })
                );
              u.push(d.hash), yield d.wait();
            }
          return u;
        });
      }
      function aE(e, t, n) {
        return n3(this, arguments, void 0, function* (e, t, n, a = !0) {
          let i = af.call(this, e),
            s = a_.call(this, i),
            u = t.map((e, t) => an(e, s[t])),
            p = this.signerAddress,
            o = yield ah.call(this, i, p, n),
            y = [0, 0];
          for (let e = 0; e < o.length; e++)
            if (o[e] < u[e]) {
              let t = this.contracts[i[e]].contract,
                s = a ? n9 : u[e];
              if (o[e] > an('0')) {
                let e = ad(yield t.approve.estimateGas(n, an('0'), this.constantOptions));
                'number' == typeof e ? (e *= 2) : (e = e.map((e) => 2 * e)), (y = al(y, e));
              } else y = al(y, ad(yield t.approve.estimateGas(n, s, this.constantOptions)));
            }
          return ar(y);
        });
      }
      function aC(e, t, n) {
        return n3(this, arguments, void 0, function* (e, t, n, a = !0) {
          let i = af.call(this, e),
            s = a_.call(this, i),
            u = t.map((e, t) => an(e, s[t]));
          return yield aA.call(this, i, u, n, a);
        });
      }
      function ak(e) {
        let t = Object.entries(this.getPoolsData()).filter(
          ([, t]) => t.swap_address.toLowerCase() === e.toLowerCase()
        );
        return 0 === t.length ? '' : t[0][0];
      }
      function aD() {
        return n3(this, void 0, void 0, function* () {
          var e, t;
          let n = this.constants.NETWORK_NAME,
            a = yield ea(n, this.isLiteChain),
            i = {};
          for (let n of a)
            for (let a of n.poolData)
              a.gaugeAddress &&
                (i[a.gaugeAddress.toLowerCase()] = (
                  null !==
                    (t = null !== (e = a.gaugeRewards) && void 0 !== e ? e : a.gaugeExtraRewards) &&
                  void 0 !== t
                    ? t
                    : []
                ).filter(
                  (e) =>
                    1 === this.chainId || e.tokenAddress.toLowerCase() !== this.constants.COINS.crv
                ));
          return i;
        });
      }
      let aT = {};
      function aS(e) {
        return n3(this, void 0, void 0, function* () {
          var t, n, a, i, s, u, p, o, y;
          if (
            1 === this.chainId &&
            '0x8762db106b2c2a0bccb3a80d1ed41273552616e8' === e.toLowerCase()
          )
            return 0;
          let d = yield ei(this.constants.NETWORK_NAME, this.isLiteChain);
          if (e.toLowerCase() in d) return d[e.toLowerCase()];
          if (
            'USD' === e ||
            (137 === this.chainId && e.toLowerCase() === this.constants.COINS.am3crv.toLowerCase())
          )
            return 1;
          let m = this.isLiteChain
              ? yield this.constants.NETWORK_NAME
              : {
                  1: 'ethereum',
                  10: 'optimistic-ethereum',
                  56: 'binance-smart-chain',
                  100: 'xdai',
                  137: 'polygon-pos',
                  146: 'sonic',
                  196: 'x-layer',
                  250: 'fantom',
                  252: 'fraxtal',
                  324: 'zksync',
                  999: 'hyperliquid',
                  1284: 'moonbeam',
                  2222: 'kava',
                  5e3: 'mantle',
                  8453: 'base',
                  42220: 'celo',
                  43114: 'avalanche',
                  42161: 'arbitrum-one',
                  0x4e454152: 'aurora',
                }[this.chainId],
            r = this.isLiteChain
              ? null ===
                  (n = null === (t = this.constants) || void 0 === t ? void 0 : t.API_CONSTANTS) ||
                void 0 === n
                ? void 0
                : n.nativeTokenName
              : {
                  1: 'ethereum',
                  10: 'ethereum',
                  56: 'binancecoin',
                  100: 'xdai',
                  137: 'matic-network',
                  146: 'sonic-3',
                  196: 'okb',
                  250: 'fantom',
                  252: 'frax-share',
                  324: 'ethereum',
                  1284: 'moonbeam',
                  999: 'hyperliquid',
                  2222: 'kava',
                  5e3: 'mantle',
                  8453: 'ethereum',
                  42220: 'celo',
                  43114: 'avalanche-2',
                  42161: 'ethereum',
                  0x4e454152: 'ethereum',
                }[this.chainId];
          if (void 0 === m) throw Error('curve object is not initialized');
          if (void 0 === r) {
            if (
              this.isLiteChain &&
              (null === (a = this.constants.API_CONSTANTS) || void 0 === a
                ? void 0
                : a.wrappedNativeTokenAddress.toLowerCase()) &&
              (null === (i = this.constants.API_CONSTANTS) || void 0 === i
                ? void 0
                : i.wrappedNativeTokenAddress.toLowerCase()) in d
            )
              return d[
                null === (s = this.constants.API_CONSTANTS) || void 0 === s
                  ? void 0
                  : s.wrappedNativeTokenAddress.toLowerCase()
              ];
            throw Error('nativeTokenName not found');
          }
          if (
            ((e = ap(
              (e =
                {
                  CRV: 'curve-dao-token',
                  EUR: 'stasis-eurs',
                  BTC: 'bitcoin',
                  ETH: 'ethereum',
                  LINK: 'link',
                }[e.toUpperCase()] || e)
            )
              ? r
              : e.toLowerCase()),
            137 === this.chainId &&
              e.toLowerCase() === this.constants.COINS.eurt &&
              ((m = 'ethereum'), (e = '0xc581b735a1688071a1746c968e0798d642ede491')),
            e.toLowerCase() === this.constants.ALIASES.crv && (e = 'curve-dao-token'),
            this.isLiteChain &&
              e.toLowerCase() ===
                (null === (u = this.constants.API_CONSTANTS) || void 0 === u
                  ? void 0
                  : u.wrappedNativeTokenAddress.toLowerCase()) &&
              (e = r),
            ((null === (p = aT[e]) || void 0 === p ? void 0 : p.time) || 0) + 6e5 < Date.now())
          ) {
            let t = [r, 'ethereum', 'bitcoin', 'link', 'curve-dao-token', 'stasis-eurs'].includes(
              e.toLowerCase()
            )
              ? `https://api.coingecko.com/api/v3/simple/price?ids=${e}&vs_currencies=usd`
              : `https://api.coingecko.com/api/v3/simple/token_price/${m}?contract_addresses=${e}&vs_currencies=usd`;
            try {
              let n = yield fetch(t),
                a = null !== (o = yield n.json()) && void 0 !== o ? o : {};
              200 === n.status && (null === (y = a[e]) || void 0 === y ? void 0 : y.usd) !== void 0
                ? (aT[e] = { rate: a[e].usd, time: Date.now() })
                : (this.isLiteChain || console.warn(`Non-200 response for ${e}:`, n.status, a),
                  (aT[e] = { rate: 0, time: Date.now() }));
            } catch (t) {
              this.isLiteChain || console.error(`Error fetching USD rate for ${e}:`, t.message),
                (aT[e] = { rate: 0, time: Date.now() });
            }
          }
          return aT[e].rate;
        });
      }
      function aO(e) {
        return n3(this, void 0, void 0, function* () {
          let [t] = ac.call(this, e);
          return yield aS.call(this, t);
        });
      }
      function aF() {
        return n3(this, void 0, void 0, function* () {
          let e = this.provider;
          try {
            let t = yield e.getBlock('latest');
            if (!t) return 0.01;
            return Number(t.baseFeePerGas) / 1e9;
          } catch (e) {
            throw Error(e);
          }
        });
      }
      function aB() {
        return n3(this, void 0, void 0, function* () {
          let e = this.provider;
          return Number((Number((yield e.getFeeData()).gasPrice) / 1e9).toFixed(2));
        });
      }
      function aR() {
        return n3(this, void 0, void 0, function* () {
          if (ep.includes(this.chainId) && this.L1WeightedGasPrice)
            return this.L1WeightedGasPrice + 1e9;
          throw Error('This method exists only for L2 networks');
        });
      }
      function aI() {
        return n3(this, void 0, void 0, function* () {
          if (42161 === this.chainId) return yield aF.call(this);
          if (196 === this.chainId || 324 === this.chainId || 5e3 === this.chainId)
            return yield aB.call(this);
          if (ep.includes(this.chainId))
            return Number(
              yield this.contracts[this.constants.ALIASES.gas_oracle_blob].contract.gasPrice({
                gasPrice: '0x2000000',
              })
            );
          throw Error('This method exists only for L2 networks');
        });
      }
      function aL() {
        return n3(this, void 0, void 0, function* () {
          if (42161 === this.chainId)
            return {
              maxFeePerGas: Number((1.1 * (yield aF.call(this)) + 0.01).toFixed(2)),
              maxPriorityFeePerGas: 0.01,
            };
          if (196 === this.chainId) return { gasPrice: yield aB.call(this) };
          if (324 === this.chainId) return { gasPrice: yield aB.call(this) };
          if (5e3 === this.chainId)
            return {
              maxFeePerGas: Number((1.1 * (yield aF.call(this)) + 0.01).toFixed(2)),
              maxPriorityFeePerGas: 0.01,
            };
          throw Error('This method exists only for L2 networks');
        });
      }
      let aN = (e, t, n, a = 0) =>
        Array.isArray(n) ? e * ((n[0] * t) / 1e18 + (n[1] * a) / 1e18) : (e * n * t) / 1e18;
      function aP() {
        return n3(this, void 0, void 0, function* () {
          return yield w();
        });
      }
      let aq = (e, t) => {
        let n = t.find((t) => t.chainId === e);
        return n ? n.id : 'Unknown Network';
      };
      function aj(e) {
        return n3(this, void 0, void 0, function* () {
          if (e in n8) return Object.assign(Object.assign({}, n8[e]), { IS_LITE_CHAIN: !1 });
          {
            let t = aq(e, yield w());
            if ('Unknown Network' === t) throw Error(`Wrong chain id: ${e}`);
            return Object.assign(Object.assign({}, yield v(t)), { NAME: t, IS_LITE_CHAIN: !0 });
          }
        });
      }
      function aU() {
        return n3(this, arguments, void 0, function* (e = this.chainId) {
          let t = yield aj.call(this, e);
          return (yield ea(t.NAME, this.isLiteChain)).reduce((e, t) => {
            var n, a;
            return (
              e +
              (null !== (a = null !== (n = t.tvl) && void 0 !== n ? n : t.tvlAll) && void 0 !== a
                ? a
                : 0)
            );
          }, 0);
        });
      }
      function a$(e) {
        return n3(this, void 0, void 0, function* () {
          if (this.isLiteChain && 146 !== this.chainId)
            throw Error('This method is not supported for the lite version');
          if (eo.getVolumes.includes(this.chainId)) return yield m(e);
          if (eo.getFactoryAPYs.includes(this.chainId)) return yield r(e);
          if (eo.getSubgraphData.includes(this.chainId)) return yield d(e);
          throw Error(`Can't get volume for network: ${e}`);
        });
      }
      function aG() {
        return n3(this, arguments, void 0, function* (e = this.chainId) {
          if (this.isLiteChain && 146 !== this.chainId)
            throw Error('This method is not supported for the lite version');
          let t = yield aj.call(this, e),
            { totalVolume: n, cryptoVolume: a, cryptoShare: i } = yield a$.call(this, t.NAME);
          return { totalVolume: n, cryptoVolume: a, cryptoShare: i };
        });
      }
      function aW(e, t) {
        let n = {
          abi: t,
          contract: new A.NZ(e, t, this.signer || this.provider),
          multicallContract: new E(e, t),
        };
        return (this.contracts[e] = n), n;
      }
      let aY = (e, t, n, a) => {
          let i = aa(Math.pow(10, n > 5 ? n - 3 : n)),
            s = aa(Math.pow(10, a > 5 ? a - 3 : a)),
            u = ai(e, 0),
            p = ai(t, 0),
            o = z.A.max(i.div(u), s.div(p));
          return z.A.min(u.times(o), aa(Math.pow(10, n)));
        },
        aZ = (e, t, n, a, i, s) => {
          let u = ai(e, i),
            p = ai(t, s),
            o = ai(n, i),
            y = ai(a, s),
            d = p.div(u),
            m = y.div(o);
          return d.gt(m) ? aa(0) : aa(1).minus(d.div(m)).times(100);
        };
      function aV(...e) {
        return n3(this, void 0, void 0, function* () {
          1 == e.length && Array.isArray(e[0]) && (e = e[0]);
          let t = ac.call(this, e);
          console.log(t);
          let n = ao(t);
          -1 !== n && t.splice(n, 1);
          let a = [];
          for (let e of t) {
            let t = new E(e, eu);
            a.push(t.name(), t.symbol(), t.decimals());
          }
          let i = yield this.multicallProvider.all(a);
          -1 !== n && i.splice(2 * n, 0, 'Ethereum', 'ETH', 18);
          let s = [];
          return (
            e.forEach(() => {
              s.push({
                name: i.shift(),
                symbol: i.shift(),
                decimals: Number(this.formatUnits(i.shift(), 0)),
              });
            }),
            s
          );
        });
      }
      function aJ() {
        return 'deposit_and_stake' in this.constants.ALIASES;
      }
      function aH() {
        return 'router' in this.constants.ALIASES;
      }
      let aK = (e, t) => e.filter((e) => 'function' == e.type && e.name === t),
        az = (e, t) => {
          var n, a;
          return null !==
            (a = null === (n = aK(e, t)[0]) || void 0 === n ? void 0 : n.inputs.length) &&
            void 0 !== a
            ? a
            : -1;
        },
        aX = (e, t, n) => aK(e, t).find((e) => e.inputs.map((e) => `${e.type}`).join(',') == n),
        aQ = (e) => {
          let t = e.split(': ');
          return t.length > 1 ? t[1].trim() : t[0].trim();
        },
        a2 = (e) => e.includes('factory-stable-ng'),
        a5 = (e) => ('UNKNOWN' === e.toUpperCase() ? 'OTHER' : e.toUpperCase());
      function a0() {
        return n3(this, void 0, void 0, function* () {
          let e = this.contracts[this.constants.ALIASES.stable_ng_factory].contract,
            t = this.contracts[this.constants.ALIASES.stable_ng_factory].multicallContract,
            n = Number(this.formatUnits(yield e.base_pool_count(), 0)),
            a = [];
          for (let e = 0; e < n; e++) a.push(t.base_pool_list(e));
          let i = (yield this.multicallProvider.all(a)).map((e) => e.toLowerCase()),
            s = Object.assign(
              Object.assign(
                Object.assign({}, this.constants.STABLE_NG_FACTORY_POOLS_DATA),
                this.constants.FACTORY_POOLS_DATA
              ),
              this.constants.POOLS_DATA
            );
          return Object.keys(s)
            .filter((e) => i.includes(s[e].swap_address))
            .map((e) => {
              let t = dw.call(this, e);
              return {
                id: e,
                name: t.name,
                pool: t.address,
                token: t.lpToken,
                coins: t.underlyingCoinAddresses,
              };
            });
        });
      }
      function a6(e, t, n, a = 3e4) {
        if ('undefined' == typeof Worker) return Promise.resolve(t()(n));
        let i = new Blob([e], { type: 'application/javascript' }),
          s = new Worker(URL.createObjectURL(i), { type: 'module' });
        return new Promise((t, i) => {
          let u = setTimeout(() => i(Error('Timeout')), a);
          (s.onerror = (t) => {
            clearTimeout(u), console.error(e, n, t), i(t);
          }),
            (s.onmessage = (e) => {
              let { type: a, result: i } = e.data;
              a === n.type && (clearTimeout(u), t(i));
            }),
            s.postMessage(n);
        }).finally(() => {
          s.terminate();
        });
      }
      let a1 = { DAY: 86400, WEEK: 604800, MONTH: 2592e3, YEAR: 31536e3 };
      var a8 = n(69421),
        a3 = n(45356),
        a4 = n(93326),
        a9 = n(80876),
        a7 = n(44673),
        ie = n(26820),
        it = n(12644),
        ia = n(33550),
        ii = n(87109),
        is = n(73177),
        iu = n(57899),
        ip = n(98752),
        io = n(1625),
        iy = n(60270);
      class id extends is.Z {
        address;
        #m;
        constructor(e, t) {
          super(t),
            (0, a9.MR)(
              e && 'function' == typeof e.sign,
              'invalid private key',
              'privateKey',
              '[ REDACTED ]'
            ),
            (this.#m = e);
          let n = (0, ip.K)(this.signingKey.publicKey);
          (0, iy.n)(this, { address: n });
        }
        get signingKey() {
          return this.#m;
        }
        get privateKey() {
          return this.signingKey.privateKey;
        }
        async getAddress() {
          return this.address;
        }
        connect(e) {
          return new id(this.#m, e);
        }
        async signTransaction(e) {
          e = (0, iu.VS)(e);
          let { to: t, from: n } = await (0, iy.k)({
            to: e.to ? (0, a7.tG)(e.to, this) : void 0,
            from: e.from ? (0, a7.tG)(e.from, this) : void 0,
          });
          null != t && (e.to = t),
            null != n && (e.from = n),
            null != e.from &&
              ((0, a9.MR)(
                (0, ie.b)(e.from) === this.address,
                'transaction from address mismatch',
                'tx.from',
                e.from
              ),
              delete e.from);
          let a = io.Z.from(e);
          return (a.signature = this.signingKey.sign(a.unsignedHash)), a.serialized;
        }
        async signMessage(e) {
          return this.signMessageSync(e);
        }
        signMessageSync(e) {
          var t;
          return this.signingKey.sign(
            ('string' == typeof (t = e) && (t = (0, N.YW)(t)),
            (0, L.S)(
              (0, C.xW)([
                (0, N.YW)('\x19Ethereum Signed Message:\n'),
                (0, N.YW)(String(t.length)),
                t,
              ])
            ))
          ).serialized;
        }
        authorizeSync(e) {
          var t;
          (0, a9.MR)(
            'string' == typeof e.address,
            'invalid address for authorizeSync',
            'auth.address',
            e
          );
          let n = this.signingKey.sign(
            ((t = e),
            (0, a9.MR)(
              'string' == typeof t.address,
              'invalid address for hashAuthorization',
              'auth.address',
              t
            ),
            (0, L.S)(
              (0, C.xW)([
                '0x05',
                (0, it.R)([
                  null != t.chainId ? (0, ia.c4)(t.chainId) : '0x',
                  (0, ie.b)(t.address),
                  null != t.nonce ? (0, ia.c4)(t.nonce) : '0x',
                ]),
              ])
            ))
          );
          return Object.assign(
            {},
            {
              address: (0, ie.b)(e.address),
              nonce: (0, ia.Ab)(e.nonce || 0),
              chainId: (0, ia.Ab)(e.chainId || 0),
            },
            { signature: n }
          );
        }
        async authorize(e) {
          return (
            (e = Object.assign({}, e, { address: await (0, a7.tG)(e.address, this) })),
            this.authorizeSync(await this.populateAuthorization(e))
          );
        }
        async signTypedData(e, t, n) {
          let a = await ii.z.resolveNames(e, t, n, async (e) => {
            (0, a9.vA)(
              null != this.provider,
              'cannot resolve ENS names without a provider',
              'UNSUPPORTED_OPERATION',
              { operation: 'resolveName', info: { name: e } }
            );
            let t = await this.provider.resolveName(e);
            return (
              (0, a9.vA)(null != t, 'unconfigured ENS name', 'UNCONFIGURED_NAME', { value: e }), t
            );
          });
          return this.signingKey.sign(ii.z.hash(a.domain, t, a.value)).serialized;
        }
      }
      var im = n(19085),
        ir = n(73876);
      let il = !1,
        ic = function (e, t, n) {
          return (0, ir.Gz)(e, t).update(n).digest();
        },
        i_ = ic;
      function ib(e, t, n) {
        let a = (0, C.q5)(t, 'key'),
          i = (0, C.q5)(n, 'data');
        return (0, C.c$)(i_(e, a, i));
      }
      (ib._ = ic),
        (ib.lock = function () {
          il = !0;
        }),
        (ib.register = function (e) {
          if (il) throw Error('computeHmac is locked');
          i_ = e;
        }),
        Object.freeze(ib);
      var ig = n(58616),
        iv = n(63320);
      let iw = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]),
        ih = Uint8Array.from({ length: 16 }, (e, t) => t),
        ix = ih.map((e) => (9 * e + 5) % 16),
        iM = [ih],
        iA = [ix];
      for (let e = 0; e < 4; e++) for (let t of [iM, iA]) t.push(t[e].map((e) => iw[e]));
      let iE = [
          [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
          [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
          [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
          [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
          [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
        ].map((e) => new Uint8Array(e)),
        iC = iM.map((e, t) => e.map((e) => iE[t][e])),
        ik = iA.map((e, t) => e.map((e) => iE[t][e])),
        iD = new Uint32Array([0, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]),
        iT = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0]),
        iS = (e, t) => (e << t) | (e >>> (32 - t));
      function iO(e, t, n, a) {
        return 0 === e
          ? t ^ n ^ a
          : 1 === e
            ? (t & n) | (~t & a)
            : 2 === e
              ? (t | ~n) ^ a
              : 3 === e
                ? (t & a) | (n & ~a)
                : t ^ (n | ~a);
      }
      let iF = new Uint32Array(16);
      class iB extends ig.D {
        constructor() {
          super(64, 20, 8, !0),
            (this.h0 = 0x67452301),
            (this.h1 = -0x10325477),
            (this.h2 = -0x67452302),
            (this.h3 = 0x10325476),
            (this.h4 = -0x3c2d1e10);
        }
        get() {
          let { h0: e, h1: t, h2: n, h3: a, h4: i } = this;
          return [e, t, n, a, i];
        }
        set(e, t, n, a, i) {
          (this.h0 = 0 | e),
            (this.h1 = 0 | t),
            (this.h2 = 0 | n),
            (this.h3 = 0 | a),
            (this.h4 = 0 | i);
        }
        process(e, t) {
          for (let n = 0; n < 16; n++, t += 4) iF[n] = e.getUint32(t, !0);
          let n = 0 | this.h0,
            a = n,
            i = 0 | this.h1,
            s = i,
            u = 0 | this.h2,
            p = u,
            o = 0 | this.h3,
            y = o,
            d = 0 | this.h4,
            m = d;
          for (let e = 0; e < 5; e++) {
            let t = 4 - e,
              r = iD[e],
              l = iT[e],
              c = iM[e],
              f = iA[e],
              _ = iC[e],
              b = ik[e];
            for (let t = 0; t < 16; t++) {
              let a = (iS(n + iO(e, i, u, o) + iF[c[t]] + r, _[t]) + d) | 0;
              (n = d), (d = o), (o = 0 | iS(u, 10)), (u = i), (i = a);
            }
            for (let e = 0; e < 16; e++) {
              let n = (iS(a + iO(t, s, p, y) + iF[f[e]] + l, b[e]) + m) | 0;
              (a = m), (m = y), (y = 0 | iS(p, 10)), (p = s), (s = n);
            }
          }
          this.set(
            (this.h1 + u + y) | 0,
            (this.h2 + o + m) | 0,
            (this.h3 + d + a) | 0,
            (this.h4 + n + s) | 0,
            (this.h0 + i + p) | 0
          );
        }
        roundClean() {
          iF.fill(0);
        }
        destroy() {
          (this.destroyed = !0), this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
        }
      }
      let iR = (0, iv.ld)(() => new iB()),
        iI = !1,
        iL = function (e) {
          return iR(e);
        },
        iN = iL;
      function iP(e) {
        let t = (0, C.q5)(e, 'data');
        return (0, C.c$)(iN(t));
      }
      (iP._ = iL),
        (iP.lock = function () {
          iI = !0;
        }),
        (iP.register = function (e) {
          if (iI) throw TypeError('ripemd160 is locked');
          iN = e;
        }),
        Object.freeze(iP);
      let iq = !1,
        ij = function (e) {
          return new Uint8Array((0, ir.po)(e));
        },
        iU = ij;
      function i$(e) {
        return iU(e);
      }
      (i$._ = ij),
        (i$.lock = function () {
          iq = !0;
        }),
        (i$.register = function (e) {
          if (iq) throw Error('randomBytes is locked');
          iU = e;
        }),
        Object.freeze(i$);
      var iG = n(58363),
        iW = n(94675);
      let iY = " !#$%&'()*+,-./<=>?@[]^_`{|}~",
        iZ = /^[a-z]*$/i;
      function iV(e, t) {
        let n = 97;
        return e.reduce(
          (e, a) => (
            a === t
              ? n++
              : a.match(iZ)
                ? e.push(String.fromCharCode(n) + a)
                : ((n = 97), e.push(a)),
            e
          ),
          []
        );
      }
      class iJ {
        locale;
        constructor(e) {
          (0, iy.n)(this, { locale: e });
        }
        split(e) {
          return e.toLowerCase().split(/\s+/g);
        }
        join(e) {
          return e.join(' ');
        }
      }
      class iH extends iJ {
        #r;
        #l;
        constructor(e, t, n) {
          super(e), (this.#r = t), (this.#l = n), (this.#c = null);
        }
        get _data() {
          return this.#r;
        }
        _decodeWords() {
          var e;
          return (
            (e = this.#r),
            (0, a9.MR)('0' === e[0], 'unsupported auwl data', 'data', e),
            (function (e, t) {
              for (let n = iY.length - 1; n >= 0; n--)
                e = e.split(iY[n]).join(t.substring(2 * n, 2 * n + 2));
              let n = [],
                a = e.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (e, t, a, i) => {
                  if (a) for (let e = parseInt(a); e >= 0; e--) n.push(';');
                  else n.push(t.toLowerCase());
                  return '';
                });
              if (a) throw Error(`leftovers: ${JSON.stringify(a)}`);
              return iV(iV(n, ';'), ':');
            })(e.substring(1 + 2 * iY.length), e.substring(1, 1 + 2 * iY.length))
          );
        }
        #c;
        #f() {
          if (null == this.#c) {
            let e = this._decodeWords();
            if ((0, iW.id)(e.join('\n') + '\n') !== this.#l)
              throw Error(`BIP39 Wordlist for ${this.locale} FAILED`);
            this.#c = e;
          }
          return this.#c;
        }
        getWord(e) {
          let t = this.#f();
          return (0, a9.MR)(e >= 0 && e < t.length, `invalid word index: ${e}`, 'index', e), t[e];
        }
        getWordIndex(e) {
          return this.#f().indexOf(e);
        }
      }
      let iK = null;
      class iz extends iH {
        constructor() {
          super(
            'en',
            "0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO",
            '0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60'
          );
        }
        static wordlist() {
          return null == iK && (iK = new iz()), iK;
        }
      }
      let iX = !1,
        iQ = function (e, t, n, a, i) {
          return (0, ir.T_)(e, t, n, a, i);
        },
        i2 = iQ;
      function i5(e, t, n, a, i) {
        let s = (0, C.q5)(e, 'password'),
          u = (0, C.q5)(t, 'salt');
        return (0, C.c$)(i2(s, u, n, a, i));
      }
      function i0(e) {
        return (((1 << e) - 1) << (8 - e)) & 255;
      }
      function i6(e, t) {
        (0, a9.SP)('NFKD'), null == t && (t = iz.wordlist());
        let n = t.split(e);
        (0, a9.MR)(
          n.length % 3 == 0 && n.length >= 12 && n.length <= 24,
          'invalid mnemonic length',
          'mnemonic',
          '[ REDACTED ]'
        );
        let a = new Uint8Array(Math.ceil((11 * n.length) / 8)),
          i = 0;
        for (let e = 0; e < n.length; e++) {
          let s = t.getWordIndex(n[e].normalize('NFKD'));
          (0, a9.MR)(s >= 0, `invalid mnemonic word at index ${e}`, 'mnemonic', '[ REDACTED ]');
          for (let e = 0; e < 11; e++)
            s & (1 << (10 - e)) && (a[i >> 3] |= 1 << (7 - (i % 8))), i++;
        }
        let s = (32 * n.length) / 3,
          u = i0(n.length / 3),
          p = (0, C.q5)((0, im.s)(a.slice(0, s / 8)))[0] & u;
        return (
          (0, a9.MR)(
            p === (a[a.length - 1] & u),
            'invalid mnemonic checksum',
            'mnemonic',
            '[ REDACTED ]'
          ),
          (0, C.c$)(a.slice(0, s / 8))
        );
      }
      function i1(e, t) {
        (0, a9.MR)(
          e.length % 4 == 0 && e.length >= 16 && e.length <= 32,
          'invalid entropy size',
          'entropy',
          '[ REDACTED ]'
        ),
          null == t && (t = iz.wordlist());
        let n = [0],
          a = 11;
        for (let t = 0; t < e.length; t++)
          a > 8
            ? ((n[n.length - 1] <<= 8), (n[n.length - 1] |= e[t]), (a -= 8))
            : ((n[n.length - 1] <<= a),
              (n[n.length - 1] |= e[t] >> (8 - a)),
              n.push(e[t] & (((1 << (8 - a)) - 1) & 255)),
              (a += 3));
        let i = e.length / 4,
          s = parseInt((0, im.s)(e).substring(2, 4), 16) & i0(i);
        return (
          (n[n.length - 1] <<= i),
          (n[n.length - 1] |= s >> (8 - i)),
          t.join(n.map((e) => t.getWord(e)))
        );
      }
      (i5._ = iQ),
        (i5.lock = function () {
          iX = !0;
        }),
        (i5.register = function (e) {
          if (iX) throw Error('pbkdf2 is locked');
          i2 = e;
        }),
        Object.freeze(i5);
      let i8 = {};
      class i3 {
        phrase;
        password;
        wordlist;
        entropy;
        constructor(e, t, n, a, i) {
          null == a && (a = ''),
            null == i && (i = iz.wordlist()),
            (0, a9.gk)(e, i8, 'Mnemonic'),
            (0, iy.n)(this, { phrase: n, password: a, wordlist: i, entropy: t });
        }
        computeSeed() {
          let e = (0, N.YW)('mnemonic' + this.password, 'NFKD');
          return i5((0, N.YW)(this.phrase, 'NFKD'), e, 2048, 64, 'sha512');
        }
        static fromPhrase(e, t, n) {
          let a = i6(e, n);
          return (e = i1((0, C.q5)(a), n)), new i3(i8, a, e, t, n);
        }
        static fromEntropy(e, t, n) {
          let a = (0, C.q5)(e, 'entropy'),
            i = i1(a, n);
          return new i3(i8, (0, C.c$)(a), i, t, n);
        }
        static entropyToPhrase(e, t) {
          return i1((0, C.q5)(e, 'entropy'), t);
        }
        static phraseToEntropy(e, t) {
          return i6(e, t);
        }
        static isValidMnemonic(e, t) {
          try {
            return i6(e, t), !0;
          } catch (e) {}
          return !1;
        }
      }
      var i4 = n(2059),
        i9 = n(54062),
        i7 = n(61552),
        se = n(48658);
      let st = (e, t) => (e << t) | (e >>> (32 - t));
      function sn(e, t, n, a, i, s) {
        let u = e[t++] ^ n[a++],
          p = e[t++] ^ n[a++],
          o = e[t++] ^ n[a++],
          y = e[t++] ^ n[a++],
          d = e[t++] ^ n[a++],
          m = e[t++] ^ n[a++],
          r = e[t++] ^ n[a++],
          l = e[t++] ^ n[a++],
          c = e[t++] ^ n[a++],
          f = e[t++] ^ n[a++],
          _ = e[t++] ^ n[a++],
          b = e[t++] ^ n[a++],
          g = e[t++] ^ n[a++],
          v = e[t++] ^ n[a++],
          w = e[t++] ^ n[a++],
          h = e[t++] ^ n[a++],
          x = u,
          M = p,
          A = o,
          E = y,
          C = d,
          k = m,
          D = r,
          T = l,
          S = c,
          O = f,
          F = _,
          B = b,
          R = g,
          I = v,
          L = w,
          N = h;
        for (let e = 0; e < 8; e += 2)
          (C ^= st((x + R) | 0, 7)),
            (S ^= st((C + x) | 0, 9)),
            (R ^= st((S + C) | 0, 13)),
            (x ^= st((R + S) | 0, 18)),
            (O ^= st((k + M) | 0, 7)),
            (I ^= st((O + k) | 0, 9)),
            (M ^= st((I + O) | 0, 13)),
            (k ^= st((M + I) | 0, 18)),
            (L ^= st((F + D) | 0, 7)),
            (A ^= st((L + F) | 0, 9)),
            (D ^= st((A + L) | 0, 13)),
            (F ^= st((D + A) | 0, 18)),
            (E ^= st((N + B) | 0, 7)),
            (T ^= st((E + N) | 0, 9)),
            (B ^= st((T + E) | 0, 13)),
            (N ^= st((B + T) | 0, 18)),
            (M ^= st((x + E) | 0, 7)),
            (A ^= st((M + x) | 0, 9)),
            (E ^= st((A + M) | 0, 13)),
            (x ^= st((E + A) | 0, 18)),
            (D ^= st((k + C) | 0, 7)),
            (T ^= st((D + k) | 0, 9)),
            (C ^= st((T + D) | 0, 13)),
            (k ^= st((C + T) | 0, 18)),
            (B ^= st((F + O) | 0, 7)),
            (S ^= st((B + F) | 0, 9)),
            (O ^= st((S + B) | 0, 13)),
            (F ^= st((O + S) | 0, 18)),
            (R ^= st((N + L) | 0, 7)),
            (I ^= st((R + N) | 0, 9)),
            (L ^= st((I + R) | 0, 13)),
            (N ^= st((L + I) | 0, 18));
        (i[s++] = (u + x) | 0),
          (i[s++] = (p + M) | 0),
          (i[s++] = (o + A) | 0),
          (i[s++] = (y + E) | 0),
          (i[s++] = (d + C) | 0),
          (i[s++] = (m + k) | 0),
          (i[s++] = (r + D) | 0),
          (i[s++] = (l + T) | 0),
          (i[s++] = (c + S) | 0),
          (i[s++] = (f + O) | 0),
          (i[s++] = (_ + F) | 0),
          (i[s++] = (b + B) | 0),
          (i[s++] = (g + R) | 0),
          (i[s++] = (v + I) | 0),
          (i[s++] = (w + L) | 0),
          (i[s++] = (h + N) | 0);
      }
      function sa(e, t, n, a, i) {
        let s = a + 0,
          u = a + 16 * i;
        for (let a = 0; a < 16; a++) n[u + a] = e[t + (2 * i - 1) * 16 + a];
        for (let a = 0; a < i; a++, s += 16, t += 16)
          sn(n, u, e, t, n, s), a > 0 && (u += 16), sn(n, s, e, (t += 16), n, u);
      }
      function si(e, t, n) {
        let {
          N: a,
          r: i,
          p: s,
          dkLen: u,
          asyncTick: p,
          maxmem: o,
          onProgress: y,
        } = (0, iv.tY)({ dkLen: 32, asyncTick: 10, maxmem: 0x40000400 }, n);
        if (
          ((0, i9.ai)(a),
          (0, i9.ai)(i),
          (0, i9.ai)(s),
          (0, i9.ai)(u),
          (0, i9.ai)(p),
          (0, i9.ai)(o),
          void 0 !== y && 'function' != typeof y)
        )
          throw Error('progressCb should be function');
        let d = 128 * i,
          m = d / 4;
        if (a <= 1 || (a & (a - 1)) != 0 || a >= 2 ** (d / 8) || a > 0x100000000)
          throw Error(
            'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'
          );
        if (s < 0 || s > ((0x100000000 - 1) * 32) / d)
          throw Error(
            'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'
          );
        if (u < 0 || u > (0x100000000 - 1) * 32)
          throw Error(
            'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'
          );
        let r = d * (a + s);
        if (r > o)
          throw Error(`Scrypt: parameters too large, ${r} (128 * r * (N + p)) > ${o} (maxmem)`);
        let l = (0, se.A)(i7.s, e, t, { c: 1, dkLen: d * s }),
          c = (0, iv.DH)(l),
          f = (0, iv.DH)(new Uint8Array(d * a)),
          _ = (0, iv.DH)(new Uint8Array(d)),
          b = () => {};
        if (y) {
          let e = 2 * a * s,
            t = Math.max(Math.floor(e / 1e4), 1),
            n = 0;
          b = () => {
            n++, y && (!(n % t) || n === e) && y(n / e);
          };
        }
        return {
          N: a,
          r: i,
          p: s,
          dkLen: u,
          blockSize32: m,
          V: f,
          B32: c,
          B: l,
          tmp: _,
          blockMixCb: b,
          asyncTick: p,
        };
      }
      function ss(e, t, n, a, i) {
        let s = (0, se.A)(i7.s, e, n, { c: 1, dkLen: t });
        return n.fill(0), a.fill(0), i.fill(0), s;
      }
      async function su(e, t, n) {
        let {
          N: a,
          r: i,
          p: s,
          dkLen: u,
          blockSize32: p,
          V: o,
          B32: y,
          B: d,
          tmp: m,
          blockMixCb: r,
          asyncTick: l,
        } = si(e, t, n);
        for (let e = 0; e < s; e++) {
          let t = p * e;
          for (let e = 0; e < p; e++) o[e] = y[t + e];
          let n = 0;
          await (0, iv.$h)(a - 1, l, () => {
            sa(o, n, o, (n += p), i), r();
          }),
            sa(o, (a - 1) * p, y, t, i),
            r(),
            await (0, iv.$h)(a, l, () => {
              let e = y[t + p - 16] % a;
              for (let n = 0; n < p; n++) m[n] = y[t + n] ^ o[e * p + n];
              sa(m, 0, y, t, i), r();
            });
        }
        return ss(e, u, d, o, m);
      }
      let sp = !1,
        so = !1,
        sy = async function (e, t, n, a, i, s, u) {
          return await su(e, t, { N: n, r: a, p: i, dkLen: s, onProgress: u });
        },
        sd = function (e, t, n, a, i, s) {
          return (function (e, t, n) {
            let {
              N: a,
              r: i,
              p: s,
              dkLen: u,
              blockSize32: p,
              V: o,
              B32: y,
              B: d,
              tmp: m,
              blockMixCb: r,
            } = si(e, t, n);
            for (let e = 0; e < s; e++) {
              let t = p * e;
              for (let e = 0; e < p; e++) o[e] = y[t + e];
              for (let e = 0, t = 0; e < a - 1; e++) sa(o, t, o, (t += p), i), r();
              sa(o, (a - 1) * p, y, t, i), r();
              for (let e = 0; e < a; e++) {
                let e = y[t + p - 16] % a;
                for (let n = 0; n < p; n++) m[n] = y[t + n] ^ o[e * p + n];
                sa(m, 0, y, t, i), r();
              }
            }
            return ss(e, u, d, o, m);
          })(e, t, { N: n, r: a, p: i, dkLen: s });
        },
        sm = sy,
        sr = sd;
      async function sl(e, t, n, a, i, s, u) {
        let p = (0, C.q5)(e, 'passwd'),
          o = (0, C.q5)(t, 'salt');
        return (0, C.c$)(await sm(p, o, n, a, i, s, u));
      }
      function sc(e, t, n, a, i, s) {
        let u = (0, C.q5)(e, 'passwd'),
          p = (0, C.q5)(t, 'salt');
        return (0, C.c$)(sr(u, p, n, a, i, s));
      }
      function sf(e) {
        return 'string' != typeof e || e.startsWith('0x') || (e = '0x' + e), (0, C.Lm)(e);
      }
      function s_(e, t) {
        for (e = String(e); e.length < t; ) e = '0' + e;
        return e;
      }
      function sb(e) {
        return 'string' == typeof e ? (0, N.YW)(e, 'NFKC') : (0, C.Lm)(e);
      }
      function sg(e, t) {
        let n = t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);
        (0, a9.MR)(null != n, 'invalid path', 'path', t);
        let a = n[1],
          i = n[3],
          s = '!' === n[4],
          u = e;
        for (let e of a.toLowerCase().split('.')) {
          if (Array.isArray(u)) {
            if (!e.match(/^[0-9]+$/)) break;
            u = u[parseInt(e)];
          } else if ('object' == typeof u) {
            let t = null;
            for (let n in u)
              if (n.toLowerCase() === e) {
                t = u[n];
                break;
              }
            u = t;
          } else u = null;
          if (null == u) break;
        }
        if (((0, a9.MR)(!s || null != u, 'missing required value', 'path', a), i && null != u)) {
          if ('int' === i) {
            if ('string' == typeof u && u.match(/^-?[0-9]+$/)) return parseInt(u);
            if (Number.isSafeInteger(u)) return u;
          }
          if ('number' === i && 'string' == typeof u && u.match(/^-?[0-9.]*$/))
            return parseFloat(u);
          if ('data' === i && 'string' == typeof u) return sf(u);
          if (('array' === i && Array.isArray(u)) || i === typeof u) return u;
          (0, a9.MR)(!1, `wrong type found for ${i} `, 'path', a);
        }
        return u;
      }
      (sl._ = sy),
        (sl.lock = function () {
          so = !0;
        }),
        (sl.register = function (e) {
          if (so) throw Error('scrypt is locked');
          sm = e;
        }),
        Object.freeze(sl),
        (sc._ = sd),
        (sc.lock = function () {
          sp = !0;
        }),
        (sc.register = function (e) {
          if (sp) throw Error('scryptSync is locked');
          sr = e;
        }),
        Object.freeze(sc);
      var sv = n(80006);
      let sw = "m/44'/60'/0'/0/0";
      function sh(e) {
        try {
          let t = JSON.parse(e),
            n = null != t.version ? parseInt(t.version) : 0;
          if (3 === n) return !0;
        } catch (e) {}
        return !1;
      }
      function sx(e, t) {
        let n = (0, C.q5)(t),
          a = sg(e, 'crypto.ciphertext:data!'),
          i = (0, C.c$)((0, L.S)((0, C.xW)([n.slice(16, 32), a]))).substring(2);
        (0, a9.MR)(
          i === sg(e, 'crypto.mac:string!').toLowerCase(),
          'incorrect password',
          'password',
          '[ REDACTED ]'
        );
        let s = (function (e, t, n) {
            if ('aes-128-ctr' === sg(e, 'crypto.cipher:string')) {
              let a = sg(e, 'crypto.cipherparams.iv:data!'),
                i = new i4.cf(t, a);
              return (0, C.c$)(i.decrypt(n));
            }
            (0, a9.vA)(!1, 'unsupported cipher', 'UNSUPPORTED_OPERATION', { operation: 'decrypt' });
          })(e, n.slice(0, 16), a),
          u = (0, ip.K)(s);
        if (e.address) {
          let t = e.address.toLowerCase();
          t.startsWith('0x') || (t = '0x' + t),
            (0, a9.MR)(
              (0, ie.b)(t) === u,
              'keystore address/privateKey mismatch',
              'address',
              e.address
            );
        }
        let p = { address: u, privateKey: s };
        if ('0.1' === sg(e, 'x-ethers.version:string')) {
          let t = n.slice(32, 64),
            a = sg(e, 'x-ethers.mnemonicCiphertext:data!'),
            i = sg(e, 'x-ethers.mnemonicCounter:data!'),
            s = new i4.cf(t, i);
          p.mnemonic = {
            path: sg(e, 'x-ethers.path:string') || sw,
            locale: sg(e, 'x-ethers.locale:string') || 'en',
            entropy: (0, C.c$)((0, C.q5)(s.decrypt(a))),
          };
        }
        return p;
      }
      function sM(e) {
        let t = sg(e, 'crypto.kdf:string');
        if (t && 'string' == typeof t) {
          if ('scrypt' === t.toLowerCase()) {
            let n = sg(e, 'crypto.kdfparams.salt:data!'),
              a = sg(e, 'crypto.kdfparams.n:int!'),
              i = sg(e, 'crypto.kdfparams.r:int!'),
              s = sg(e, 'crypto.kdfparams.p:int!');
            (0, a9.MR)(a > 0 && (a & (a - 1)) == 0, 'invalid kdf.N', 'kdf.N', a),
              (0, a9.MR)(i > 0 && s > 0, 'invalid kdf', 'kdf', t);
            let u = sg(e, 'crypto.kdfparams.dklen:int!');
            return (
              (0, a9.MR)(32 === u, 'invalid kdf.dklen', 'kdf.dflen', u),
              { name: 'scrypt', salt: n, N: a, r: i, p: s, dkLen: 64 }
            );
          }
          if ('pbkdf2' === t.toLowerCase()) {
            let t = sg(e, 'crypto.kdfparams.salt:data!'),
              n = sg(e, 'crypto.kdfparams.prf:string!'),
              a = n.split('-').pop();
            (0, a9.MR)('sha256' === a || 'sha512' === a, 'invalid kdf.pdf', 'kdf.pdf', n);
            let i = sg(e, 'crypto.kdfparams.c:int!'),
              s = sg(e, 'crypto.kdfparams.dklen:int!');
            return (
              (0, a9.MR)(32 === s, 'invalid kdf.dklen', 'kdf.dklen', s),
              { name: 'pbkdf2', salt: t, count: i, dkLen: s, algorithm: a }
            );
          }
        }
        (0, a9.MR)(!1, 'unsupported key-derivation function', 'kdf', t);
      }
      function sA(e) {
        return new Promise((t) => {
          setTimeout(() => {
            t();
          }, e);
        });
      }
      async function sE(e, t, n) {
        let a = JSON.parse(e),
          i = sb(t),
          s = sM(a);
        if ('pbkdf2' === s.name) {
          n && (n(0), await sA(0));
          let { salt: e, count: t, dkLen: u, algorithm: p } = s,
            o = i5(i, e, t, u, p);
          return n && (n(1), await sA(0)), sx(a, o);
        }
        (0, a9.vA)('scrypt' === s.name, 'cannot be reached', 'UNKNOWN_ERROR', { params: s });
        let { salt: u, N: p, r: o, p: y, dkLen: d } = s;
        return sx(a, await sl(i, u, p, o, y, d, n));
      }
      function sC(e) {
        let t = null != e.salt ? (0, C.q5)(e.salt, 'options.salt') : i$(32),
          n = 131072,
          a = 8,
          i = 1;
        return (
          e.scrypt &&
            (e.scrypt.N && (n = e.scrypt.N),
            e.scrypt.r && (a = e.scrypt.r),
            e.scrypt.p && (i = e.scrypt.p)),
          (0, a9.MR)(
            'number' == typeof n &&
              n > 0 &&
              Number.isSafeInteger(n) &&
              (BigInt(n) & BigInt(n - 1)) === BigInt(0),
            'invalid scrypt N parameter',
            'options.N',
            n
          ),
          (0, a9.MR)(
            'number' == typeof a && a > 0 && Number.isSafeInteger(a),
            'invalid scrypt r parameter',
            'options.r',
            a
          ),
          (0, a9.MR)(
            'number' == typeof i && i > 0 && Number.isSafeInteger(i),
            'invalid scrypt p parameter',
            'options.p',
            i
          ),
          { name: 'scrypt', dkLen: 32, salt: t, N: n, r: a, p: i }
        );
      }
      function sk(e, t, n, a) {
        let i = (0, C.q5)(n.privateKey, 'privateKey'),
          s = null != a.iv ? (0, C.q5)(a.iv, 'options.iv') : i$(16);
        (0, a9.MR)(16 === s.length, 'invalid options.iv length', 'options.iv', a.iv);
        let u = null != a.uuid ? (0, C.q5)(a.uuid, 'options.uuid') : i$(16);
        (0, a9.MR)(16 === u.length, 'invalid options.uuid length', 'options.uuid', a.iv);
        let p = e.slice(0, 16),
          o = e.slice(16, 32),
          y = new i4.cf(p, s),
          d = (0, C.q5)(y.encrypt(i)),
          m = (0, L.S)((0, C.xW)([o, d])),
          r = {
            address: n.address.substring(2).toLowerCase(),
            id: (function (e) {
              let t = (0, C.q5)(e, 'randomBytes');
              (t[6] = (15 & t[6]) | 64), (t[8] = (63 & t[8]) | 128);
              let n = (0, C.c$)(t);
              return [
                n.substring(2, 10),
                n.substring(10, 14),
                n.substring(14, 18),
                n.substring(18, 22),
                n.substring(22, 34),
              ].join('-');
            })(u),
            version: 3,
            Crypto: {
              cipher: 'aes-128-ctr',
              cipherparams: { iv: (0, C.c$)(s).substring(2) },
              ciphertext: (0, C.c$)(d).substring(2),
              kdf: 'scrypt',
              kdfparams: {
                salt: (0, C.c$)(t.salt).substring(2),
                n: t.N,
                dklen: 32,
                p: t.p,
                r: t.r,
              },
              mac: m.substring(2),
            },
          };
        if (n.mnemonic) {
          let t = null != a.client ? a.client : `ethers/${sv.r}`,
            i = n.mnemonic.path || sw,
            s = n.mnemonic.locale || 'en',
            u = e.slice(32, 64),
            p = (0, C.q5)(n.mnemonic.entropy, 'account.mnemonic.entropy'),
            o = i$(16),
            y = new i4.cf(u, o),
            d = (0, C.q5)(y.encrypt(p)),
            m = new Date(),
            l =
              'UTC--' +
              (m.getUTCFullYear() +
                '-' +
                s_(m.getUTCMonth() + 1, 2) +
                '-' +
                s_(m.getUTCDate(), 2) +
                'T' +
                s_(m.getUTCHours(), 2) +
                '-' +
                s_(m.getUTCMinutes(), 2) +
                '-' +
                s_(m.getUTCSeconds(), 2)) +
              '.0Z--' +
              r.address;
          r['x-ethers'] = {
            client: t,
            gethFilename: l,
            path: i,
            locale: s,
            mnemonicCounter: (0, C.c$)(o).substring(2),
            mnemonicCiphertext: (0, C.c$)(d).substring(2),
            version: '0.1',
          };
        }
        return JSON.stringify(r);
      }
      function sD(e, t, n) {
        null == n && (n = {});
        let a = sb(t),
          i = sC(n),
          s = sc(a, i.salt, i.N, i.r, i.p, 64);
        return sk((0, C.q5)(s), i, e, n);
      }
      async function sT(e, t, n) {
        null == n && (n = {});
        let a = sb(t),
          i = sC(n),
          s = await sl(a, i.salt, i.N, i.r, i.p, 64, n.progressCallback);
        return sk((0, C.q5)(s), i, e, n);
      }
      let sS = "m/44'/60'/0'/0/0",
        sO = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]),
        sF = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');
      function sB(e, t) {
        let n = '';
        for (; e; ) (n = '0123456789abcdef'[e % 16] + n), (e = Math.trunc(e / 16));
        for (; n.length < 2 * t; ) n = '0' + n;
        return '0x' + n;
      }
      function sR(e) {
        let t = (0, C.q5)(e),
          n = (0, C.ZG)((0, im.s)((0, im.s)(t)), 0, 4),
          a = (0, C.xW)([t, n]);
        return (0, iG.R)(a);
      }
      let sI = {};
      function sL(e, t, n, a) {
        let i = new Uint8Array(37);
        0x80000000 & e
          ? ((0, a9.vA)(
              null != a,
              'cannot derive child of neutered node',
              'UNSUPPORTED_OPERATION',
              { operation: 'deriveChild' }
            ),
            i.set((0, C.q5)(a), 1))
          : i.set((0, C.q5)(n));
        for (let t = 24; t >= 0; t -= 8) i[33 + (t >> 3)] = (e >> (24 - t)) & 255;
        let s = (0, C.q5)(ib('sha512', t, i));
        return { IL: s.slice(0, 32), IR: s.slice(32) };
      }
      function sN(e, t) {
        let n = t.split('/');
        (0, a9.MR)(n.length > 0, 'invalid path', 'path', t),
          'm' === n[0] &&
            ((0, a9.MR)(
              0 === e.depth,
              `cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${e.depth}`,
              'path',
              t
            ),
            n.shift());
        let a = e;
        for (let e = 0; e < n.length; e++) {
          let t = n[e];
          if (t.match(/^[0-9]+'$/)) {
            let n = parseInt(t.substring(0, t.length - 1));
            (0, a9.MR)(n < 0x80000000, 'invalid path index', `path[${e}]`, t),
              (a = a.deriveChild(0x80000000 + n));
          } else if (t.match(/^[0-9]+$/)) {
            let n = parseInt(t);
            (0, a9.MR)(n < 0x80000000, 'invalid path index', `path[${e}]`, t),
              (a = a.deriveChild(n));
          } else (0, a9.MR)(!1, 'invalid path component', `path[${e}]`, t);
        }
        return a;
      }
      class sP extends id {
        publicKey;
        fingerprint;
        parentFingerprint;
        mnemonic;
        chainCode;
        path;
        index;
        depth;
        constructor(e, t, n, a, i, s, u, p, o) {
          super(t, o),
            (0, a9.gk)(e, sI, 'HDNodeWallet'),
            (0, iy.n)(this, { publicKey: t.compressedPublicKey });
          let y = (0, C.ZG)(iP((0, im.s)(this.publicKey)), 0, 4);
          (0, iy.n)(this, {
            parentFingerprint: n,
            fingerprint: y,
            chainCode: a,
            path: i,
            index: s,
            depth: u,
          }),
            (0, iy.n)(this, { mnemonic: p });
        }
        connect(e) {
          return new sP(
            sI,
            this.signingKey,
            this.parentFingerprint,
            this.chainCode,
            this.path,
            this.index,
            this.depth,
            this.mnemonic,
            e
          );
        }
        #_() {
          let e = { address: this.address, privateKey: this.privateKey },
            t = this.mnemonic;
          return (
            this.path &&
              t &&
              'en' === t.wordlist.locale &&
              '' === t.password &&
              (e.mnemonic = { path: this.path, locale: 'en', entropy: t.entropy }),
            e
          );
        }
        async encrypt(e, t) {
          return await sT(this.#_(), e, { progressCallback: t });
        }
        encryptSync(e) {
          return sD(this.#_(), e);
        }
        get extendedKey() {
          return (
            (0, a9.vA)(this.depth < 256, 'Depth too deep', 'UNSUPPORTED_OPERATION', {
              operation: 'extendedKey',
            }),
            sR(
              (0, C.xW)([
                '0x0488ADE4',
                sB(this.depth, 1),
                this.parentFingerprint,
                sB(this.index, 4),
                this.chainCode,
                (0, C.xW)(['0x00', this.privateKey]),
              ])
            )
          );
        }
        hasPath() {
          return null != this.path;
        }
        neuter() {
          return new sq(
            sI,
            this.address,
            this.publicKey,
            this.parentFingerprint,
            this.chainCode,
            this.path,
            this.index,
            this.depth,
            this.provider
          );
        }
        deriveChild(e) {
          let t = (0, ia.WZ)(e, 'index');
          (0, a9.MR)(t <= 0xffffffff, 'invalid index', 'index', t);
          let n = this.path;
          n && ((n += '/' + (0x7fffffff & t)), 0x80000000 & t && (n += "'"));
          let { IR: a, IL: i } = sL(t, this.chainCode, this.publicKey, this.privateKey);
          return new sP(
            sI,
            new a4.h((0, ia.up)(((0, ia.Dg)(i) + BigInt(this.privateKey)) % sF, 32)),
            this.fingerprint,
            (0, C.c$)(a),
            n,
            t,
            this.depth + 1,
            this.mnemonic,
            this.provider
          );
        }
        derivePath(e) {
          return sN(this, e);
        }
        static #b(e, t) {
          (0, a9.MR)((0, C.f)(e), 'invalid seed', 'seed', '[REDACTED]');
          let n = (0, C.q5)(e, 'seed');
          (0, a9.MR)(n.length >= 16 && n.length <= 64, 'invalid seed', 'seed', '[REDACTED]');
          let a = (0, C.q5)(ib('sha512', sO, n));
          return new sP(
            sI,
            new a4.h((0, C.c$)(a.slice(0, 32))),
            '0x00000000',
            (0, C.c$)(a.slice(32)),
            'm',
            0,
            0,
            t,
            null
          );
        }
        static fromExtendedKey(e) {
          let t = (0, ia.c4)((0, iG.H)(e));
          (0, a9.MR)(
            82 === t.length || sR(t.slice(0, 78)) === e,
            'invalid extended key',
            'extendedKey',
            '[ REDACTED ]'
          );
          let n = t[4],
            a = (0, C.c$)(t.slice(5, 9)),
            i = parseInt((0, C.c$)(t.slice(9, 13)).substring(2), 16),
            s = (0, C.c$)(t.slice(13, 45)),
            u = t.slice(45, 78);
          switch ((0, C.c$)(t.slice(0, 4))) {
            case '0x0488b21e':
            case '0x043587cf': {
              let e = (0, C.c$)(u);
              return new sq(sI, (0, ip.K)(e), e, a, s, null, i, n, null);
            }
            case '0x0488ade4':
            case '0x04358394 ':
              if (0 !== u[0]) break;
              return new sP(sI, new a4.h(u.slice(1)), a, s, null, i, n, null, null);
          }
          (0, a9.MR)(!1, 'invalid extended key prefix', 'extendedKey', '[ REDACTED ]');
        }
        static createRandom(e, t, n) {
          null == e && (e = ''), null == t && (t = sS), null == n && (n = iz.wordlist());
          let a = i3.fromEntropy(i$(16), e, n);
          return sP.#b(a.computeSeed(), a).derivePath(t);
        }
        static fromMnemonic(e, t) {
          return t || (t = sS), sP.#b(e.computeSeed(), e).derivePath(t);
        }
        static fromPhrase(e, t, n, a) {
          null == t && (t = ''), null == n && (n = sS), null == a && (a = iz.wordlist());
          let i = i3.fromPhrase(e, t, a);
          return sP.#b(i.computeSeed(), i).derivePath(n);
        }
        static fromSeed(e) {
          return sP.#b(e, null);
        }
      }
      class sq extends is.J {
        publicKey;
        fingerprint;
        parentFingerprint;
        chainCode;
        path;
        index;
        depth;
        constructor(e, t, n, a, i, s, u, p, o) {
          super(t, o), (0, a9.gk)(e, sI, 'HDNodeVoidWallet'), (0, iy.n)(this, { publicKey: n });
          let y = (0, C.ZG)(iP((0, im.s)(n)), 0, 4);
          (0, iy.n)(this, {
            publicKey: n,
            fingerprint: y,
            parentFingerprint: a,
            chainCode: i,
            path: s,
            index: u,
            depth: p,
          });
        }
        connect(e) {
          return new sq(
            sI,
            this.address,
            this.publicKey,
            this.parentFingerprint,
            this.chainCode,
            this.path,
            this.index,
            this.depth,
            e
          );
        }
        get extendedKey() {
          return (
            (0, a9.vA)(this.depth < 256, 'Depth too deep', 'UNSUPPORTED_OPERATION', {
              operation: 'extendedKey',
            }),
            sR(
              (0, C.xW)([
                '0x0488B21E',
                sB(this.depth, 1),
                this.parentFingerprint,
                sB(this.index, 4),
                this.chainCode,
                this.publicKey,
              ])
            )
          );
        }
        hasPath() {
          return null != this.path;
        }
        deriveChild(e) {
          let t = (0, ia.WZ)(e, 'index');
          (0, a9.MR)(t <= 0xffffffff, 'invalid index', 'index', t);
          let n = this.path;
          n && ((n += '/' + (0x7fffffff & t)), 0x80000000 & t && (n += "'"));
          let { IR: a, IL: i } = sL(t, this.chainCode, this.publicKey, null),
            s = a4.h.addPoints(i, this.publicKey, !0);
          return new sq(
            sI,
            (0, ip.K)(s),
            s,
            this.fingerprint,
            (0, C.c$)(a),
            n,
            t,
            this.depth + 1,
            this.provider
          );
        }
        derivePath(e) {
          return sN(this, e);
        }
      }
      function sj(e) {
        try {
          if (JSON.parse(e).encseed) return !0;
        } catch (e) {}
        return !1;
      }
      function sU(e, t) {
        let n = JSON.parse(e),
          a = sb(t),
          i = (0, ie.b)(sg(n, 'ethaddr:string!')),
          s = sf(sg(n, 'encseed:string!'));
        (0, a9.MR)(s && s.length % 16 == 0, 'invalid encseed', 'json', e);
        let u = (0, C.q5)(i5(a, a, 2e3, 32, 'sha256')).slice(0, 16),
          p = s.slice(0, 16),
          o = s.slice(16),
          y = new i4.Xp(u, p),
          d = (0, i4.ny)((0, C.q5)(y.decrypt(o))),
          m = '';
        for (let e = 0; e < d.length; e++) m += String.fromCharCode(d[e]);
        return { address: i, privateKey: (0, iW.id)(m) };
      }
      function s$(e) {
        return new Promise((t) => {
          setTimeout(() => {
            t();
          }, e);
        });
      }
      class sG extends id {
        constructor(e, t) {
          'string' != typeof e || e.startsWith('0x') || (e = '0x' + e),
            super('string' == typeof e ? new a4.h(e) : e, t);
        }
        connect(e) {
          return new sG(this.signingKey, e);
        }
        async encrypt(e, t) {
          let n = { address: this.address, privateKey: this.privateKey };
          return await sT(n, e, { progressCallback: t });
        }
        encryptSync(e) {
          return sD({ address: this.address, privateKey: this.privateKey }, e);
        }
        static #g(e) {
          if (
            ((0, a9.MR)(e, 'invalid JSON wallet', 'json', '[ REDACTED ]'),
            'mnemonic' in e && e.mnemonic && 'en' === e.mnemonic.locale)
          ) {
            let t = i3.fromEntropy(e.mnemonic.entropy),
              n = sP.fromMnemonic(t, e.mnemonic.path);
            if (n.address === e.address && n.privateKey === e.privateKey) return n;
            console.log(
              'WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key'
            );
          }
          let t = new sG(e.privateKey);
          return (
            (0, a9.MR)(
              t.address === e.address,
              'address/privateKey mismatch',
              'json',
              '[ REDACTED ]'
            ),
            t
          );
        }
        static async fromEncryptedJson(e, t, n) {
          let a = null;
          return (
            sh(e)
              ? (a = await sE(e, t, n))
              : sj(e) && (n && (n(0), await s$(0)), (a = sU(e, t)), n && (n(1), await s$(0))),
            sG.#g(a)
          );
        }
        static fromEncryptedJsonSync(e, t) {
          let n = null;
          return (
            sh(e)
              ? (n = (function (e, t) {
                  let n = JSON.parse(e),
                    a = sb(t),
                    i = sM(n);
                  if ('pbkdf2' === i.name) {
                    let { salt: e, count: t, dkLen: s, algorithm: u } = i;
                    return sx(n, i5(a, e, t, s, u));
                  }
                  (0, a9.vA)('scrypt' === i.name, 'cannot be reached', 'UNKNOWN_ERROR', {
                    params: i,
                  });
                  let { salt: s, N: u, r: p, p: o, dkLen: y } = i;
                  return sx(n, sc(a, s, u, p, o, y));
                })(e, t))
              : sj(e)
                ? (n = sU(e, t))
                : (0, a9.MR)(!1, 'invalid JSON wallet', 'json', '[ REDACTED ]'),
            sG.#g(n)
          );
        }
        static createRandom(e) {
          let t = sP.createRandom();
          return e ? t.connect(e) : t;
        }
        static fromPhrase(e, t) {
          let n = sP.fromPhrase(e);
          return t ? n.connect(t) : n;
        }
      }
      var sW = n(64914),
        sY = n(53165);
      let sZ = new Set();
      function sV(e) {
        !sZ.has(e) &&
          (sZ.add(e),
          console.log('========= NOTICE ========='),
          console.log(`Request-Rate Exceeded for ${e} (this message will not be repeated)`),
          console.log(''),
          console.log('The default API keys for each service are provided as a highly-throttled,'),
          console.log('community resource for low-traffic projects and early prototyping.'),
          console.log(''),
          console.log('While your application will continue to function, we highly recommended'),
          console.log('signing up for your own API keys to improve performance, increase your'),
          console.log(
            'request rate/limit and enable other perks, such as metrics and advanced APIs.'
          ),
          console.log(''),
          console.log('For more details: https://docs.ethers.org/api-keys/'),
          console.log('=========================='));
      }
      var sJ = n(42761);
      let sH = (function () {
        if ('undefined' != typeof self) return self;
        if ('undefined' != typeof window) return window;
        if ('undefined' != typeof global) return global;
        throw Error('unable to locate global object');
      })().WebSocket;
      var sK = n(42503);
      class sz {
        #a;
        #v;
        get filter() {
          return JSON.parse(this.#v);
        }
        #w;
        #h;
        #x;
        constructor(e, t) {
          (this.#a = e),
            (this.#v = JSON.stringify(t)),
            (this.#w = null),
            (this.#h = null),
            (this.#x = null);
        }
        start() {
          this.#w = this.#a
            .send('eth_subscribe', this.filter)
            .then((e) => (this.#a._register(e, this), e));
        }
        stop() {
          this.#w.then((e) => {
            !this.#a.destroyed && this.#a.send('eth_unsubscribe', [e]);
          }),
            (this.#w = null);
        }
        pause(e) {
          (0, a9.vA)(
            e,
            'preserve logs while paused not supported by SocketSubscriber yet',
            'UNSUPPORTED_OPERATION',
            { operation: 'pause(false)' }
          ),
            (this.#h = !!e);
        }
        resume() {
          this.#h = null;
        }
        _handleMessage(e) {
          if (null != this.#w && null === this.#h) {
            let t = this.#x;
            (t =
              null == t
                ? this._emit(this.#a, e)
                : t.then(async () => {
                    await this._emit(this.#a, e);
                  })),
              (this.#x = t.then(() => {
                this.#x === t && (this.#x = null);
              }));
          }
        }
        async _emit(e, t) {
          throw Error('sub-classes must implemente this; _emit');
        }
      }
      class sX extends sz {
        constructor(e) {
          super(e, ['newHeads']);
        }
        async _emit(e, t) {
          e.emit('block', parseInt(t.number));
        }
      }
      class sQ extends sz {
        constructor(e) {
          super(e, ['newPendingTransactions']);
        }
        async _emit(e, t) {
          e.emit('pending', t);
        }
      }
      class s2 extends sz {
        #M;
        get logFilter() {
          return JSON.parse(this.#M);
        }
        constructor(e, t) {
          super(e, ['logs', t]), (this.#M = JSON.stringify(t));
        }
        async _emit(e, t) {
          e.emit(this.logFilter, e._wrapLog(t, e._network));
        }
      }
      class s5 extends a3.R$ {
        #A;
        #E;
        #C;
        constructor(e, t) {
          let n = Object.assign({}, null != t ? t : {});
          (0, a9.MR)(
            null == n.batchMaxCount || 1 === n.batchMaxCount,
            'sockets-based providers do not support batches',
            'options.batchMaxCount',
            t
          ),
            (n.batchMaxCount = 1),
            null == n.staticNetwork && (n.staticNetwork = !0),
            super(e, n),
            (this.#A = new Map()),
            (this.#E = new Map()),
            (this.#C = new Map());
        }
        _getSubscriber(e) {
          switch (e.type) {
            case 'close':
              return new sK.J('close');
            case 'block':
              return new sX(this);
            case 'pending':
              return new sQ(this);
            case 'event':
              return new s2(this, e.filter);
            case 'orphan':
              if ('drop-log' === e.filter.orphan) return new sK.J('drop-log');
          }
          return super._getSubscriber(e);
        }
        _register(e, t) {
          this.#E.set(e, t);
          let n = this.#C.get(e);
          if (n) {
            for (let e of n) t._handleMessage(e);
            this.#C.delete(e);
          }
        }
        async _send(e) {
          (0, a9.MR)(!Array.isArray(e), 'WebSocket does not support batch send', 'payload', e);
          let t = new Promise((t, n) => {
            this.#A.set(e.id, { payload: e, resolve: t, reject: n });
          });
          return await this._waitUntilReady(), await this._write(JSON.stringify(e)), [await t];
        }
        async _processMessage(e) {
          let t = JSON.parse(e);
          if (t && 'object' == typeof t && 'id' in t) {
            let e = this.#A.get(t.id);
            if (null == e) {
              this.emit(
                'error',
                (0, a9.xz)('received result for unknown id', 'UNKNOWN_ERROR', {
                  reasonCode: 'UNKNOWN_ID',
                  result: t,
                })
              );
              return;
            }
            this.#A.delete(t.id), e.resolve(t);
          } else if (t && 'eth_subscription' === t.method) {
            let e = t.params.subscription,
              n = this.#E.get(e);
            if (n) n._handleMessage(t.params.result);
            else {
              let n = this.#C.get(e);
              null == n && ((n = []), this.#C.set(e, n)), n.push(t.params.result);
            }
          } else {
            this.emit(
              'error',
              (0, a9.xz)('received unexpected message', 'UNKNOWN_ERROR', {
                reasonCode: 'UNEXPECTED_MESSAGE',
                result: t,
              })
            );
            return;
          }
        }
        async _write(e) {
          throw Error('sub-classes must override this');
        }
      }
      class s0 extends s5 {
        #k;
        #D;
        get websocket() {
          if (null == this.#D) throw Error('websocket closed');
          return this.#D;
        }
        constructor(e, t, n) {
          super(t, n),
            'string' == typeof e
              ? ((this.#k = () => new sH(e)), (this.#D = this.#k()))
              : 'function' == typeof e
                ? ((this.#k = e), (this.#D = e()))
                : ((this.#k = null), (this.#D = e)),
            (this.websocket.onopen = async () => {
              try {
                await this._start(), this.resume();
              } catch (e) {
                console.log('failed to start WebsocketProvider', e);
              }
            }),
            (this.websocket.onmessage = (e) => {
              this._processMessage(e.data);
            });
        }
        async _write(e) {
          this.websocket.send(e);
        }
        async destroy() {
          null != this.#D && (this.#D.close(), (this.#D = null)), super.destroy();
        }
      }
      let s6 = '84842078b09946638c03157f83405213';
      class s1 extends s0 {
        projectId;
        projectSecret;
        constructor(e, t) {
          let n = new s8(e, t),
            a = n._getConnection();
          (0, a9.vA)(
            !a.credentials,
            'INFURA WebSocket project secrets unsupported',
            'UNSUPPORTED_OPERATION',
            { operation: 'InfuraProvider.getWebSocketProvider()' }
          ),
            super(a.url.replace(/^http/i, 'ws').replace('/v3/', '/ws/v3/'), n._network),
            (0, iy.n)(this, { projectId: n.projectId, projectSecret: n.projectSecret });
        }
        isCommunityResource() {
          return this.projectId === s6;
        }
      }
      class s8 extends a3.FR {
        projectId;
        projectSecret;
        constructor(e, t, n) {
          null == e && (e = 'mainnet');
          let a = sJ.l.from(e);
          null == t && (t = s6),
            null == n && (n = null),
            super(s8.getRequest(a, t, n), a, { staticNetwork: a }),
            (0, iy.n)(this, { projectId: t, projectSecret: n });
        }
        _getProvider(e) {
          try {
            return new s8(e, this.projectId, this.projectSecret);
          } catch (e) {}
          return super._getProvider(e);
        }
        isCommunityResource() {
          return this.projectId === s6;
        }
        static getWebSocketProvider(e, t) {
          return new s1(e, t);
        }
        static getRequest(e, t, n) {
          null == t && (t = s6), null == n && (n = null);
          let a = new sY.ui(
            `https://${(function (e) {
              switch (e) {
                case 'mainnet':
                  return 'mainnet.infura.io';
                case 'goerli':
                  return 'goerli.infura.io';
                case 'sepolia':
                  return 'sepolia.infura.io';
                case 'arbitrum':
                  return 'arbitrum-mainnet.infura.io';
                case 'arbitrum-goerli':
                  return 'arbitrum-goerli.infura.io';
                case 'arbitrum-sepolia':
                  return 'arbitrum-sepolia.infura.io';
                case 'base':
                  return 'base-mainnet.infura.io';
                case 'base-goerlia':
                case 'base-goerli':
                  return 'base-goerli.infura.io';
                case 'base-sepolia':
                  return 'base-sepolia.infura.io';
                case 'bnb':
                  return 'bsc-mainnet.infura.io';
                case 'bnbt':
                  return 'bsc-testnet.infura.io';
                case 'linea':
                  return 'linea-mainnet.infura.io';
                case 'linea-goerli':
                  return 'linea-goerli.infura.io';
                case 'linea-sepolia':
                  return 'linea-sepolia.infura.io';
                case 'matic':
                  return 'polygon-mainnet.infura.io';
                case 'matic-amoy':
                  return 'polygon-amoy.infura.io';
                case 'matic-mumbai':
                  return 'polygon-mumbai.infura.io';
                case 'optimism':
                  return 'optimism-mainnet.infura.io';
                case 'optimism-goerli':
                  return 'optimism-goerli.infura.io';
                case 'optimism-sepolia':
                  return 'optimism-sepolia.infura.io';
              }
              (0, a9.MR)(!1, 'unsupported network', 'network', e);
            })(e.name)}/v3/${t}`
          );
          return (
            (a.allowGzip = !0),
            n && a.setCredentials('', n),
            t === s6 && (a.retryFunc = async (e, t, n) => (sV('InfuraProvider'), !0)),
            a
          );
        }
      }
      let s3 = '_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC';
      class s4 extends a3.FR {
        apiKey;
        constructor(e, t) {
          null == e && (e = 'mainnet');
          let n = sJ.l.from(e);
          null == t && (t = s3),
            super(s4.getRequest(n, t), n, { staticNetwork: n }),
            (0, iy.n)(this, { apiKey: t });
        }
        _getProvider(e) {
          try {
            return new s4(e, this.apiKey);
          } catch (e) {}
          return super._getProvider(e);
        }
        async _perform(e) {
          if ('getTransactionResult' === e.method) {
            let t;
            let { trace: n, tx: a } = await (0, iy.k)({
              trace: this.send('trace_transaction', [e.hash]),
              tx: this.getTransaction(e.hash),
            });
            if (null == n || null == a) return null;
            let i = !1;
            try {
              (t = n[0].result.output), (i = 'Reverted' === n[0].error);
            } catch (e) {}
            if (t)
              return (
                (0, a9.vA)(
                  !i,
                  'an error occurred during transaction executions',
                  'CALL_EXCEPTION',
                  {
                    action: 'getTransactionResult',
                    data: t,
                    reason: null,
                    transaction: a,
                    invocation: null,
                    revert: null,
                  }
                ),
                t
              );
            (0, a9.vA)(!1, 'could not parse trace result', 'BAD_DATA', { value: n });
          }
          return await super._perform(e);
        }
        isCommunityResource() {
          return this.apiKey === s3;
        }
        static getRequest(e, t) {
          null == t && (t = s3);
          let n = new sY.ui(
            `https://${(function (e) {
              switch (e) {
                case 'mainnet':
                  return 'eth-mainnet.alchemyapi.io';
                case 'goerli':
                  return 'eth-goerli.g.alchemy.com';
                case 'sepolia':
                  return 'eth-sepolia.g.alchemy.com';
                case 'arbitrum':
                  return 'arb-mainnet.g.alchemy.com';
                case 'arbitrum-goerli':
                  return 'arb-goerli.g.alchemy.com';
                case 'arbitrum-sepolia':
                  return 'arb-sepolia.g.alchemy.com';
                case 'base':
                  return 'base-mainnet.g.alchemy.com';
                case 'base-goerli':
                  return 'base-goerli.g.alchemy.com';
                case 'base-sepolia':
                  return 'base-sepolia.g.alchemy.com';
                case 'matic':
                  return 'polygon-mainnet.g.alchemy.com';
                case 'matic-amoy':
                  return 'polygon-amoy.g.alchemy.com';
                case 'matic-mumbai':
                  return 'polygon-mumbai.g.alchemy.com';
                case 'optimism':
                  return 'opt-mainnet.g.alchemy.com';
                case 'optimism-goerli':
                  return 'opt-goerli.g.alchemy.com';
                case 'optimism-sepolia':
                  return 'opt-sepolia.g.alchemy.com';
              }
              (0, a9.MR)(!1, 'unsupported network', 'network', e);
            })(e.name)}/v2/${t}`
          );
          return (
            (n.allowGzip = !0),
            t === s3 && (n.retryFunc = async (e, t, n) => (sV('alchemy'), !0)),
            n
          );
        }
      }
      let s9 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchangeUnderlying","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"433972","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"438","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5504","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5466","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1011480","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4017942","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2449478","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2453829","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1130","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3770","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"17357","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1853","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1958","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8318","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7371","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2263","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2508","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2108","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        s7 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchangeUnderlying","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"433972","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"7163","inputs":[{"name":"i","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"7139","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"498","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5624","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5586","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1016911","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4023775","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2455101","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2459446","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1190","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"153021","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149785","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"117778","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1853","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1883","inputs":[{"name":"arg0","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1958","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1988","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8348","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7401","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2293","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2538","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2138","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ue = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"491073"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"540"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10448"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10448"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"807920"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1597346"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2611832"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1154525"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1162775"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1300799"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1323223"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"229848"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2612120"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1259"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1688189"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161164"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157387"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7859"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"31294"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6707"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3285"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3270"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3390"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13709"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11468"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3746"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4042"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3540"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"3570"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3866"}]'
        ),
        ut = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"491073"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"15123"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"15168"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"600"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10568"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10568"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"818555"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1608161"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2636969"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1165338"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1173578"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1283011"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1305450"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"169867"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2627335"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1319"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1699060"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161284"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157507"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"80848"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6737"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3285"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3315"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3390"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3420"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13739"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11498"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3776"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4072"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3570"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"3600"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3896"}]'
        ),
        un = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchangeUnderlying","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"433972","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"438","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5504","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5466","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1011480","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4017942","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2449478","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2453829","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1130","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3770","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"17357","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1853","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1958","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8318","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7371","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2263","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2508","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2108","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ua = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchangeUnderlying","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"433972","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"7163","inputs":[{"name":"i","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"7139","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"498","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5624","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5586","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1016911","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4023775","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2455101","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2459446","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1190","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"153021","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149785","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"117778","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1853","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1883","inputs":[{"name":"arg0","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1958","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1988","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8348","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7401","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2293","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2538","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2138","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ui = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"447067"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"318"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79217"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"117152"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39151"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"438"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10704"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10666"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1023280"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4029742"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2466434"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2474920"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1108"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161967"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157887"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7770"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"40693"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3123"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3153"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3138"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3168"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3198"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13518"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11271"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3563"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3808"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"}]'
        ),
        us = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"447067"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"318"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79217"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"117152"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39151"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"15163"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"15139"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"498"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10824"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10786"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1034111"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4040975"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2477457"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2485937"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1168"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"162087"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"158007"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"147614"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3153"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3183"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3168"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3198"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3288"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13548"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11301"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3593"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3838"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3438"}]'
        ),
        uu = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"491073"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"540"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10448"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10448"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"807920"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1597346"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2611832"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1154525"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1162775"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1300799"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1323223"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"229848"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2612120"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1259"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1688189"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161164"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157387"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7859"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"31294"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6707"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3285"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3270"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3390"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13709"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11468"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3746"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4042"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3540"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"3570"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3866"}]'
        ),
        up = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"491073"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"15123"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"15168"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"600"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10568"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10568"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"818555"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1608161"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2636969"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1165338"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1173578"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1283011"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1305450"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"169867"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2627335"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1319"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1699060"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161284"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157507"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"80848"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6737"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3285"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3315"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3390"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3420"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13739"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11498"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3776"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4072"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3570"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"3600"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3896"}]'
        ),
        uo = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_rate_multiplier","type":"uint256"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"545069"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"318"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"91298"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"129233"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39151"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"438"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10704"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10666"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1023280"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4029742"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2466434"},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2474941"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1108"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161967"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157887"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7855"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"43650"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3123"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3153"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3138"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3168"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3198"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3228"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3258"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13518"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11271"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3563"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3808"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3408"},{"stateMutability":"view","type":"function","name":"rewards_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3438"}]'
        ),
        uy = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"464602","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2107","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"836956","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"3322008","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2100691","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"14082","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ud = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"464602","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2107","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"836956","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"3322008","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2100691","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"14082","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"view","type":"function","name":"stored_rates","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}]},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        um = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"464602","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"7163","inputs":[{"name":"i","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"7139","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"498","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5624","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5586","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"842268","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"3327481","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2106104","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1130","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152961","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149725","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"52006","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ur = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"464796","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2107","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"836956","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"3322008","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"gas":"2100691","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3784","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"44903","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ul = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fees","type":"uint256[2]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewFee","inputs":[{"name":"new_fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyNewFee","inputs":[{"name":"fee","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"last_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ema_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"stored_rates","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_p","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_new_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_ma_exp_time","inputs":[{"name":"_ma_exp_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_oracle","inputs":[{"name":"_method_id","type":"bytes4"},{"name":"_oracle","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_action_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"oracle_method","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_exp_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_last_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uc = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[2]"},{"indexed":false,"name":"fees","type":"uint256[2]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"394688","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2107","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"833181","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1659345","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2096207","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[2]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"10546","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        uf = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"534970","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2925","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1190495","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4732614","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2806611","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"19748","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        u_ = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"534970","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"10177","inputs":[{"name":"i","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"10153","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"gas":"498","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5624","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5586","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1198071","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4740313","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2814311","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1130","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152961","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149725","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"76634","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ub = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"535164","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2925","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1190495","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"4732614","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"gas":"2806611","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3784","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"45106","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ug = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fees","type":"uint256[3]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"430099","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2925","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1185279","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2363201","inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"2800682","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"14458","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        uv = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"605338","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"3743","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1369601","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5445490","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"3163673","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"25414","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        uw = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"605338","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"13191","inputs":[{"name":"i","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"13167","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"view","type":"function"},{"gas":"498","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5624","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5586","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1379443","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5455415","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"3173653","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1130","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152961","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149725","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"101262","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        uh = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"605532","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"3743","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1369601","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5445490","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"gas":"3163673","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3784","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"50772","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        ux = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"int128"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"int128"},{"indexed":false,"name":"tokens_bought","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[4]"},{"indexed":false,"name":"fees","type":"uint256[4]"},{"indexed":false,"name":"invariant","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidityImbalance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"old_A","type":"uint256"},{"indexed":false,"name":"new_A","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"A","type":"uint256"},{"indexed":false,"name":"t","type":"uint256"}],"name":"StopRampA","type":"event"},{"inputs":[],"outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"gas":"465510","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_rate_multipliers","type":"uint256[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"318","inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"75377","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"112012","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"37851","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"gas":"3743","inputs":[],"name":"get_balances","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"view","type":"function"},{"gas":"468","inputs":[],"name":"admin_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5564","inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"5526","inputs":[],"name":"A_precise","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1362944","inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2718190","inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"3156290","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[4]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"name":"remove_liquidity_imbalance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"1100","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"gas":"152901","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"name":"ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"149665","inputs":[],"name":"stop_ramp_A","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"3740","inputs":[{"name":"i","type":"uint256"}],"name":"admin_balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"18370","inputs":[],"name":"withdraw_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"gas":"1793","inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"gas":"1823","inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1808","inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1838","inputs":[],"name":"initial_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1868","inputs":[],"name":"future_A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1898","inputs":[],"name":"initial_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"1928","inputs":[],"name":"future_A_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"8288","inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"7341","inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"gas":"2233","inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2478","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"gas":"2078","inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        uM = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_rate_multipliers","type":"uint256[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"798491"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"13230"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"570"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1393062"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2766317"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4532131"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1743321"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1897737"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[6]"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"445558"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4531972"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1286"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2290249"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161164"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157387"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7829"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"75523"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6677"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3225"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3240},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3270},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3300},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3330},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3360},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":13679},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":11438},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":3716},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":4012},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3510},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":3540},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":3836}]'
        ),
        uA = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_rate_multipliers","type":"uint256[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"798491"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"13230"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"570"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1393062"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2766317"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4532131"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1743321"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1897737"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[6]"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"445558"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4531972"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1286"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2290249"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161164"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157387"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7829"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"75523"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6677"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3225"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3240"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3270"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13679"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11438"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3716"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":4012},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":3510},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":3540},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":3836}]'
        ),
        uE = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_rate_multipliers","type":"uint256[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"798491"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"13230"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"570"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1393062"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2766317"},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4532131"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1743321"},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1897737"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[6]"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"445558"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4531972"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1286"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2290249"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161164"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157387"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7829"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"75523"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6677"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3225"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3240"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3270"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13679"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11438"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3716"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4012"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3510"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"3540"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":3836}]'
        ),
        uC = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[6]","indexed":false},{"name":"fees","type":"uint256[6]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_rate_multipliers","type":"uint256[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[],"gas":"588767"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"390"},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"79005"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116985"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39211"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102281"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"13230"},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"570"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"10508"},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"1376631"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2730621"},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4476732"},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1726389"},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1870918"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[6]"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"417346"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[6]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4475943"},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"1260"},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2268096"},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[],"gas":"161164"},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[],"gas":"157387"},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"7829"},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[],"gas":"61669"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6677"},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3225"},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3255"},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3240"},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3270"},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3300"},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3330"},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3360"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13679"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"11438"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3716"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"4012"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3510"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"3540"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3836"}]'
        ),
        uk = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5753"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6289"}]'
        ),
        uD = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"outputs":[{"name":"","type":"uint256[4]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5753"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6666"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"_pool","type":"address"},{"name":"_i","type":"int128"},{"name":"_j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uT = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5753"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6289"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"_pool","type":"address"},{"name":"_i","type":"int128"},{"name":"_j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uS = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5753"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6289"}]'
        ),
        uO = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"}],"outputs":[{"name":"","type":"uint256[4]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[4]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5753"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[4]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6666"},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"_pool","type":"address"},{"name":"_i","type":"int128"},{"name":"_j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uF = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_base_pool","type":"address"},{"name":"_base_token","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"BASE_POOL","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"BASE_LP_TOKEN","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
        ),
        uB = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5753"},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}],"gas":"6289"}]'
        ),
        uR = ef({
          '0x5F890841f657d90E081bAbdB532A05996Af79Fe6': tM,
          '0x213be373FDff327658139C7df330817DAD2d5bBE': s9,
          '0x55Aa9BF126bCABF0bDC17Fa9E39Ec9239e1ce7A9': s7,
          '0x33bB0e62d5e8C688E645Dd46DFb48Cd613250067': ue,
          '0x2EB24483Ef551dA247ab87Cf18e1Cc980073032D': ut,
          '0xF9B62b61d108232Ef0C9DD143bb3c22c7D4A715a': ue,
          '0xB172AC2Fe440B5dA74Dc460e5E9d96bc2BF6261F': ut,
          '0xC6A8466d128Fbfd34AdA64a9FFFce325D57C9a52': un,
          '0xc4C78b08fA0c3d0a312605634461A88184Ecd630': ua,
          '0xECAaecd9d2193900b424774133B1f51ae0F29d9E': ui,
          '0x40fD58D44cFE63E8517c9Bb3ac98676838Ea56A8': us,
          '0x008CFa89df5B0c780cA3462fc2602D7F8c7Ac315': uu,
          '0xAbc533EbCDdeD41215C46ee078C5818B5b0A252F': up,
          '0x6523Ac15EC152Cb70a334230F6c5d62C5Bd963f1': uy,
          '0x24D937143d3F5cF04c72bA112735151A8CAE2262': um,
          '0x6326DEbBAa15bCFE603d831e7D75f4fc10d9B43E': ur,
          '0x4A4d7868390EF5CaC51cDA262888f34bD3025C3F': uc,
          '0xc629a01eC23AB04E1050500A3717A2a5c0701497': uy,
          '0x847ee1227A9900B73aEeb3a47fAc92c52FD54ed9': ul,
          '0x94b4DFd9Ba5865Cc931195c99A2db42F3fc5d45B': ur,
          '0x67fe41A94e779CcFa22cff02cc2957DC9C0e4286': uy,
          '0x7Ca46A636b02D4aBC66883D7FF164bDE506DC66a': um,
          '0x36Dc03C0e12a1C241306a6A8F327Fe28bA2Be5b0': ud,
          '0x9B52F13DF69D79Ec5aAB6D1aCe3157d29B409cC3': uf,
          '0x50b085f2e5958C4A87baf93A8AB79F6bec068494': u_,
          '0x8c1aB78601c259E1B43F19816923609dC7d7de9B': ub,
          '0xE5F4b89E0A16578B3e0e7581327BDb4C712E44De': ug,
          '0x5Bd47eA4494e0F8DE6e3Ca10F1c05F55b72466B8': uv,
          '0xd35B58386705CE75CE6d09842E38E9BE9CDe5bF6': uw,
          '0x88855cdF2b0A8413D470B86952E726684de915be': uh,
          '0xaD4753D045D3Aed5C1a6606dFb6a7D7AD67C1Ad7': ux,
        }),
        uI = ef({
          '0x4fb93D7d320E8A263F22f62C2059dFC2A8bCbC4c': s9,
          '0x39fE1824f98CD828050D7c51dA443E84121c7cf1': s7,
          '0xC05EB760A135d3D0c839f1141423002681157a17': ui,
          '0xD8336532f6ED7b94282fAF724fe41d6145E07Cfc': us,
          '0x571FF5b7b346F706aa48d696a9a4a288e9Bb4091': uy,
          '0x8925D9d9B4569D737a48499DeF3f67BaA5a144b9': um,
          '0xAe00f57663F4C85FC948B13963cd4627dAF01061': ur,
          '0x8101E6760130be2C8Ace79643AB73500571b7162': uc,
          '0x493084cA44C779Af27a416ac1F71e3823BF21b53': uf,
          '0x9B4Ed6F8904E976146b3dC0233CD48Cf81835240': u_,
          '0xA9134FaE98F92217f457918505375Ae91fdc5e3c': ub,
          '0xCC9fd96C26c450Dd4580893afF75efd5cb6C12Fc': ug,
          '0x991b05d5316fa3A2C053F84658b84987cd5c9970': uv,
          '0xC7c46488566b9ef9B981b87E328939CaA5ca152f': uw,
          '0xf31bcdf0B9a5eCD7AB463eB905551fBc32e51856': uh,
          '0xAc273d5b4FC06625d8b1abA3BE8De15bDFb8E39f': ux,
        }),
        uL = ef({
          '0xfCE359115dFe1533a2458650123F86C454BC0213': s9,
          '0x09C62ad0694e3f1ad8cF8876aaBe56138C586f5F': s7,
          '0xC9438d8928486bD9621D326002F4672bF684187A': ui,
          '0x2b70A5B878665FfDB4A06Ba40a264d6c70f68F4B': us,
          '0x210C806F6AE850279f7E298dE749EC4B427d00DD': uo,
          '0xf82162bB68aD5a168345bb7EFb2faA0EDCCA5177': s7,
          '0x61E10659fe3aa93d036d099405224E4Ac24996d0': uy,
          '0xd9Acb0BAeeD77C99305017821167674Cc7e82f7a': um,
          '0xE6358f6a45B502477e83CC1CDa759f540E4459ee': ur,
          '0xAD4768F408dD170e62E074188D81A29AE31B8Fd8': uc,
          '0x3cABd83bCa606768939B843f91df8f4963dBC079': uf,
          '0xD1602F68CC7C4c7B59D686243EA35a9C73B0c6a2': u_,
          '0x5d58Eb45e97B43e471AF05cD2b11CeB4106E1b1a': ub,
          '0x7Ee25A34C921E4009B726cC6be0643fd6a39DbfE': ug,
          '0xABE216918fFDa43B44e3FC09639Fd82fD3527D89': uv,
          '0x775A21E0dfE25aF30FF2FCAC37512EbD8fD36471': uw,
          '0xb11Dc44A9f981fAF1669dca6DD40c3cc2554A2ce': uh,
          '0x9D7C28226AA7142cBF234ab9aa9C203D095c528B': ux,
          '0x736FB582A39BC8f7685f87010c76C674F7fB583e': uM,
          '0x2C996b11a73276787Eb637D4459d1A7fea16B310': uA,
          '0xa4Fc50E45aF5bF22b519468c7c342C704e1F3d44': uE,
          '0x65e38C41CcE6D9Bc202209Cc546B2f63985D4139': uC,
        }),
        uN = ef({
          '0xA237034249290De2B07988Ac64b96f22c0E76fE0': s9,
          '0xc50C05Ca1f8C2346664bd0d4a1eb6aC1Da38414f': s7,
          '0xa27f39E9C21b3376F43266E13Ad5A5d6E9BdB320': ui,
          '0x505C34ED8dBE96d2D5C7D83158aA844887770970': us,
          '0x697434ca761d4F86b553784B69F4f37F5eDf54dF': uy,
          '0xBdFF0C27dd073C119ebcb1299a68A6A92aE607F0': um,
          '0x64448B78561690B70E17CBE8029a3e5c1bB7136e': ur,
          '0x09672362833d8f703D5395ef3252D4Bfa51c15ca': uc,
          '0x1de7f0866e2c4adAC7b457c58Cc25c8688CDa1f2': uf,
          '0x094d12e5b541784701FD8d65F11fc0598FBC6332': u_,
          '0xF1f85a74AD6c64315F85af52d3d46bF715236ADc': ub,
          '0xaa82ca713D94bBA7A89CEAB55314F9EfFEdDc78c': ug,
          '0x7544Fe3d184b6B55D6B36c3FCA1157eE0Ba30287': uv,
          '0x7D86446dDb609eD0F5f8684AcF30380a356b2B4c': uw,
          '0x0eb0F1FaF5F509Ac53fA224477509EAD167cf410': uh,
          '0xCE94D3E5b0D80565D7B713A687b39a3Dc81780BA': ux,
        }),
        uP = ef({
          '0x09672362833d8f703D5395ef3252D4Bfa51c15ca': s9,
          '0xBE175115BF33E12348ff77CcfEE4726866A0Fbd5': s7,
          '0x094d12e5b541784701FD8d65F11fc0598FBC6332': ui,
          '0xF1f85a74AD6c64315F85af52d3d46bF715236ADc': us,
          '0x8DEb66a4A40E370355bEe35f12E55Fe9c755d686': ue,
          '0x3edE9b145F82e9e46C03f8A8F67B77aEE847b632': ut,
          '0x54e8A25d0Ac0E4945b697C80b8372445FEA17A62': uy,
          '0x73Ec37618683C274D0bBf5f5726aA856B2BDAB81': uy,
          '0xD68970e266cE1A015953897C7055a5E0bC657Af8': um,
          '0x7DA64233Fefb352f8F501B357c018158ED8aA455': ur,
          '0x6F9fb833501f46CBE6f6A4b6Cf32C834E5A5e8C5': ul,
          '0x0100fBf414071977B19fC38e6fc7c32FE444F5C9': uc,
          '0xe381C25de995d62b453aF8B931aAc84fcCaa7A62': uf,
          '0xc379bA7b8e1c6C48D64e1cf9dD602C97c9fD0F40': u_,
          '0xAAe75FAebCae43b9d541Fd875622BE48D9B4f5D0': ub,
          '0x8866414733F22295b7563f9C5299715D2D76CAf4': ug,
          '0x8d53E5De033078367Ad91527c53abfd1Eb6bfa86': uv,
          '0x2ac56cEBc2D27c9bB51a11773355E44371Eb88D3': uw,
          '0x89287c32c2CAC1C76227F6d300B2DBbab6b75C08': uh,
          '0x06e3C4da96fd076b97b7ca3Ae23527314b6140dF': ux,
        }),
        uq = ef({
          '0x78CF256256C8089d68Cde634Cf7cDEFb39286470': s9,
          '0xADf698e4d8Df08b3E2c79682891636eF00F6e205': s7,
          '0xe8269B33E47761f552E1a3070119560d5fa8bBD6': ue,
          '0x114C4042B11a2b16F58Fe1BFe847589a122F678a': ut,
          '0xC2b1DF84112619D190193E48148000e3990Bf627': uy,
          '0x73Ec37618683C274D0bBf5f5726aA856B2BDAB81': uy,
          '0x16a7DA911A4DD1d83F3fF066fE28F3C792C50d90': um,
          '0x4f3E8F405CF5aFC05D68142F3783bDfE13811522': ur,
          '0x6F9fb833501f46CBE6f6A4b6Cf32C834E5A5e8C5': ul,
          '0x0f9cb53Ebe405d49A0bbdBD291A65Ff571bC83e1': uc,
          '0x78D0fC2B9D5AE65512DB242e424a9c683F18c243': uf,
          '0x35796DAc54f144DFBAD1441Ec7C32313A7c29F39': u_,
          '0x6600e98b71dabfD4A8Cac03b302B0189Adb86Afb': ub,
          '0x6D65b498cb23deAba52db31c93Da9BFFb340FB8F': ug,
          '0x445FE580eF8d70FF569aB36e80c647af338db351': uv,
          '0xF6bDc2619FFDA72c537Cd9605e0A274Dc48cB1C9': uw,
          '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6': uh,
          '0x8474DdbE98F5aA3179B3B3F5942D724aFcdec9f6': ux,
        }),
        uj = ef({
          '0x4A5bF7Ab9A8202692051c19B102d3eDD62aaBAE6': s9,
          '0x0B4dc7A945695D11FD83e40B2DfC2B896A02395F': s7,
          '0x04e39EF8332e979Cf8e4f8891E64934FF65F231b': uy,
          '0xC9438d8928486bD9621D326002F4672bF684187A': um,
          '0x2b70A5B878665FfDB4A06Ba40a264d6c70f68F4B': ur,
          '0x2D036f0Ff6F440dB623e0D9D3B5Daa509e5500C3': uc,
          '0xec9cEBE650E181079576C1b6d0d2e092B1EdfF13': uf,
          '0xe8269B33E47761f552E1a3070119560d5fa8bBD6': u_,
          '0x114C4042B11a2b16F58Fe1BFe847589a122F678a': ub,
          '0x4244eB811D6e0Ef302326675207A95113dB4E1F8': ug,
          '0x66B5792ED50a2a7405Ea75C4B6B1913eF4E46661': uv,
          '0xcB4eB43E31C830e22baF764c64F11F32C280496c': uw,
          '0xc1C49622b63B961ce1D352ecb7D8261Ab5556695': uh,
          '0x0E2615ce69Cd3Dc3Ff6f66a975bEa0655F3bA7b9': ux,
        }),
        uU = ef({
          '0x6842E0412AC1c00464dc48961330156a07268d14': uy,
          '0x9fAe78C4bBB649deB7b2295dDB8A03adA7eB660F': um,
          '0xfCE359115dFe1533a2458650123F86C454BC0213': ur,
          '0x09C62ad0694e3f1ad8cF8876aaBe56138C586f5F': uc,
          '0xD19Baeadc667Cf2015e395f2B08668Ef120f41F5': uf,
          '0x04e39EF8332e979Cf8e4f8891E64934FF65F231b': u_,
          '0xC9438d8928486bD9621D326002F4672bF684187A': ub,
          '0x2b70A5B878665FfDB4A06Ba40a264d6c70f68F4B': ug,
          '0x2D036f0Ff6F440dB623e0D9D3B5Daa509e5500C3': uv,
          '0x7Bb707085905c9D80854652809A1ba8480C11789': uw,
          '0xec9cEBE650E181079576C1b6d0d2e092B1EdfF13': uh,
          '0xe8269B33E47761f552E1a3070119560d5fa8bBD6': ux,
        }),
        u$ = ef({
          '0x2632679f5ca396a1bd2647092d9dbf7ec5d7b263': uy,
          '0x12f196251efcaca0fd73d5b58132b16760ba96a8': um,
          '0xafdab4f8f6e6992b16e3906295fba390aab59ca5': ur,
          '0x50d7a3e0d5350d52e9e08a1b58eefd1db8759d7d': uc,
          '0xc8913d486a42459e6b34db33f0c660fca61306b9': uf,
          '0xc5ec776a55ea062fa3173c6c76703e9c9fa91c47': u_,
          '0xed2c5f2c4cab6e82630d5615ea15dd47d8b29983': ub,
          '0xe7d5293c01685a414ddde527eb5effbf92b52648': ug,
          '0x77016d2de65de15a3c36bebbddc90804f670d2d0': uv,
          '0xd59c875dccb6cdcb3a75b91b58a363b5e4b0ca9a': uw,
          '0x6378dd741b24bd884f3590d7bc7555fdb2f5b003': uh,
          '0x509495dfeec3a53acb2f60669985d868131ad9a5': ux,
        }),
        uG = ef({
          '0xfEE7166C32Bdf6356Ef60636f43400AA55551A96': uy,
          '0x183Bb362aAa53f24BDF76a5E0FE11eEEce21F44d': um,
          '0x469CF0874E62cfbaD342AE7e11aBCfC0F08dC17d': ur,
          '0xE5ddCc991c29d3a5350E1Eb669439F0237dB7490': uc,
          '0xBcdCADB91446366d10b293152c967e64dE789B92': uf,
          '0x9Adb8f6B5c4A6Be6625E46e2fd352B859B4bf711': u_,
          '0x15Eb833Fa0689458Dc7B11517932780DfdFaa046': ub,
          '0xa72F339708461537223Bc415008eD61338Fe0CA2': ug,
          '0x59395Ef4FB6F266F7B117CF0a7223eC45d78A2AF': uv,
          '0x3730D8B82BF3fF6Cc6dFDBe2Fd7B2A655e74eAae': uw,
          '0x0F5390AB4C5456a769056C96E4D7C71770b52319': uh,
          '0xA73b02a97B45604cd9f0BBAA153eCfe01f409350': ux,
        }),
        uW = ef({
          '0xD166EEdf272B860E991d331B71041799379185D5': uy,
          '0x5C627d6925e448Ae418BC8a45d56B31fe5009Bea': um,
          '0x22D710931F01c1681Ca1570Ff016eD42EB7b7c2a': ur,
          '0xA50d9a424A14aF0b9e7e9243dc1597d977f6cB09': uc,
          '0xeD49979026DC44DC7E83b1471794ec9b2a365Ea2': uf,
          '0x0Cc51c9786f3777a6d50961CEBb2BB6E69ec5e07': u_,
          '0x0a31527a8dE2Ee97BBD8cCE14Db8E8826a0b6C4f': ub,
          '0x1086F023146f9026A9Bb22983CE866813C59518A': ug,
          '0x1621E58d36EB5Ef26F9768Ebe9DB77181b1f5a02': uv,
          '0x2FdDeDF2D842f23da2B81b9144e75cEcb691Bf19': uw,
          '0x50E09Ee7080b32aef3e92346891dD2DD389B5fAf': uh,
          '0x44d9B3f4EE15AC81FEb918501fca0ddc9d83C976': ux,
        }),
        uY = ef({
          '0xB90B9B1F91a01Ea22A182CD84C1E22222e39B415': uy,
          '0x7CDE88e96E9445D986537074B1bFD32c5623c71f': um,
          '0x5BD917879e04Cf18EC79285a1C960C5fbA7f5EA3': ur,
          '0x630C7Ad3998f397df0c0A8FfDB7a65B61ec5539E': uc,
          '0xD166EEdf272B860E991d331B71041799379185D5': uf,
          '0x5C627d6925e448Ae418BC8a45d56B31fe5009Bea': u_,
          '0x22D710931F01c1681Ca1570Ff016eD42EB7b7c2a': ub,
          '0xA50d9a424A14aF0b9e7e9243dc1597d977f6cB09': ug,
          '0xeD49979026DC44DC7E83b1471794ec9b2a365Ea2': uv,
          '0x0Cc51c9786f3777a6d50961CEBb2BB6E69ec5e07': uw,
          '0x0a31527a8dE2Ee97BBD8cCE14Db8E8826a0b6C4f': uh,
          '0x1086F023146f9026A9Bb22983CE866813C59518A': ux,
        }),
        uZ = '0xe07a16358aa878cbda2d49a88e5106871e0db307',
        uV = {
          1: {
            implementationABIDict: uR,
            basePoolIdZapDict: {
              '3pool': { address: '0xa79828df1850e8a3a3064576f380d90aecdd3359', ABI: tA },
              fraxusdc: { address: '0x08780fb7e580e492c1935bee4fa5920b94aa95da', ABI: uk },
              fraxusdp: { address: '0x63b709d2118ba0389ee75a131d1f9a473e06afbd', ABI: uk },
              sbtc: { address: '0x7abdbaf29929e7f8621b757d2a7c04d78d633834', ABI: tA },
              ren: { address: '0x8fb3ec8f2d1dc089e70cd61f1e49496d443b2124', ABI: uF },
              sbtc2: { address: '0xa2d40edbf76c6c0701ba8899e2d059798eba628e', ABI: uB },
            },
            stableNgBasePoolZap: uZ,
          },
          10: {
            implementationABIDict: uq,
            basePoolIdZapDict: {
              '3pool': { address: '0x167e42a1c7ab4be03764a2222aac57f5f6754411', ABI: tA },
              'factory-v2-16': { address: '0x4244eb811d6e0ef302326675207a95113db4e1f8', ABI: uS },
            },
            stableNgBasePoolZap: uZ,
          },
          56: { implementationABIDict: uY, stableNgBasePoolZap: uZ },
          100: {
            implementationABIDict: uj,
            basePoolIdZapDict: {
              '3pool': { address: '0x87c067fac25f123554a0e76596bf28cfa37fd5e9', ABI: tA },
            },
            stableNgBasePoolZap: uZ,
          },
          137: {
            implementationABIDict: uI,
            basePoolIdZapDict: {
              aave: { address: '0x5ab5c56b9db92ba45a0b46a207286cd83c15c939', ABI: uD },
              ren: { address: '0xe2e6dc1708337a6e59f227921db08f21e3394723', ABI: uT },
            },
            stableNgBasePoolZap: uZ,
          },
          146: { stableNgBasePoolZap: uZ },
          196: { stableNgBasePoolZap: uZ },
          250: {
            implementationABIDict: uL,
            basePoolIdZapDict: {
              '2pool': { address: '0x78d51eb71a62c081550efcc0a9f9ea94b2ef081c', ABI: uS },
              ren: { address: '0x001e3ba199b4ff4b5b6e97acd96dafc0e2e4156e', ABI: uS },
              geist: { address: '0x247aeb220e87f24c40c9f86b65d6bd5d3c987b55', ABI: uO },
            },
            stableNgBasePoolZap: uZ,
          },
          252: { stableNgBasePoolZap: uZ },
          324: { stableNgBasePoolZap: uZ },
          999: { stableNgBasePoolZap: uZ },
          1284: { implementationABIDict: uU },
          2222: { implementationABIDict: u$, stableNgBasePoolZap: uZ },
          5e3: { stableNgBasePoolZap: uZ },
          8453: { implementationABIDict: uW, stableNgBasePoolZap: uZ },
          42220: { implementationABIDict: uG, stableNgBasePoolZap: uZ },
          43114: {
            implementationABIDict: uN,
            basePoolIdZapDict: {
              aave: { address: '0x001e3ba199b4ff4b5b6e97acd96dafc0e2e4156e', ABI: uD },
              ren: { address: '0xeeb3ddbcc4174e0b3fd1c13ad462b95d11ef42c3', ABI: uT },
            },
            stableNgBasePoolZap: uZ,
          },
          42161: {
            implementationABIDict: uP,
            basePoolIdZapDict: {
              '2pool': { address: '0x7544fe3d184b6b55d6b36c3fca1157ee0ba30287', ABI: uS },
              ren: { address: '0x803a2b40c5a9bb2b86dd630b274fa2a9202874c2', ABI: uS },
              'factory-v2-41': { address: '0x58ac91f5be7dc0c35b24b96b19bac55fbb8e705e', ABI: uS },
            },
            stableNgBasePoolZap: uZ,
          },
        },
        uJ = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_base_pool","type":"address"},{"name":"_base_lp_token","type":"address"},{"name":"_weth","type":"address"},{"name":"_base_coins","type":"address[5]"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"_pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"_pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[6]"},{"name":"_min_mint_amount","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[6]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[6]"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256[6]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uH = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_base_pool","type":"address"},{"name":"_base_lp_token","type":"address"},{"name":"_weth","type":"address"},{"name":"_base_coins","type":"address[3]"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"pure","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"pure","type":"function","name":"base_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"lp_price","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"_pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"_pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[4]"},{"name":"_min_mint_amount","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[4]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[4]"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256[4]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uK = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_base_pool","type":"address"},{"name":"_weth","type":"address"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"pure","type":"function","name":"base_pool","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"pure","type":"function","name":"base_token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"lp_price","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"_pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"_pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"_dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[3]"},{"name":"_min_mint_amount","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[3]"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"_min_amount","type":"uint256"},{"name":"_use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        uz = ef({
          '0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490': '3pool',
          '0x3175Df0976dFA876431C2E9eE6Bc45b65d3473CC': 'fraxusdc',
        }),
        uX = ef({ '0xdAD97F7713Ae9437fa9249920eC8507e5FbB23d3': 'atricrypto3' }),
        uQ = {
          1: {
            amm_native_transfers_disabled: '0x0000000000000000000000000000000000000000',
            amm_native_transfers_enabled: '0x66442b0c5260b92caa9c234ecf2408cbf6b19a6f',
            implementationIdx: 0,
          },
          10: {
            amm_native_transfers_disabled: '0x0458ea5f4cd00e873264be2031ceb8f9d9b3116c',
            amm_native_transfers_enabled: '0x1fe2a06c8bd81ae65fd1c5036451890b37976369',
            implementationIdx: 1,
          },
          56: {
            amm_native_transfers_disabled: '0x6a8cbed756804b16e05e741edabd5cb544ae21bf',
            amm_native_transfers_enabled: '0xbff334f8d5912ac5c4f2c590a2396d1c5d990123',
            implementationIdx: 1,
          },
          100: {
            amm_native_transfers_disabled: '0x3f445d38e820c010a7a6e33c5f80cbebe6930f61',
            amm_native_transfers_enabled: '0xa54f3c1dfa5f7dbf2564829d14b3b74a65d26ae2',
            implementationIdx: 1,
          },
          137: {
            amm_native_transfers_disabled: '0x3d6cb2f6dcf47cdd9c13e4e3beae9af041d8796a',
            amm_native_transfers_enabled: '0x0c59d36b23f809f8b6c7cb4c8c590a0ac103baef',
            implementationIdx: 1,
          },
          146: {
            amm_native_transfers_disabled: '0xf3a6aa40cf048a3960e9664847e9a7be025a390a',
            amm_native_transfers_enabled: '0x0000000000000000000000000000000000000000',
            implementationIdx: 1,
          },
          196: {
            amm_native_transfers_disabled: '0x64379c265fc6595065d7d835aaaa731c0584db80',
            amm_native_transfers_enabled: '0x0c9d8c7e486e822c29488ff51bff0167b4650953',
            implementationIdx: 1,
          },
          250: {
            amm_native_transfers_disabled: '0xd125e7a0ceddf89c6473412d85835450897be6dc',
            amm_native_transfers_enabled: '0x76303e4fdca0abf28ab3ee42ce086e6503431f1d',
            implementationIdx: 1,
          },
          252: {
            amm_native_transfers_disabled: '0x1a83348f9ccfd3fe1a8c0adba580ac4e267fe495',
            amm_native_transfers_enabled: '0xd3b17f862956464ae4403ccf829ce69199856e1e',
            implementationIdx: 1,
          },
          324: {
            amm_native_transfers_disabled: '0x1bd7d40cf9bbb63537746c89992f421bc35c6716',
            amm_native_transfers_enabled: '0x18d01726fedabd91579a9368dfb2f8a24f905280',
            implementationIdx: 0,
          },
          999: {
            amm_native_transfers_disabled: '0x635742dcc8313dcf8c904206037d962c042eafbd',
            amm_native_transfers_enabled: '0x0000000000000000000000000000000000000000',
            implementationIdx: 1,
          },
          1284: {
            amm_native_transfers_disabled: '0x0000000000000000000000000000000000000000',
            amm_native_transfers_enabled: '0x0000000000000000000000000000000000000000',
            implementationIdx: 0,
          },
          2222: {
            amm_native_transfers_disabled: '0x0c59d36b23f809f8b6c7cb4c8c590a0ac103baef',
            amm_native_transfers_enabled: '0xfabc421e3368d158d802684a217a83c083c94ceb',
            implementationIdx: 1,
          },
          5e3: {
            amm_native_transfers_disabled: '0x7ca46a636b02d4abc66883d7ff164bde506dc66a',
            amm_native_transfers_enabled: '0x046207cb759f527b6c10c2d61dbaca45513685cc',
            implementationIdx: 1,
          },
          8453: {
            amm_native_transfers_disabled: '0x0c59d36b23f809f8b6c7cb4c8c590a0ac103baef',
            amm_native_transfers_enabled: '0xa274c88e09fdf1798a7517096557e6c1bea1f65a',
            implementationIdx: 1,
          },
          42161: {
            amm_native_transfers_disabled: '0x1f7c86affe5bcf7a1d74a8c8e2ef9e03bf31c1bd',
            amm_native_transfers_enabled: '0xd7e72f3615aa65b92a4dbdc211e296a35512988b',
            implementationIdx: 1,
          },
          42220: {
            amm_native_transfers_disabled: '0x0c59d36b23f809f8b6c7cb4c8c590a0ac103baef',
            amm_native_transfers_enabled: '0xfabc421e3368d158d802684a217a83c083c94ceb',
            implementationIdx: 1,
          },
          43114: {
            amm_native_transfers_disabled: '0x0c59d36b23f809f8b6c7cb4c8c590a0ac103baef',
            amm_native_transfers_enabled: '0xfabc421e3368d158d802684a217a83c083c94ceb',
            implementationIdx: 1,
          },
          0x4e454152: {
            amm_native_transfers_disabled: '0x3d6cb2f6dcf47cdd9c13e4e3beae9af041d8796a',
            amm_native_transfers_enabled: '0x0c59d36b23f809f8b6c7cb4c8c590a0ac103baef',
            implementationIdx: 1,
          },
        },
        u2 = {
          1: {
            lpTokenBasePoolIdDict: uz,
            basePoolIdZapDict: {
              '3pool': { address: '0x97adc08fa1d849d2c48c5dcc1dab568b169b0267', ABI: uH },
              fraxusdc: { address: '0x5de4ef4879f4fe3bbadf2227d2ac5d0e2d76c895', ABI: uK },
            },
            tricryptoDeployImplementations: uQ[1],
          },
          10: { tricryptoDeployImplementations: uQ[10] },
          56: { tricryptoDeployImplementations: uQ[56] },
          100: { tricryptoDeployImplementations: uQ[100] },
          137: {
            lpTokenBasePoolIdDict: uX,
            basePoolIdZapDict: {
              atricrypto3: { address: '0x3d8eadb739d1ef95dd53d718e4810721837c69c1', ABI: uJ },
            },
            tricryptoDeployImplementations: uQ[137],
          },
          146: { tricryptoDeployImplementations: uQ[146] },
          196: { tricryptoDeployImplementations: uQ[196] },
          250: { tricryptoDeployImplementations: uQ[250] },
          252: { tricryptoDeployImplementations: uQ[252] },
          324: { tricryptoDeployImplementations: uQ[324] },
          999: { tricryptoDeployImplementations: uQ[999] },
          1284: { tricryptoDeployImplementations: uQ[1284] },
          2222: { tricryptoDeployImplementations: uQ[2222] },
          5e3: { tricryptoDeployImplementations: uQ[5e3] },
          8453: { tricryptoDeployImplementations: uQ[8453] },
          42161: { tricryptoDeployImplementations: uQ[42161] },
          42220: { tricryptoDeployImplementations: uQ[42220] },
          43114: { tricryptoDeployImplementations: uQ[43114] },
          0x4e454152: { tricryptoDeployImplementations: uQ[0x4e454152] },
        },
        u5 = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[]","indexed":false},{"name":"fees","type":"uint256[]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[]","indexed":false},{"name":"fees","type":"uint256[]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_id","type":"int128","indexed":false},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[]","indexed":false},{"name":"fees","type":"uint256[]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyNewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"offpeg_fee_multiplier","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_offpeg_fee_multiplier","type":"uint256"},{"name":"_ma_exp_time","type":"uint256"},{"name":"_coins","type":"address[]"},{"name":"_rate_multipliers","type":"uint256[]"},{"name":"_asset_types","type":"uint8[]"},{"name":"_method_ids","type":"bytes4[]"},{"name":"_oracles","type":"address[]"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_received","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"last_price","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ema_price","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_p","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"stored_rates","inputs":[],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"dynamic_fee","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_offpeg_fee_multiplier","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_ma_exp_time","inputs":[{"name":"_ma_exp_time","type":"uint256"},{"name":"_D_ma_time","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"N_COINS","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"offpeg_fee_multiplier","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_exp_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D_ma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_last_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"salt","inputs":[],"outputs":[{"name":"","type":"bytes32"}]}]'
        ),
        u0 = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchangeUnderlying","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"int128","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"int128","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[]","indexed":false},{"name":"fees","type":"uint256[]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[]","indexed":false},{"name":"fees","type":"uint256[]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_id","type":"int128","indexed":false},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityImbalance","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[]","indexed":false},{"name":"fees","type":"uint256[]","indexed":false},{"name":"invariant","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampA","inputs":[{"name":"old_A","type":"uint256","indexed":false},{"name":"new_A","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"A","type":"uint256","indexed":false},{"name":"t","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyNewFee","inputs":[{"name":"fee","type":"uint256","indexed":false},{"name":"offpeg_fee_multiplier","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_offpeg_fee_multiplier","type":"uint256"},{"name":"_ma_exp_time","type":"uint256"},{"name":"_math_implementation","type":"address"},{"name":"_base_pool","type":"address"},{"name":"_coins","type":"address[]"},{"name":"_base_coins","type":"address[]"},{"name":"_rate_multipliers","type":"uint256[]"},{"name":"_asset_types","type":"uint8[]"},{"name":"_method_ids","type":"bytes4[]"},{"name":"_oracles","type":"address[]"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_received","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"_dx","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_received","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"withdraw_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"last_price","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ema_price","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_p","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy_underlying","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_amounts","type":"uint256[2]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A_precise","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"stored_rates","inputs":[],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"dynamic_fee","inputs":[{"name":"i","type":"int128"},{"name":"j","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_new_fee","inputs":[{"name":"_new_fee","type":"uint256"},{"name":"_new_offpeg_fee_multiplier","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_ma_exp_time","inputs":[{"name":"_ma_exp_time","type":"uint256"},{"name":"_D_ma_time","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"N_COINS","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"BASE_POOL","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"BASE_N_COINS","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"BASE_COINS","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"offpeg_fee_multiplier","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_exp_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D_ma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_last_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"salt","inputs":[],"outputs":[{"name":"","type":"bytes32"}]}]'
        ),
        u6 = JSON.parse(
          '[{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[]"},{"name":"_is_deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_deposit_amounts","type":"uint256[]"},{"name":"_min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_token_amount","type":"uint256"},{"name":"i","type":"int128"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"_min_amounts","type":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"_pool","type":"address"},{"name":"_burn_amount","type":"uint256"},{"name":"i","type":"int128"},{"name":"_min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_imbalance","inputs":[{"name":"_pool","type":"address"},{"name":"_amounts","type":"uint256[]"},{"name":"_max_burn_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]}]'
        );
      function u1(e) {
        var t;
        let n =
          null !==
            (t = (
              e ? this.constants.CRYPTO_FACTORY_CONSTANTS : this.constants.STABLE_FACTORY_CONSTANTS
            ).basePoolIdZapDict) && void 0 !== t
            ? t
            : {};
        for (let e in n) {
          if (!Object.prototype.hasOwnProperty.call(n, e)) continue;
          let t = n[e];
          t.address in this.constants || this.setContract(t.address, t.ABI);
        }
      }
      function u8(e, t) {
        let n = e.find((e) => e.address.toLowerCase() === t.toLowerCase());
        return n ? n.id : ak.call(this, t.toLowerCase());
      }
      var u3 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let u4 = {
          1: [
            '0x066b6e1e93fa7dcd3f0eb7f8bac7d5a747ce0bf9',
            '0xc61557c5d177bd7dc889a3b621eec333e168f68a',
          ],
          137: [
            '0x666dc3b4babfd063faf965bd020024af0dc51b64',
            '0xe4199bc5c5c1f63dba47b56b6db7144c51cf0bf8',
            '0x88c4d6534165510b2e2caf0a130d4f70aa4b6d71',
          ],
          42161: ['0xd7bb79aee866672419999a0496d99c54741d67b5'],
        },
        u9 = (e) => [].concat(...e.map((e) => (Array.isArray(e) ? u9(e) : e)));
      function u7(e, t, n) {
        return u3(this, void 0, void 0, function* () {
          let a = this.contracts[e].multicallContract,
            i = [];
          for (let e of t) i.push(a.get_base_pool(e));
          let s = yield this.multicallProvider.all(i),
            u = [],
            p = [];
          return (
            s.forEach((e) => {
              '0x0000000000000000000000000000000000000000' !== e
                ? u.push(u8.call(this, n, e))
                : u.push(''),
                p.push(e);
            }),
            { ids: u, addresses: p }
          );
        });
      }
      function pe(e, t) {
        return u3(this, void 0, void 0, function* () {
          let n = this.contracts[t].contract,
            a = t === this.constants.ALIASES.factory ? 'factory-v2' : 'factory-stable-ng',
            i = Number(this.formatUnits(yield n.pool_count(this.constantOptions), 0));
          for (let t = 1; t <= i; t++)
            if ((yield n.pool_list(i - t)).toLowerCase() === e.toLowerCase())
              return `${a}-${i - t}`;
          throw Error('Unknown pool');
        });
      }
      function pt() {
        return u3(this, arguments, void 0, function* (e = 0, t) {
          var n;
          let a = this.contracts[t].contract,
            i = this.contracts[t].multicallContract,
            s = Number(this.formatUnits(yield a.pool_count(this.constantOptions), 0)),
            u = [];
          for (let t = e; t < s; t++) u.push(i.pool_list(t));
          if (0 === u.length) return [[], []];
          let p =
              t === this.constants.ALIASES.factory
                ? 'factory-v2-'
                : t === this.constants.ALIASES.crvusd_factory
                  ? 'factory-crvusd-'
                  : t === this.constants.ALIASES.stable_ng_factory
                    ? 'factory-stable-ng-'
                    : 'factory-eywa-',
            o = (yield this.multicallProvider.all(u)).map((t, n) => ({
              id: p + (e + n),
              address: t.toLowerCase(),
            })),
            y = Object.values(this.constants.POOLS_DATA).map((e) => e.swap_address.toLowerCase()),
            d = null !== (n = u4[this.chainId]) && void 0 !== n ? n : [];
          return [
            (o = o.filter((e) => !y.includes(e.address) && !d.includes(e.address))).map(
              (e) => e.id
            ),
            o.map((e) => e.address),
          ];
        });
      }
      function pn(e) {
        return e.map((e) =>
          e
            .filter((e) => e !== this.constants.ZERO_ADDRESS)
            .map((e) =>
              137 === this.chainId && '0x0000000000000000000000000000000000001010' === e
                ? this.constants.NATIVE_TOKEN.address
                : e.toLowerCase()
            )
        );
      }
      function pa(e, t) {
        return u3(this, void 0, void 0, function* () {
          let n = this.contracts[t].multicallContract,
            a =
              1 !== this.chainId &&
              this.constants.ALIASES.child_gauge_factory === this.constants.ZERO_ADDRESS,
            i = !('child_gauge_factory_old' in this.constants.ALIASES),
            s = t === this.constants.ALIASES.stable_ng_factory,
            u = [];
          for (let t of e) {
            let e = new E(t, eu);
            u.push(n.get_implementation_address(t)),
              1 === this.chainId
                ? u.push(n.get_gauge(t))
                : (a ||
                    u.push(
                      this.contracts[
                        this.constants.ALIASES.child_gauge_factory
                      ].multicallContract.get_gauge_from_lp_token(t)
                    ),
                  i ||
                    u.push(
                      this.contracts[
                        this.constants.ALIASES.child_gauge_factory_old
                      ].multicallContract.get_gauge_from_lp_token(t)
                    )),
              s || u.push(n.get_pool_asset_type(t)),
              u.push(e.symbol()),
              u.push(e.name()),
              u.push(n.is_meta(t)),
              u.push(n.get_coins(t));
          }
          let p = yield this.multicallProvider.all(u);
          if (a || i || s)
            for (let e = 0; e < p.length; e++)
              a && e % 8 == 1 && p.splice(e, 0, this.constants.ZERO_ADDRESS),
                i && e % 8 == 2 && p.splice(e, 0, this.constants.ZERO_ADDRESS),
                s && e % 8 == 3 && p.splice(e, 0, -1);
          let o = p.filter((e, t) => t % 8 == 0).map((e) => e.toLowerCase()),
            y = p.filter((e, t) => t % 8 == 1).map((e) => e.toLowerCase()),
            d = p.filter((e, t) => t % 8 == 2).map((e) => e.toLowerCase()),
            m = p
              .filter((e, t) => t % 8 == 3)
              .map((e) => ({ 0: 'USD', 1: 'ETH', 2: 'BTC' })[ey(e, 0)] || 'OTHER'),
            r = p.filter((e, t) => t % 8 == 4),
            l = p.filter((e, t) => t % 8 == 5);
          return [
            o,
            y,
            d,
            m,
            r,
            l,
            p.filter((e, t) => t % 8 == 6),
            pn.call(
              this,
              p.filter((e, t) => t % 8 == 7)
            ),
          ];
        });
      }
      function pi(e, t) {
        e.forEach((e, n) => {
          this.setContract(e, t[n]);
        });
      }
      function ps(e) {
        e.filter((e) => e !== this.constants.ZERO_ADDRESS).forEach((e) => {
          this.setContract(e, 1 === this.chainId ? eM : tV);
        });
      }
      function pu(e) {
        for (let t of Array.from(new Set(u9(e)))) t in this.contracts || this.setContract(t, eu);
      }
      function pp() {
        let e = {};
        for (let t of Object.values(this.constants.POOLS_DATA))
          t.wrapped_coin_addresses.forEach((n, a) => {
            n.toLowerCase() in e || (e[n.toLowerCase()] = t.wrapped_coins[a]);
          }),
            t.underlying_coin_addresses.forEach((n, a) => {
              n.toLowerCase() in e || (e[n.toLowerCase()] = t.underlying_coins[a]);
            });
        return (e[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol), e;
      }
      function po(e, t, n) {
        return u3(this, void 0, void 0, function* () {
          let a = Array.from(new Set(u9(e))),
            i = [],
            s = {},
            u = {};
          for (let e of a) e in t ? ((s[e] = t[e]), (u[e] = n[e])) : i.push(e);
          let p = [];
          for (let e of i)
            p.push(this.contracts[e].multicallContract.symbol()),
              p.push(this.contracts[e].multicallContract.decimals());
          let o = yield this.multicallProvider.all(p),
            y = o.filter((e, t) => t % 2 == 0),
            d = o.filter((e, t) => t % 2 == 1).map((e) => Number(this.formatUnits(e, 0)));
          return (
            i.forEach((e, t) => {
              (s[e] = y[t]), (u[e] = d[t]);
            }),
            [s, u]
          );
        });
      }
      function py() {
        return u3(
          this,
          arguments,
          void 0,
          function* (e = 0, t, n = this.constants.ALIASES.factory) {
            var a, i, s;
            let [u, p] = t
              ? [[yield pe.call(this, t, n)], [t.toLowerCase()]]
              : yield pt.call(this, e, n);
            if (0 === u.length) return {};
            let o = n === this.constants.ALIASES.stable_ng_factory,
              [y, d, m, r, l, c, f, _] = yield pa.call(this, p, n),
              b = [],
              g = [],
              v = [],
              w = [],
              h = [],
              x = [],
              M = [],
              A = [],
              E = [],
              C =
                null !== (a = this.constants.STABLE_FACTORY_CONSTANTS.implementationABIDict) &&
                void 0 !== a
                  ? a
                  : {};
            for (let e = 0; e < u.length; e++)
              (o || y[e] in C) &&
                (b.push(u[e]),
                g.push(p[e]),
                v.push(y[e]),
                w.push(d[e] !== this.constants.ZERO_ADDRESS ? d[e] : m[e]),
                h.push(r[e]),
                x.push(l[e]),
                M.push(c[e]),
                A.push(f[e]),
                E.push(_[e]));
            let k = v.map((e, t) => (o ? (A[t] ? u0 : u5) : C[e]));
            pi.call(this, g, k), ps.call(this, w), pu.call(this, E), u1.call(this, !1);
            let [D, T] = yield po.call(this, E, pp.call(this), this.constants.DECIMALS),
              S = [];
            b.forEach((e, t) => {
              S.push({ id: e, address: g[t] });
            });
            let O = yield u7.call(this, n, g, S),
              F = {};
            for (let e = 0; e < b.length; e++)
              if (A[e]) {
                let t = Object.assign(
                    Object.assign(
                      Object.assign(
                        Object.assign({}, this.constants.POOLS_DATA),
                        this.constants.FACTORY_POOLS_DATA
                      ),
                      this.constants.STABLE_NG_FACTORY_POOLS_DATA
                    ),
                    F
                  ),
                  n = Object.fromEntries(
                    O.ids.map((e) => {
                      var n;
                      return [e, null === (n = t[e]) || void 0 === n ? void 0 : n.underlying_coins];
                    })
                  ),
                  a = Object.fromEntries(
                    O.ids.map((e) => {
                      var n;
                      return [
                        e,
                        null === (n = t[e]) || void 0 === n ? void 0 : n.underlying_coin_addresses,
                      ];
                    })
                  ),
                  u = Object.fromEntries(
                    O.ids.map((e) => {
                      var n;
                      return [
                        e,
                        null === (n = t[e]) || void 0 === n ? void 0 : n.underlying_decimals,
                      ];
                    })
                  ),
                  p =
                    null !== (i = this.constants.STABLE_FACTORY_CONSTANTS.basePoolIdZapDict) &&
                    void 0 !== i
                      ? i
                      : {};
                this.constants.BASE_POOLS[O.ids[e]] = this.constants.BASE_POOLS[O.ids[e]]
                  ? this.constants.BASE_POOLS[O.ids[e]] + 1
                  : 1;
                let y =
                    null !== (s = this.constants.STABLE_FACTORY_CONSTANTS.stableNgBasePoolZap) &&
                    void 0 !== s
                      ? s
                      : this.constants.ZERO_ADDRESS,
                  d = u6;
                a2(O.ids[e])
                  ? this.setContract(y, u6)
                  : ((y = p[O.ids[e]].address), (d = p[O.ids[e]].ABI)),
                  (F[b[e]] = {
                    name: aQ(M[e]),
                    full_name: M[e],
                    symbol: x[e],
                    reference_asset: h[e],
                    swap_address: g[e],
                    token_address: g[e],
                    gauge_address: w[e],
                    deposit_address: y,
                    implementation_address: v[e],
                    is_meta: !0,
                    is_factory: !0,
                    base_pool: O.ids[e],
                    underlying_coins: [D[E[e][0]], ...n[O.ids[e]]],
                    wrapped_coins: [...E[e].map((e) => D[e])],
                    underlying_coin_addresses: [E[e][0], ...a[O.ids[e]]],
                    wrapped_coin_addresses: E[e],
                    underlying_decimals: [T[E[e][0]], ...u[O.ids[e]]],
                    wrapped_decimals: [...E[e].map((e) => T[e])],
                    swap_abi: k[e],
                    gauge_abi: 1 === this.chainId ? eM : tV,
                    deposit_abi: d,
                    is_ng: o,
                  });
              } else
                F[b[e]] = {
                  name: aQ(M[e]),
                  full_name: M[e],
                  symbol: x[e],
                  reference_asset: h[e],
                  swap_address: g[e],
                  token_address: g[e],
                  gauge_address: w[e],
                  implementation_address: v[e],
                  is_plain: !0,
                  is_factory: !0,
                  underlying_coins: [...E[e].map((e) => D[e])],
                  wrapped_coins: [...E[e].map((e) => D[e])],
                  underlying_coin_addresses: E[e],
                  wrapped_coin_addresses: E[e],
                  underlying_decimals: [...E[e].map((e) => T[e])],
                  wrapped_decimals: [...E[e].map((e) => T[e])],
                  swap_abi: k[e],
                  gauge_abi: 1 === this.chainId ? eM : tV,
                  is_ng: o,
                };
            return F;
          }
        );
      }
      let pd = JSON.parse(
          '[{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"CommitNewParameters","inputs":[{"name":"deadline","type":"uint256","indexed":true},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"admin_fee","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_weth","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"},{"name":"_token","type":"address"},{"name":"_coins","type":"address[2]"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange_underlying","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"exchange_extended","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"},{"name":"use_eth","type":"bool"},{"name":"sender","type":"address"},{"name":"receiver","type":"address"},{"name":"cb","type":"bytes"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"payable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"},{"name":"use_eth","type":"bool"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"claim_admin_fees","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_admin_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_half_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"revert_new_parameters","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"lp_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_prices_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_ma_half_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_admin_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin_actions_deadline","inputs":[],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        pm = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"packed_price_scale","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false},{"name":"packed_price_scale","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[2]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"approx_fee","type":"uint256","indexed":false},{"name":"packed_price_scale","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_time","type":"uint256","indexed":false},{"name":"xcp_ma_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256[2]","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[2]"},{"name":"_math","type":"address"},{"name":"_salt","type":"bytes32"},{"name":"packed_precisions","type":"uint256"},{"name":"packed_gamma_A","type":"uint256"},{"name":"packed_fee_params","type":"uint256"},{"name":"packed_rebalancing_params","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_received","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"lp_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_fee","inputs":[{"name":"amounts","type":"uint256[2]"},{"name":"xp","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"precisions","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"fee_calc","inputs":[{"name":"xp","type":"uint256[2]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_time","type":"uint256"},{"name":"_new_xcp_ma_time","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"MATH","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_xcp","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_ma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"packed_rebalancing_params","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"packed_fee_params","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ADMIN_FEE","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"salt","inputs":[],"outputs":[{"name":"","type":"bytes32"}]}]'
        ),
        pr = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"sold_id","type":"uint256"},{"indexed":false,"name":"tokens_sold","type":"uint256"},{"indexed":false,"name":"bought_id","type":"uint256"},{"indexed":false,"name":"tokens_bought","type":"uint256"},{"indexed":false,"name":"fee","type":"uint256"},{"indexed":false,"name":"packed_price_scale","type":"uint256"}],"name":"TokenExchange","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"fee","type":"uint256"},{"indexed":false,"name":"token_supply","type":"uint256"},{"indexed":false,"name":"packed_price_scale","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amounts","type":"uint256[3]"},{"indexed":false,"name":"token_supply","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"provider","type":"address"},{"indexed":false,"name":"token_amount","type":"uint256"},{"indexed":false,"name":"coin_index","type":"uint256"},{"indexed":false,"name":"coin_amount","type":"uint256"},{"indexed":false,"name":"approx_fee","type":"uint256"},{"indexed":false,"name":"packed_price_scale","type":"uint256"}],"name":"RemoveLiquidityOne","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"deadline","type":"uint256"},{"indexed":false,"name":"mid_fee","type":"uint256"},{"indexed":false,"name":"out_fee","type":"uint256"},{"indexed":false,"name":"fee_gamma","type":"uint256"},{"indexed":false,"name":"allowed_extra_profit","type":"uint256"},{"indexed":false,"name":"adjustment_step","type":"uint256"},{"indexed":false,"name":"ma_time","type":"uint256"}],"name":"CommitNewParameters","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"mid_fee","type":"uint256"},{"indexed":false,"name":"out_fee","type":"uint256"},{"indexed":false,"name":"fee_gamma","type":"uint256"},{"indexed":false,"name":"allowed_extra_profit","type":"uint256"},{"indexed":false,"name":"adjustment_step","type":"uint256"},{"indexed":false,"name":"ma_time","type":"uint256"}],"name":"NewParameters","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"initial_A","type":"uint256"},{"indexed":false,"name":"future_A","type":"uint256"},{"indexed":false,"name":"initial_gamma","type":"uint256"},{"indexed":false,"name":"future_gamma","type":"uint256"},{"indexed":false,"name":"initial_time","type":"uint256"},{"indexed":false,"name":"future_time","type":"uint256"}],"name":"RampAgamma","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"current_A","type":"uint256"},{"indexed":false,"name":"current_gamma","type":"uint256"},{"indexed":false,"name":"time","type":"uint256"}],"name":"StopRampA","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"admin","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"ClaimAdminFee","type":"event"},{"inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[3]"},{"name":"_math","type":"address"},{"name":"_weth","type":"address"},{"name":"_salt","type":"bytes32"},{"name":"packed_precisions","type":"uint256"},{"name":"packed_A_gamma","type":"uint256"},{"name":"packed_fee_params","type":"uint256"},{"name":"packed_rebalancing_params","type":"uint256"},{"name":"packed_prices","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"name":"exchange_underlying","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"},{"name":"use_eth","type":"bool"},{"name":"sender","type":"address"},{"name":"receiver","type":"address"},{"name":"cb","type":"bytes32"}],"name":"exchange_extended","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"min_mint_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"name":"add_liquidity","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[3]"},{"name":"use_eth","type":"bool"}],"name":"remove_liquidity","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"},{"name":"use_eth","type":"bool"}],"name":"remove_liquidity_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claim_admin_fees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_spender","type":"address"},{"name":"_add_value","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_spender","type":"address"},{"name":"_sub_value","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"name":"permit","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee_receiver","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"deposit","type":"bool"}],"name":"calc_token_amount","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lp_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"k","type":"uint256"}],"name":"price_oracle","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"k","type":"uint256"}],"name":"last_prices","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"k","type":"uint256"}],"name":"price_scale","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"name":"calc_withdraw_one_coin","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"xp","type":"uint256[3]"}],"name":"calc_token_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"A","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mid_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"out_fee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowed_extra_profit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adjustment_step","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ma_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precisions","outputs":[{"name":"","type":"uint256[3]"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"xp","type":"uint256[3]"}],"name":"fee_calc","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"name":"ramp_A_gamma","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stop_ramp_A_gamma","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_time","type":"uint256"}],"name":"commit_new_parameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"apply_new_parameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revert_new_parameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"WETH20","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MATH","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"uint256"}],"name":"coins","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_prices_timestamp","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initial_A_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initial_A_gamma_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_A_gamma","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_A_gamma_time","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"uint256"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"D","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xcp_profit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xcp_profit_a","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"virtual_price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"packed_rebalancing_params","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"packed_fee_params","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ADMIN_FEE","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin_actions_deadline","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"nonces","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"salt","outputs":[{"name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}]'
        ),
        pl = JSON.parse(
          '[{"name":"Transfer","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true},{"name":"spender","type":"address","indexed":true},{"name":"value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"TokenExchange","inputs":[{"name":"buyer","type":"address","indexed":true},{"name":"sold_id","type":"uint256","indexed":false},{"name":"tokens_sold","type":"uint256","indexed":false},{"name":"bought_id","type":"uint256","indexed":false},{"name":"tokens_bought","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"packed_price_scale","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"token_supply","type":"uint256","indexed":false},{"name":"packed_price_scale","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidity","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amounts","type":"uint256[3]","indexed":false},{"name":"token_supply","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RemoveLiquidityOne","inputs":[{"name":"provider","type":"address","indexed":true},{"name":"token_amount","type":"uint256","indexed":false},{"name":"coin_index","type":"uint256","indexed":false},{"name":"coin_amount","type":"uint256","indexed":false},{"name":"approx_fee","type":"uint256","indexed":false},{"name":"packed_price_scale","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewParameters","inputs":[{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"ma_time","type":"uint256","indexed":false},{"name":"xcp_ma_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"RampAgamma","inputs":[{"name":"initial_A","type":"uint256","indexed":false},{"name":"future_A","type":"uint256","indexed":false},{"name":"initial_gamma","type":"uint256","indexed":false},{"name":"future_gamma","type":"uint256","indexed":false},{"name":"initial_time","type":"uint256","indexed":false},{"name":"future_time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"StopRampA","inputs":[{"name":"current_A","type":"uint256","indexed":false},{"name":"current_gamma","type":"uint256","indexed":false},{"name":"time","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"ClaimAdminFee","inputs":[{"name":"admin","type":"address","indexed":true},{"name":"tokens","type":"uint256[3]","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[3]"},{"name":"_math","type":"address"},{"name":"_weth","type":"address"},{"name":"_salt","type":"bytes32"},{"name":"__packed_precisions","type":"uint256"},{"name":"packed_A_gamma","type":"uint256"},{"name":"packed_fee_params","type":"uint256"},{"name":"packed_rebalancing_params","type":"uint256"},{"name":"packed_prices","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"exchange","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"exchange_received","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"},{"name":"min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"add_liquidity","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"min_mint_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity","inputs":[{"name":"_amount","type":"uint256"},{"name":"min_amounts","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"nonpayable","type":"function","name":"remove_liquidity_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"},{"name":"min_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"deposit","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dx","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"lp_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_oracle","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_oracle","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_prices","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"price_scale","inputs":[{"name":"k","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_withdraw_one_coin","inputs":[{"name":"token_amount","type":"uint256"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_fee","inputs":[{"name":"amounts","type":"uint256[3]"},{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"A","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"mid_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"out_fee","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"fee_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowed_extra_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"adjustment_step","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"precisions","inputs":[],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"view","type":"function","name":"fee_calc","inputs":[{"name":"xp","type":"uint256[3]"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A_gamma","inputs":[{"name":"future_A","type":"uint256"},{"name":"future_gamma","type":"uint256"},{"name":"future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A_gamma","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_parameters","inputs":[{"name":"_new_mid_fee","type":"uint256"},{"name":"_new_out_fee","type":"uint256"},{"name":"_new_fee_gamma","type":"uint256"},{"name":"_new_allowed_extra_profit","type":"uint256"},{"name":"_new_adjustment_step","type":"uint256"},{"name":"_new_ma_time","type":"uint256"},{"name":"_new_xcp_ma_time","type":"uint256"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"MATH","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"coins","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"last_timestamp","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_xcp","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_ma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"initial_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"future_A_gamma_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"balances","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"D","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_profit","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"xcp_profit_a","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"virtual_price","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"packed_rebalancing_params","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"packed_fee_params","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ADMIN_FEE","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"salt","inputs":[],"outputs":[{"name":"","type":"bytes32"}]}]'
        ),
        pc = (e) => {
          var t;
          for (let n of e) {
            for (let e of ((n.address = n.address.toLowerCase()),
            n.lpTokenAddress && (n.lpTokenAddress = n.lpTokenAddress.toLowerCase()),
            n.gaugeAddress && (n.gaugeAddress = n.gaugeAddress.toLowerCase()),
            n.implementationAddress &&
              (n.implementationAddress = n.implementationAddress.toLowerCase()),
            n.coins))
              e.address = e.address.toLowerCase();
            for (let e of null !== (t = n.gaugeRewards) && void 0 !== t ? t : [])
              (e.gaugeAddress = e.gaugeAddress.toLowerCase()),
                (e.tokenAddress = e.tokenAddress.toLowerCase());
          }
          return e;
        };
      function pf(e, t) {
        var n;
        return {
          'factory-crypto': pd,
          'factory-twocrypto': pm,
          'factory-tricrypto':
            t.implementationAddress ===
            (null ===
              (n = this.constants.CRYPTO_FACTORY_CONSTANTS.tricryptoDeployImplementations) ||
            void 0 === n
              ? void 0
              : n.amm_native_transfers_enabled)
              ? pr
              : pl,
        }[e];
      }
      function p_(e, t, n) {
        ['factory-crypto', 'factory-twocrypto', 'factory-tricrypto'].includes(n)
          ? e.forEach((e) => {
              this.setContract(e.address, pf.call(this, n, e));
            })
          : e.forEach((e, n) => {
              this.setContract(e.address, t[n]);
            });
      }
      function pb(e) {
        e.forEach((e) => {
          this.setContract(e.lpTokenAddress, eu);
        });
      }
      function pg(e) {
        e.forEach((e) => {
          e.gaugeAddress && this.setContract(e.gaugeAddress, 1 === this.chainId ? eM : tV);
        });
      }
      function pv(e) {
        for (let t of e)
          for (let e of t.coins) e.address in this.contracts || this.setContract(e.address, eu);
      }
      function pw(e) {
        var t, n, a, i;
        return (
          (t = this),
          (n = void 0),
          (a = void 0),
          (i = function* () {
            var t;
            let n = this.constants.NETWORK_NAME,
              a = ['factory-stable-ng', 'factory-twocrypto', 'factory-tricrypto'].includes(e),
              i = ['factory-crypto', 'factory-twocrypto', 'factory-tricrypto'].includes(e),
              s =
                null !== (t = this.constants.STABLE_FACTORY_CONSTANTS.implementationABIDict) &&
                void 0 !== t
                  ? t
                  : {},
              u = pc((yield et(n, e, this.isLiteChain)).poolData);
            i || (u = u.filter((e) => a || e.implementationAddress in s));
            let p = Object.values(this.constants.POOLS_DATA).map((e) => e.swap_address);
            u = u.filter((e) => !p.includes(e.address));
            let o = i
              ? []
              : u.map((e) => (a ? (e.isMetaPool ? u0 : u5) : s[e.implementationAddress]));
            p_.call(this, u, o, e),
              'factory-crypto' === e && pb.call(this, u),
              pg.call(this, u),
              pv.call(this, u),
              u1.call(this, i);
            let y = {};
            return (
              u.forEach((t, n) => {
                var s, p, d, m, r, l, c, f;
                let _ = this.constants.NATIVE_TOKEN,
                  b =
                    t.implementationAddress ===
                    (null ===
                      (s =
                        this.constants.CRYPTO_FACTORY_CONSTANTS.tricryptoDeployImplementations) ||
                    void 0 === s
                      ? void 0
                      : s.amm_native_transfers_enabled),
                  g = t.coins.map((e) => e.address);
                137 === this.chainId &&
                  (g = g.map((e) =>
                    '0x0000000000000000000000000000000000001010' === e ? _.wrappedAddress : e
                  ));
                let v = t.coins.map((e) => e.symbol),
                  w = t.coins.map((e) => Number(e.decimals));
                if (i) {
                  let n = t.coins.map((e) => (e.symbol === _.symbol ? _.wrappedSymbol : e.symbol)),
                    i = t.coins.map((t) =>
                      'factory-twocrypto' === e
                        ? t.symbol
                        : 'factory-tricrypto' !== e
                          ? t.symbol === _.wrappedSymbol
                            ? _.symbol
                            : t.symbol
                          : b && t.symbol === _.wrappedSymbol
                            ? _.symbol
                            : t.symbol
                    ),
                    s = g.map((t) =>
                      'factory-twocrypto' === e
                        ? t
                        : 'factory-tricrypto' !== e
                          ? t === _.wrappedAddress
                            ? _.address
                            : t
                          : b && t === _.wrappedAddress
                            ? _.address
                            : t
                    ),
                    u = i.toString() === n.toString(),
                    o =
                      null !==
                        (p = this.constants.CRYPTO_FACTORY_CONSTANTS.lpTokenBasePoolIdDict) &&
                      void 0 !== p
                        ? p
                        : {},
                    m =
                      null !== (d = this.constants.CRYPTO_FACTORY_CONSTANTS.basePoolIdZapDict) &&
                      void 0 !== d
                        ? d
                        : {},
                    r = o[g[1]];
                  if ('factory-tricrypto' !== e && 'factory-twocrypto' !== e && r) {
                    let e = Object.assign(Object.assign({}, this.constants.POOLS_DATA), y),
                      u = [...e[r].underlying_coins],
                      p = [...e[r].underlying_coin_addresses],
                      o = [...e[r].underlying_decimals],
                      d = m[r];
                    (this.constants.BASE_POOLS[r] = this.constants.BASE_POOLS[r]
                      ? this.constants.BASE_POOLS[r] + 1
                      : 1),
                      (y[t.id] = {
                        name: aQ(t.name),
                        full_name: t.name,
                        symbol: t.symbol,
                        reference_asset: 'CRYPTO',
                        swap_address: t.address,
                        token_address: t.lpTokenAddress,
                        gauge_address: t.gaugeAddress
                          ? t.gaugeAddress
                          : this.constants.ZERO_ADDRESS,
                        deposit_address: d.address,
                        is_meta: !0,
                        is_crypto: !0,
                        is_factory: !0,
                        base_pool: r,
                        underlying_coins: [i[0], ...u],
                        wrapped_coins: n,
                        underlying_coin_addresses: [s[0], ...p],
                        wrapped_coin_addresses: g,
                        underlying_decimals: [w[0], ...o],
                        wrapped_decimals: w,
                        swap_abi: pd,
                        gauge_abi: 1 === this.chainId ? eM : tV,
                        deposit_abi: d.ABI,
                        in_api: !0,
                        is_ng: a,
                      });
                  } else
                    y[t.id] = {
                      name: 'factory-tricrypto' === e ? t.name : aQ(t.name),
                      full_name: t.name,
                      symbol: t.symbol,
                      reference_asset: 'CRYPTO',
                      swap_address: t.address,
                      token_address: t.lpTokenAddress,
                      gauge_address: t.gaugeAddress ? t.gaugeAddress : this.constants.ZERO_ADDRESS,
                      is_crypto: !0,
                      is_plain: u,
                      is_factory: !0,
                      underlying_coins: i,
                      wrapped_coins: n,
                      underlying_coin_addresses: s,
                      wrapped_coin_addresses: g,
                      underlying_decimals: w,
                      wrapped_decimals: w,
                      swap_abi: pf.call(this, e, t),
                      gauge_abi: 1 === this.chainId ? eM : tV,
                      in_api: !0,
                      is_ng: a,
                    };
                } else if (t.isMetaPool) {
                  let e = Object.assign(Object.assign({}, this.constants.POOLS_DATA), y),
                    i = u8.call(this, u, t.basePoolAddress);
                  this.constants.BASE_POOLS[i] = this.constants.BASE_POOLS[i]
                    ? this.constants.BASE_POOLS[i] + 1
                    : 1;
                  let s = null === (m = e[i]) || void 0 === m ? void 0 : m.underlying_coins,
                    p = null === (r = e[i]) || void 0 === r ? void 0 : r.underlying_coin_addresses,
                    d = null === (l = e[i]) || void 0 === l ? void 0 : l.underlying_decimals,
                    _ =
                      null !== (c = this.constants.STABLE_FACTORY_CONSTANTS.basePoolIdZapDict) &&
                      void 0 !== c
                        ? c
                        : {},
                    b =
                      null !== (f = this.constants.STABLE_FACTORY_CONSTANTS.stableNgBasePoolZap) &&
                      void 0 !== f
                        ? f
                        : this.constants.ZERO_ADDRESS,
                    h = u6;
                  a2(i) ? this.setContract(b, u6) : ((b = _[i].address), (h = _[i].ABI)),
                    (y[t.id] = {
                      name: aQ(t.name),
                      full_name: t.name,
                      symbol: t.symbol,
                      reference_asset: a5(t.assetTypeName),
                      swap_address: t.address,
                      token_address: t.address,
                      gauge_address: t.gaugeAddress ? t.gaugeAddress : this.constants.ZERO_ADDRESS,
                      deposit_address: b,
                      implementation_address: t.implementationAddress,
                      is_meta: !0,
                      is_factory: !0,
                      base_pool: i,
                      underlying_coins: [v[0], ...s],
                      wrapped_coins: v,
                      underlying_coin_addresses: [g[0], ...p],
                      wrapped_coin_addresses: g,
                      underlying_decimals: [w[0], ...d],
                      wrapped_decimals: w,
                      swap_abi: o[n],
                      gauge_abi: 1 === this.chainId ? eM : tV,
                      deposit_abi: h,
                      in_api: !0,
                      is_ng: a,
                    });
                } else
                  y[t.id] = {
                    name: aQ(t.name),
                    full_name: t.name,
                    symbol: t.symbol,
                    reference_asset: a5(t.assetTypeName),
                    swap_address: t.address,
                    token_address: t.address,
                    gauge_address: t.gaugeAddress ? t.gaugeAddress : this.constants.ZERO_ADDRESS,
                    implementation_address: t.implementationAddress,
                    is_plain: !0,
                    is_factory: !0,
                    underlying_coins: v,
                    wrapped_coins: v,
                    underlying_coin_addresses: g,
                    wrapped_coin_addresses: g,
                    underlying_decimals: w,
                    wrapped_decimals: w,
                    swap_abi: o[n],
                    gauge_abi: 1 === this.chainId ? eM : tV,
                    in_api: !0,
                    is_ng: a,
                  };
              }),
              y
            );
          }),
          new (a || (a = Promise))(function (e, s) {
            function u(e) {
              try {
                o(i.next(e));
              } catch (e) {
                s(e);
              }
            }
            function p(e) {
              try {
                o(i.throw(e));
              } catch (e) {
                s(e);
              }
            }
            function o(t) {
              var n;
              t.done
                ? e(t.value)
                : ((n = t.value) instanceof a
                    ? n
                    : new a(function (e) {
                        e(n);
                      })
                  ).then(u, p);
            }
            o((i = i.apply(t, n || [])).next());
          })
        );
      }
      var ph = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let px = (e) => [].concat(...e.map((e) => (Array.isArray(e) ? px(e) : e)));
      function pM(e) {
        return ph(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.crypto_factory].contract,
            n = Number(this.formatUnits(yield t.pool_count(this.constantOptions), 0));
          for (let a = 1; a <= n; a++)
            if ((yield t.pool_list(n - a)).toLowerCase() === e.toLowerCase())
              return `factory-crypto-${n - a}`;
          throw Error('Unknown pool');
        });
      }
      function pA() {
        return ph(this, arguments, void 0, function* (e = 0) {
          let t = this.contracts[this.constants.ALIASES.crypto_factory].contract,
            n = this.contracts[this.constants.ALIASES.crypto_factory].multicallContract,
            a = Number(this.formatUnits(yield t.pool_count(this.constantOptions), 0)),
            i = [];
          for (let t = e; t < a; t++) i.push(n.pool_list(t));
          if (0 === i.length) return [[], []];
          let s = (yield this.multicallProvider.all(i)).map((t, n) => ({
              id: `factory-crypto-${e + n}`,
              address: t.toLowerCase(),
            })),
            u = Object.values(this.constants.POOLS_DATA).map((e) => e.swap_address.toLowerCase());
          return [
            (s = s.filter((e) => !u.includes(e.address))).map((e) => e.id),
            s.map((e) => e.address),
          ];
        });
      }
      function pE(e) {
        return e.map((e) =>
          e.map((e) =>
            137 === this.chainId && '0x0000000000000000000000000000000000001010' === e
              ? this.constants.NATIVE_TOKEN.wrappedAddress
              : e.toLowerCase()
          )
        );
      }
      function pC(e) {
        return ph(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.crypto_factory].multicallContract,
            n = {},
            a = [];
          for (let n of e) a.push(t.get_token(n));
          return (
            (yield this.multicallProvider.all(a)).forEach((t, a) => {
              if ('string' == typeof t) n[e[a]] = t;
              else throw Error('Lp token is not string');
            }),
            n
          );
        });
      }
      function pk(e) {
        return ph(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.crypto_factory].multicallContract,
            n =
              1 !== this.chainId &&
              this.constants.ALIASES.child_gauge_factory === this.constants.ZERO_ADDRESS,
            a = !('child_gauge_factory_old' in this.constants.ALIASES),
            i = [];
          if (1 === this.chainId)
            for (let n of e) i.push(t.get_token(n)), i.push(t.get_gauge(n)), i.push(t.get_coins(n));
          else {
            let s = yield pC.call(this, e);
            for (let u of e)
              i.push(t.get_token(u)),
                n ||
                  i.push(
                    this.contracts[
                      this.constants.ALIASES.child_gauge_factory
                    ].multicallContract.get_gauge_from_lp_token(s[u])
                  ),
                a ||
                  i.push(
                    this.contracts[
                      this.constants.ALIASES.child_gauge_factory_old
                    ].multicallContract.get_gauge_from_lp_token(s[u])
                  ),
                i.push(t.get_coins(u));
          }
          let s = yield this.multicallProvider.all(i);
          if (n || a)
            for (let e = 0; e < s.length; e++)
              n && e % 4 == 1 && s.splice(e, 0, this.constants.ZERO_ADDRESS),
                a && e % 4 == 2 && s.splice(e, 0, this.constants.ZERO_ADDRESS);
          let u = s.filter((e, t) => t % 4 == 0).map((e) => e.toLowerCase()),
            p = s.filter((e, t) => t % 4 == 1).map((e) => e.toLowerCase());
          return [
            u,
            p,
            s.filter((e, t) => t % 4 == 2).map((e) => e.toLowerCase()),
            pE.call(
              this,
              s.filter((e, t) => t % 4 == 3)
            ),
          ];
        });
      }
      function pD(e) {
        e.forEach((e) => {
          this.setContract(e, pd);
        });
      }
      function pT(e) {
        e.forEach((e) => {
          this.setContract(e, eu);
        });
      }
      function pS(e) {
        e.filter((e) => e !== this.constants.ZERO_ADDRESS).forEach((e) =>
          this.setContract(e, 1 === this.chainId ? eM : tV)
        );
      }
      function pO(e) {
        for (let t of Array.from(new Set(px(e)))) t in this.contracts || this.setContract(t, eu);
      }
      function pF(e) {
        return [
          ...e.map((e) =>
            e.map((e) =>
              e === this.constants.NATIVE_TOKEN.wrappedAddress
                ? this.constants.NATIVE_TOKEN.address
                : e
            )
          ),
        ];
      }
      function pB() {
        let e = {};
        for (let t of Object.values(this.constants.POOLS_DATA))
          t.wrapped_coin_addresses.forEach((n, a) => {
            n.toLowerCase() in e || (e[n.toLowerCase()] = t.wrapped_coins[a]);
          }),
            t.underlying_coin_addresses.forEach((n, a) => {
              n.toLowerCase() in e || (e[n.toLowerCase()] = t.underlying_coins[a]);
            });
        return (e[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol), e;
      }
      function pR(e, t, n, a) {
        return ph(this, void 0, void 0, function* () {
          let i = Array.from(new Set(px(t))),
            s = [],
            u = {},
            p = {};
          for (let e of i)
            e in n
              ? ((u[e] = n[e]), (p[e] = a[e]))
              : '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2' === e
                ? ((u[e] = 'MKR'), (p[e] = 18))
                : s.push(e);
          let o = [];
          for (let t of e)
            o.push(this.contracts[t].multicallContract.symbol()),
              o.push(this.contracts[t].multicallContract.name());
          for (let e of s)
            o.push(this.contracts[e].multicallContract.symbol()),
              o.push(this.contracts[e].multicallContract.decimals());
          let y = yield this.multicallProvider.all(o),
            d = y.slice(0, 2 * e.length),
            m = d.filter((e, t) => t % 2 == 0),
            r = d.filter((e, t) => t % 2 == 1),
            l = y.slice(2 * e.length),
            c = l.filter((e, t) => t % 2 == 0),
            f = l.filter((e, t) => t % 2 == 1).map((e) => Number(this.formatUnits(e, 0)));
          return (
            s.forEach((e, t) => {
              (u[e] = c[t]), (p[e] = f[t]);
            }),
            (u[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol),
            (p[this.constants.NATIVE_TOKEN.address] = 18),
            [m, r, u, p]
          );
        });
      }
      function pI() {
        return ph(this, arguments, void 0, function* (e = 0, t) {
          var n, a;
          let [i, s] = t ? [[yield pM.call(this, t)], [t.toLowerCase()]] : yield pA.call(this, e);
          if (0 === i.length) return {};
          let [u, p, o, y] = yield pk.call(this, s),
            d = [];
          for (let e = 0; e < p.length; e++)
            d.push(p[e] !== this.constants.ZERO_ADDRESS ? p[e] : o[e]);
          pD.call(this, s), pT.call(this, u), pS.call(this, d), pO.call(this, y), u1.call(this, !0);
          let m = pF.call(this, y),
            r = pB.call(this),
            [l, c, f, _] = yield pR.call(this, u, y, r, this.constants.DECIMALS),
            b = {};
          for (let e = 0; e < i.length; e++) {
            let t =
                null !== (n = this.constants.CRYPTO_FACTORY_CONSTANTS.lpTokenBasePoolIdDict) &&
                void 0 !== n
                  ? n
                  : {},
              p =
                null !== (a = this.constants.CRYPTO_FACTORY_CONSTANTS.basePoolIdZapDict) &&
                void 0 !== a
                  ? a
                  : {},
              o = t[y[e][1].toLowerCase()];
            if (o) {
              let t = Object.assign(Object.assign({}, this.constants.POOLS_DATA), b),
                n = [...t[o].underlying_coins],
                a = [...t[o].underlying_coin_addresses],
                r = [...t[o].underlying_decimals],
                g = p[o];
              (this.constants.BASE_POOLS[o] = this.constants.BASE_POOLS[o]
                ? this.constants.BASE_POOLS[o] + 1
                : 1),
                (b[i[e]] = {
                  name: c[e].split(': ')[1].trim(),
                  full_name: c[e],
                  symbol: l[e],
                  reference_asset: 'CRYPTO',
                  swap_address: s[e],
                  token_address: u[e],
                  gauge_address: d[e],
                  deposit_address: g.address,
                  is_meta: !0,
                  is_crypto: !0,
                  is_factory: !0,
                  base_pool: o,
                  underlying_coins: [f[m[e][0]], ...n],
                  wrapped_coins: [...y[e].map((e) => f[e])],
                  underlying_coin_addresses: [m[e][0], ...a],
                  wrapped_coin_addresses: y[e],
                  underlying_decimals: [_[m[e][0]], ...r],
                  wrapped_decimals: [...y[e].map((e) => _[e])],
                  swap_abi: pd,
                  gauge_abi: 1 === this.chainId ? eM : tV,
                  deposit_abi: g.ABI,
                });
            } else
              b[i[e]] = {
                name: c[e].split(': ')[1].trim(),
                full_name: c[e],
                symbol: l[e],
                reference_asset: 'CRYPTO',
                swap_address: s[e],
                token_address: u[e],
                gauge_address: d[e],
                is_crypto: !0,
                is_plain: m[e].toString() === y[e].toString(),
                is_factory: !0,
                underlying_coins: [...m[e].map((e) => f[e])],
                wrapped_coins: [...y[e].map((e) => f[e])],
                underlying_coin_addresses: m[e],
                wrapped_coin_addresses: y[e],
                underlying_decimals: [...m[e].map((e) => _[e])],
                wrapped_decimals: [...y[e].map((e) => _[e])],
                swap_abi: pd,
                gauge_abi: 1 === this.chainId ? eM : tV,
              };
          }
          return b;
        });
      }
      var pL = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let pN = (e) => [].concat(...e.map((e) => (Array.isArray(e) ? pN(e) : e)));
      function pP(e) {
        return pL(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.tricrypto_factory].contract,
            n = Number(this.formatUnits(yield t.pool_count(this.constantOptions), 0));
          for (let a = 1; a <= n; a++)
            if ((yield t.pool_list(n - a)).toLowerCase() === e.toLowerCase())
              return `factory-tricrypto-${n - a}`;
          throw Error('Unknown pool');
        });
      }
      function pq() {
        return pL(this, arguments, void 0, function* (e = 0) {
          let t = this.contracts[this.constants.ALIASES.tricrypto_factory].contract,
            n = this.contracts[this.constants.ALIASES.tricrypto_factory].multicallContract,
            a = Number(this.formatUnits(yield t.pool_count(this.constantOptions), 0)),
            i = [];
          for (let t = e; t < a; t++) i.push(n.pool_list(t));
          if (0 === i.length) return [[], []];
          let s = (yield this.multicallProvider.all(i)).map((t, n) => ({
              id: `factory-tricrypto-${e + n}`,
              address: t.toLowerCase(),
            })),
            u = Object.values(this.constants.POOLS_DATA).map((e) => e.swap_address.toLowerCase());
          return [
            (s = s.filter((e) => !u.includes(e.address))).map((e) => e.id),
            s.map((e) => e.address),
          ];
        });
      }
      function pj(e) {
        return e.map((e) =>
          e.map((e) =>
            137 === this.chainId && '0x0000000000000000000000000000000000001010' === e
              ? this.constants.NATIVE_TOKEN.wrappedAddress
              : e.toLowerCase()
          )
        );
      }
      function pU(e) {
        return pL(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.tricrypto_factory].multicallContract,
            n =
              1 !== this.chainId &&
              this.constants.ALIASES.child_gauge_factory === this.constants.ZERO_ADDRESS,
            a = !('child_gauge_factory_old' in this.constants.ALIASES),
            i = [];
          if (1 === this.chainId) for (let n of e) i.push(t.get_gauge(n)), i.push(t.get_coins(n));
          else
            for (let s of e)
              n ||
                i.push(
                  this.contracts[
                    this.constants.ALIASES.child_gauge_factory
                  ].multicallContract.get_gauge_from_lp_token(s)
                ),
                a ||
                  i.push(
                    this.contracts[
                      this.constants.ALIASES.child_gauge_factory_old
                    ].multicallContract.get_gauge_from_lp_token(s)
                  ),
                i.push(t.get_coins(s)),
                i.push(t.get_implementation_address(s));
          let s = yield this.multicallProvider.all(i);
          if (n || a || 1 === this.chainId)
            for (let e = 0; e < s.length; e++)
              n && e % 4 == 0 && s.splice(e, 0, this.constants.ZERO_ADDRESS),
                a && e % 4 == 1 && s.splice(e, 0, this.constants.ZERO_ADDRESS),
                1 === this.chainId && e % 4 == 3 && s.splice(e, 0, this.constants.ZERO_ADDRESS);
          let u = s.filter((e, t) => t % 4 == 0).map((e) => e.toLowerCase()),
            p = s.filter((e, t) => t % 4 == 1).map((e) => e.toLowerCase());
          return [
            u,
            p,
            pj.call(
              this,
              s.filter((e, t) => t % 4 == 2)
            ),
            s.filter((e, t) => t % 4 == 3).map((e) => e.toLowerCase()),
          ];
        });
      }
      function p$(e) {
        e.filter((e) => e !== this.constants.ZERO_ADDRESS).forEach((e) => {
          this.setContract(e, 1 === this.chainId ? eM : tV);
        });
      }
      function pG(e) {
        for (let t of Array.from(new Set(pN(e)))) t in this.contracts || this.setContract(t, eu);
      }
      function pW() {
        let e = {};
        for (let t of Object.values(this.constants.POOLS_DATA))
          t.wrapped_coin_addresses.forEach((n, a) => {
            n.toLowerCase() in e || (e[n.toLowerCase()] = t.wrapped_coins[a]);
          }),
            t.underlying_coin_addresses.forEach((n, a) => {
              n.toLowerCase() in e || (e[n.toLowerCase()] = t.underlying_coins[a]);
            });
        return (e[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol), e;
      }
      function pY(e, t, n, a) {
        return pL(this, void 0, void 0, function* () {
          let i = Array.from(new Set(pN(t))),
            s = [],
            u = {},
            p = {};
          for (let e of i)
            e in n
              ? ((u[e] = n[e]), (p[e] = a[e]))
              : '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2' === e
                ? (u[e] = 'MKR')
                : s.push(e);
          let o = [];
          for (let t of e)
            o.push(this.contracts[t].multicallContract.symbol()),
              o.push(this.contracts[t].multicallContract.name());
          for (let e of s)
            o.push(this.contracts[e].multicallContract.symbol()),
              o.push(this.contracts[e].multicallContract.decimals());
          let y = yield this.multicallProvider.all(o),
            d = y.slice(0, 2 * e.length),
            m = d.filter((e, t) => t % 2 == 0),
            r = d.filter((e, t) => t % 2 == 1),
            l = y.slice(2 * e.length),
            c = l.filter((e, t) => t % 2 == 0),
            f = l.filter((e, t) => t % 2 == 1).map((e) => Number(this.formatUnits(e, 0)));
          return (
            s.forEach((e, t) => {
              (u[e] = c[t]), (p[e] = f[t]);
            }),
            (u[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol),
            (p[this.constants.NATIVE_TOKEN.address] = 18),
            [m, r, u, p]
          );
        });
      }
      function pZ() {
        return pL(this, arguments, void 0, function* (e = 0, t) {
          var n;
          let [a, i] = t ? [[yield pP.call(this, t)], [t.toLowerCase()]] : yield pq.call(this, e);
          if (0 === a.length) return {};
          let [s, u, p, o] = yield pU.call(this, i),
            y = [];
          for (let e = 0; e < s.length; e++)
            y.push(s[e] !== this.constants.ZERO_ADDRESS ? s[e] : u[e]);
          i.forEach((e, t) => {
            var n;
            let a =
              1 === this.chainId ||
              o[t] ===
                (null ===
                  (n = this.constants.CRYPTO_FACTORY_CONSTANTS.tricryptoDeployImplementations) ||
                void 0 === n
                  ? void 0
                  : n.amm_native_transfers_enabled);
            this.setContract(e, a ? pr : pl);
          }),
            p$.call(this, y),
            pG.call(this, p);
          let d = pW.call(this),
            [m, r, l, c] = yield pY.call(this, i, p, d, this.constants.DECIMALS),
            f = {},
            _ = this.constants.NATIVE_TOKEN;
          for (let e = 0; e < a.length; e++) {
            let t =
                1 === this.chainId ||
                o[e] ===
                  (null ===
                    (n = this.constants.CRYPTO_FACTORY_CONSTANTS.tricryptoDeployImplementations) ||
                  void 0 === n
                    ? void 0
                    : n.amm_native_transfers_enabled),
              s = p[e].map((e) => (t && e === _.wrappedAddress ? _.address : e));
            f[a[e]] = {
              name: r[e],
              full_name: r[e],
              symbol: m[e],
              reference_asset: 'CRYPTO',
              swap_address: i[e],
              token_address: i[e],
              gauge_address: y[e],
              is_crypto: !0,
              is_plain: s.toString() === p[e].toString(),
              is_factory: !0,
              underlying_coins: [...s.map((e) => l[e])],
              wrapped_coins: [...p[e].map((e) => l[e])],
              underlying_coin_addresses: s,
              wrapped_coin_addresses: p[e],
              underlying_decimals: [...s.map((e) => c[e])],
              wrapped_decimals: [...p[e].map((e) => c[e])],
              swap_abi: t ? pr : pl,
              gauge_abi: 1 === this.chainId ? eM : tV,
              is_ng: !0,
            };
          }
          return f;
        });
      }
      let pV = JSON.parse(
          '[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x06fdde03"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x095ea7b3"},{"constant":false,"inputs":[{"name":"repayAmount","type":"uint256"}],"name":"repayBorrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x0e752702"},{"constant":true,"inputs":[],"name":"reserveFactorMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x173b9904"},{"constant":false,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x17bfdfbc"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x18160ddd"},{"constant":true,"inputs":[],"name":"exchangeRateStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x182df0f5"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x23b872dd"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"repayAmount","type":"uint256"}],"name":"repayBorrowBehalf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x2608f818"},{"constant":true,"inputs":[],"name":"pendingAdmin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x26782247"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x313ce567"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOfUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x3af9e669"},{"constant":true,"inputs":[],"name":"getCash","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x3b1d21a2"},{"constant":false,"inputs":[{"name":"newComptroller","type":"address"}],"name":"_setComptroller","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x4576b5db"},{"constant":true,"inputs":[],"name":"totalBorrows","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x47bd3718"},{"constant":true,"inputs":[],"name":"comptroller","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x5fe3b567"},{"constant":false,"inputs":[{"name":"reduceAmount","type":"uint256"}],"name":"_reduceReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x601a0bf1"},{"constant":true,"inputs":[],"name":"initialExchangeRateMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x675d972c"},{"constant":true,"inputs":[],"name":"accrualBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x6c540baf"},{"constant":true,"inputs":[],"name":"underlying","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x6f307dc3"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x70a08231"},{"constant":false,"inputs":[],"name":"totalBorrowsCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x73acee98"},{"constant":false,"inputs":[{"name":"redeemAmount","type":"uint256"}],"name":"redeemUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x852a12e3"},{"constant":true,"inputs":[],"name":"totalReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x8f840ddd"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95d89b41"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95dd9193"},{"constant":false,"inputs":[{"name":"mintAmount","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa0712d68"},{"constant":false,"inputs":[],"name":"accrueInterest","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa6afed95"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa9059cbb"},{"constant":true,"inputs":[],"name":"borrowIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xaa5af0fd"},{"constant":true,"inputs":[],"name":"supplyRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xae9d70b0"},{"constant":false,"inputs":[{"name":"liquidator","type":"address"},{"name":"borrower","type":"address"},{"name":"seizeTokens","type":"uint256"}],"name":"seize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb2a02ff1"},{"constant":false,"inputs":[{"name":"newPendingAdmin","type":"address"}],"name":"_setPendingAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb71d1a0c"},{"constant":false,"inputs":[],"name":"exchangeRateCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xbd6d894d"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getAccountSnapshot","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xc37f68e2"},{"constant":false,"inputs":[{"name":"borrowAmount","type":"uint256"}],"name":"borrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xc5ebeaec"},{"constant":false,"inputs":[{"name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xdb006a75"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xdd62ed3e"},{"constant":false,"inputs":[],"name":"_acceptAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xe9c714f2"},{"constant":false,"inputs":[{"name":"newInterestRateModel","type":"address"}],"name":"_setInterestRateModel","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf2b3abbd"},{"constant":true,"inputs":[],"name":"interestRateModel","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf3fdb15a"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"repayAmount","type":"uint256"},{"name":"cTokenCollateral","type":"address"}],"name":"liquidateBorrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf5e3c462"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf851a440"},{"constant":true,"inputs":[],"name":"borrowRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf8f9da28"},{"constant":false,"inputs":[{"name":"newReserveFactorMantissa","type":"uint256"}],"name":"_setReserveFactor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xfca7820b"},{"constant":true,"inputs":[],"name":"isCToken","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xfe9c44ae"},{"inputs":[{"name":"underlying_","type":"address"},{"name":"comptroller_","type":"address"},{"name":"interestRateModel_","type":"address"},{"name":"initialExchangeRateMantissa_","type":"uint256"},{"name":"name_","type":"string"},{"name":"symbol_","type":"string"},{"name":"decimals_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor","signature":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"interestAccumulated","type":"uint256"},{"indexed":false,"name":"borrowIndex","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"AccrueInterest","type":"event","signature":"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minter","type":"address"},{"indexed":false,"name":"mintAmount","type":"uint256"},{"indexed":false,"name":"mintTokens","type":"uint256"}],"name":"Mint","type":"event","signature":"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f"},{"anonymous":false,"inputs":[{"indexed":false,"name":"redeemer","type":"address"},{"indexed":false,"name":"redeemAmount","type":"uint256"},{"indexed":false,"name":"redeemTokens","type":"uint256"}],"name":"Redeem","type":"event","signature":"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929"},{"anonymous":false,"inputs":[{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"borrowAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"Borrow","type":"event","signature":"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80"},{"anonymous":false,"inputs":[{"indexed":false,"name":"payer","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"RepayBorrow","type":"event","signature":"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1"},{"anonymous":false,"inputs":[{"indexed":false,"name":"liquidator","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"cTokenCollateral","type":"address"},{"indexed":false,"name":"seizeTokens","type":"uint256"}],"name":"LiquidateBorrow","type":"event","signature":"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldPendingAdmin","type":"address"},{"indexed":false,"name":"newPendingAdmin","type":"address"}],"name":"NewPendingAdmin","type":"event","signature":"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldAdmin","type":"address"},{"indexed":false,"name":"newAdmin","type":"address"}],"name":"NewAdmin","type":"event","signature":"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldComptroller","type":"address"},{"indexed":false,"name":"newComptroller","type":"address"}],"name":"NewComptroller","type":"event","signature":"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldInterestRateModel","type":"address"},{"indexed":false,"name":"newInterestRateModel","type":"address"}],"name":"NewMarketInterestRateModel","type":"event","signature":"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldReserveFactorMantissa","type":"uint256"},{"indexed":false,"name":"newReserveFactorMantissa","type":"uint256"}],"name":"NewReserveFactor","type":"event","signature":"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460"},{"anonymous":false,"inputs":[{"indexed":false,"name":"admin","type":"address"},{"indexed":false,"name":"reduceAmount","type":"uint256"},{"indexed":false,"name":"newTotalReserves","type":"uint256"}],"name":"ReservesReduced","type":"event","signature":"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e"},{"anonymous":false,"inputs":[{"indexed":false,"name":"error","type":"uint256"},{"indexed":false,"name":"info","type":"uint256"},{"indexed":false,"name":"detail","type":"uint256"}],"name":"Failure","type":"event","signature":"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}]'
        ),
        pJ = JSON.parse(
          '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"constant":true,"inputs":[],"name":"aave","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"aaveToken","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"approveToken","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"apr","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balanceAave","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balanceCompound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balanceCompoundInToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balanceDydx","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balanceFulcrum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"balanceFulcrumInToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"calcPoolValueInToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"compound","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"dToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dydx","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"fulcrum","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAave","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAaveCore","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getPricePerFullShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"provider","outputs":[{"internalType":"enum yUSDT.Lender","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"rebalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"recommend","outputs":[{"internalType":"enum yUSDT.Lender","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_new_APR","type":"address"}],"name":"set_new_APR","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_new_COMPOUND","type":"address"}],"name":"set_new_COMPOUND","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_new_DTOKEN","type":"uint256"}],"name":"set_new_DTOKEN","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_new_FULCRUM","type":"address"}],"name":"set_new_FULCRUM","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"supplyAave","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"supplyCompound","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"supplyDydx","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"supplyFulcrum","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_shares","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
        ),
        pH = JSON.parse(
          '[{"name":"DeployedGauge","inputs":[{"name":"_implementation","type":"address","indexed":true},{"name":"_lp_token","type":"address","indexed":true},{"name":"_deployer","type":"address","indexed":true},{"name":"_salt","type":"bytes32","indexed":false},{"name":"_gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"Minted","inputs":[{"name":"_user","type":"address","indexed":true},{"name":"_gauge","type":"address","indexed":true},{"name":"_new_total","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateImplementation","inputs":[{"name":"_old_implementation","type":"address","indexed":false},{"name":"_new_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateVotingEscrow","inputs":[{"name":"_old_voting_escrow","type":"address","indexed":false},{"name":"_new_voting_escrow","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateCallProxy","inputs":[{"name":"_old_call_proxy","type":"address","indexed":false},{"name":"_new_call_proxy","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateMirrored","inputs":[{"name":"_gauge","type":"address","indexed":true},{"name":"_mirrored","type":"bool","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_call_proxy","type":"address"},{"name":"_crv","type":"address"},{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"mint","inputs":[{"name":"_gauge","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"mint_many","inputs":[{"name":"_gauges","type":"address[32]"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_lp_token","type":"address"},{"name":"_salt","type":"bytes32"},{"name":"_manager","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"set_voting_escrow","inputs":[{"name":"_voting_escrow","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_implementation","inputs":[{"name":"_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_mirrored","inputs":[{"name":"_gauge","type":"address"},{"name":"_mirrored","type":"bool"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_call_proxy","inputs":[{"name":"_new_call_proxy","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_future_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"is_valid_gauge","inputs":[{"name":"_gauge","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"is_mirrored","inputs":[{"name":"_gauge","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"last_request","inputs":[{"name":"_gauge","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"voting_escrow","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"call_proxy","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"minted","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_gauge_from_lp_token","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_gauge_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]}]'
        ),
        pK = JSON.parse(
          '[{"name":"Minted","inputs":[{"type":"address","name":"recipient","indexed":true},{"type":"address","name":"gauge","indexed":false},{"type":"uint256","name":"minted","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_token"},{"type":"address","name":"_controller"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"mint","outputs":[],"inputs":[{"type":"address","name":"gauge_addr"}],"stateMutability":"nonpayable","type":"function","gas":100038},{"name":"mint_many","outputs":[],"inputs":[{"type":"address[8]","name":"gauge_addrs"}],"stateMutability":"nonpayable","type":"function","gas":408502},{"name":"mint_for","outputs":[],"inputs":[{"type":"address","name":"gauge_addr"},{"type":"address","name":"_for"}],"stateMutability":"nonpayable","type":"function","gas":101219},{"name":"toggle_approve_mint","outputs":[],"inputs":[{"type":"address","name":"minting_user"}],"stateMutability":"nonpayable","type":"function","gas":36726},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":1301},{"name":"controller","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":1331},{"name":"minted","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":1669},{"name":"allowed_to_mint_for","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":1699}]'
        ),
        pz = JSON.parse(
          '[{"name":"CommitOwnership","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"Deposit","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false},{"type":"uint256","name":"locktime","indexed":true},{"type":"int128","name":"type","indexed":false},{"type":"uint256","name":"ts","indexed":false}],"anonymous":false,"type":"event"},{"name":"Withdraw","inputs":[{"type":"address","name":"provider","indexed":true},{"type":"uint256","name":"value","indexed":false},{"type":"uint256","name":"ts","indexed":false}],"anonymous":false,"type":"event"},{"name":"Supply","inputs":[{"type":"uint256","name":"prevSupply","indexed":false},{"type":"uint256","name":"supply","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"token_addr"},{"type":"string","name":"_name"},{"type":"string","name":"_symbol"},{"type":"string","name":"_version"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"37597"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38497"},{"name":"commit_smart_wallet_checker","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"36307"},{"name":"apply_smart_wallet_checker","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37095"},{"name":"get_last_user_slope","outputs":[{"type":"int128","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function","gas":"2569"},{"name":"user_point_history__ts","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_addr"},{"type":"uint256","name":"_idx"}],"stateMutability":"view","type":"function","gas":"1672"},{"name":"locked__end","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"view","type":"function","gas":"1593"},{"name":"checkpoint","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"37052342"},{"name":"deposit_for","outputs":[],"inputs":[{"type":"address","name":"_addr"},{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"74279891"},{"name":"create_lock","outputs":[],"inputs":[{"type":"uint256","name":"_value"},{"type":"uint256","name":"_unlock_time"}],"stateMutability":"nonpayable","type":"function","gas":"7428146"},{"name":"increase_amount","outputs":[],"inputs":[{"type":"uint256","name":"_value"}],"stateMutability":"nonpayable","type":"function","gas":"259133"},{"name":"increase_unlock_time","outputs":[],"inputs":[{"type":"uint256","name":"_unlock_time"}],"stateMutability":"nonpayable","type":"function","gas":"270000"},{"name":"withdraw","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"372233"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function"},{"name":"balanceOf","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"},{"type":"uint256","name":"_t"}],"stateMutability":"view","type":"function"},{"name":"balanceOfAt","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"},{"type":"uint256","name":"_block"}],"stateMutability":"view","type":"function","gas":"514333"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function"},{"name":"totalSupply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"t"}],"stateMutability":"view","type":"function"},{"name":"totalSupplyAt","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"_block"}],"stateMutability":"view","type":"function","gas":"812560"},{"name":"changeController","outputs":[],"inputs":[{"type":"address","name":"_newController"}],"stateMutability":"nonpayable","type":"function","gas":"36907"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1841"},{"name":"supply","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1871"},{"name":"locked","outputs":[{"type":"int128","name":"amount"},{"type":"uint256","name":"end"}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"3359"},{"name":"epoch","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"},{"name":"point_history","outputs":[{"type":"int128","name":"bias"},{"type":"int128","name":"slope"},{"type":"uint256","name":"ts"},{"type":"uint256","name":"blk"}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"5550"},{"name":"user_point_history","outputs":[{"type":"int128","name":"bias"},{"type":"int128","name":"slope"},{"type":"uint256","name":"ts"},{"type":"uint256","name":"blk"}],"inputs":[{"type":"address","name":"arg0"},{"type":"uint256","name":"arg1"}],"stateMutability":"view","type":"function","gas":"6079"},{"name":"user_point_epoch","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2175"},{"name":"slope_changes","outputs":[{"type":"int128","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2166"},{"name":"controller","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2081"},{"name":"transfersEnabled","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2111"},{"name":"name","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"8543"},{"name":"symbol","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"7596"},{"name":"version","outputs":[{"type":"string","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"7626"},{"name":"decimals","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2231"},{"name":"future_smart_wallet_checker","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2261"},{"name":"smart_wallet_checker","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2291"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"future_admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2351"}]'
        ),
        pX = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_mpc","type":"address"},{"internalType":"uint128","name":"_premium","type":"uint128"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"_fallback","type":"address"},{"indexed":true,"internalType":"uint256","name":"toChainID","type":"uint256"}],"name":"LogAnyCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"bytes","name":"result","type":"bytes"},{"indexed":false,"internalType":"address","name":"_fallback","type":"address"},{"indexed":true,"internalType":"uint256","name":"fromChainID","type":"uint256"}],"name":"LogAnyExec","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"flag","type":"bool"}],"name":"SetBlacklist","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"toChainID","type":"uint256"},{"indexed":false,"internalType":"bool","name":"flag","type":"bool"}],"name":"SetWhitelist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldMPC","type":"address"},{"indexed":false,"internalType":"address","name":"newMPC","type":"address"},{"indexed":false,"internalType":"uint256","name":"effectiveTime","type":"uint256"}],"name":"TransferMPC","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPremium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPremium","type":"uint256"}],"name":"UpdatePremium","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawl","type":"event"},{"inputs":[],"name":"accruedFees","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_fallback","type":"address"},{"internalType":"uint256","name":"_toChainID","type":"uint256"}],"name":"anyCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_fallback","type":"address"},{"internalType":"uint256","name":"_fromChainID","type":"uint256"}],"name":"anyExec","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"blacklist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newMPC","type":"address"}],"name":"changeMPC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"context","outputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"fromChainID","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"effectiveTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"executionBudget","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mpc","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingMPC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"premium","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"bool","name":"_flag","type":"bool"}],"name":"setBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"_premium","type":"uint128"}],"name":"setPremium","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_toChainID","type":"uint256"},{"internalType":"bool","name":"_flag","type":"bool"}],"name":"setWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"whitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAccruedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}]'
        ),
        pQ = JSON.parse(
          '[{"inputs":[{"internalType":"address","name":"_anycall","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_eth_block_number","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"_eth_blockhash","type":"bytes32"}],"name":"SetBlockhash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"bytes32","name":"blockhash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"proofhash","type":"bytes32"}],"name":"SubmittedState","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_old_owner","type":"address"},{"indexed":false,"internalType":"address","name":"_new_owner","type":"address"}],"name":"TransferOwnership","type":"event"},{"inputs":[],"name":"ANYCALL","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accept_transfer_ownership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_future_owner","type":"address"}],"name":"commit_transfer_ownership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"epoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"future_owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eth_block_number","type":"uint256"}],"name":"get_eth_blockhash","outputs":[{"internalType":"bytes32","name":"eth_blockhash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_eth_block_number","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"locked","outputs":[{"internalType":"int128","name":"amount","type":"int128"},{"internalType":"uint256","name":"end","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"point_history","outputs":[{"internalType":"int128","name":"bias","type":"int128"},{"internalType":"int128","name":"slope","type":"int128"},{"internalType":"uint256","name":"ts","type":"uint256"},{"internalType":"uint256","name":"blk","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eth_block_number","type":"uint256"},{"internalType":"bytes32","name":"__eth_blockhash","type":"bytes32"}],"name":"set_eth_blockhash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"slope_changes","outputs":[{"internalType":"int128","name":"","type":"int128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"bytes","name":"_block_header_rlp","type":"bytes"},{"internalType":"bytes","name":"_proof_rlp","type":"bytes"}],"name":"submit_state","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"submitted_hashes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"user_point_epoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"user_point_history","outputs":[{"internalType":"int128","name":"bias","type":"int128"},{"internalType":"int128","name":"slope","type":"int128"},{"internalType":"uint256","name":"ts","type":"uint256"},{"internalType":"uint256","name":"blk","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        p2 = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"function","name":"send_blockhash","inputs":[{"name":"_block_number","type":"uint256"},{"name":"_chain_id","type":"uint256"}],"outputs":[],"gas":"54147"},{"stateMutability":"view","type":"function","name":"block_number_bounds","inputs":[],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"740"},{"stateMutability":"view","type":"function","name":"generate_eth_get_proof_params","inputs":[{"name":"_user","type":"address"}],"outputs":[{"name":"","type":"address"},{"name":"","type":"uint256[20]"},{"name":"","type":"uint256"}],"gas":"21089"},{"stateMutability":"view","type":"function","name":"get_last_block_number_sent","inputs":[{"name":"_chain_id","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2747"}]'
        ),
        p5 = JSON.parse(
          '[{"name":"CommitAdmin","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyAdmin","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ToggleAllowCheckpointToken","inputs":[{"type":"bool","name":"toggle_flag","indexed":false}],"anonymous":false,"type":"event"},{"name":"CheckpointToken","inputs":[{"type":"uint256","name":"time","indexed":false},{"type":"uint256","name":"tokens","indexed":false}],"anonymous":false,"type":"event"},{"name":"Claimed","inputs":[{"type":"address","name":"recipient","indexed":true},{"type":"uint256","name":"amount","indexed":false},{"type":"uint256","name":"claim_epoch","indexed":false},{"type":"uint256","name":"max_epoch","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_voting_escrow"},{"type":"uint256","name":"_start_time"},{"type":"address","name":"_token"},{"type":"address","name":"_admin"},{"type":"address","name":"_emergency_return"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"checkpoint_token","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"820723"},{"name":"ve_for_at","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_user"},{"type":"uint256","name":"_timestamp"}],"stateMutability":"view","type":"function","gas":"249417"},{"name":"checkpoint_total_supply","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"10592405"},{"name":"claim","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"nonpayable","type":"function"},{"name":"claim_many","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address[20]","name":"_receivers"}],"stateMutability":"nonpayable","type":"function","gas":"26281905"},{"name":"burn","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_coin"}],"stateMutability":"nonpayable","type":"function","gas":"823450"},{"name":"commit_admin","outputs":[],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"nonpayable","type":"function","gas":"37898"},{"name":"apply_admin","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"39534"},{"name":"toggle_allow_checkpoint_token","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38673"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"39587"},{"name":"recover_balance","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_coin"}],"stateMutability":"nonpayable","type":"function","gas":"7778"},{"name":"start_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"time_cursor","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"},{"name":"time_cursor_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1816"},{"name":"user_epoch_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1846"},{"name":"last_token_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1661"},{"name":"tokens_per_week","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1800"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1721"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1751"},{"name":"total_received","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1781"},{"name":"token_last_balance","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1811"},{"name":"ve_supply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1950"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1871"},{"name":"future_admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1901"},{"name":"can_checkpoint_token","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"},{"name":"emergency_return","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1961"},{"name":"is_killed","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1991"}]'
        ),
        p0 = JSON.parse(
          '[{"name":"CommitAdmin","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyAdmin","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ToggleAllowCheckpointToken","inputs":[{"type":"bool","name":"toggle_flag","indexed":false}],"anonymous":false,"type":"event"},{"name":"CheckpointToken","inputs":[{"type":"uint256","name":"time","indexed":false},{"type":"uint256","name":"tokens","indexed":false}],"anonymous":false,"type":"event"},{"name":"Claimed","inputs":[{"type":"address","name":"recipient","indexed":true},{"type":"uint256","name":"amount","indexed":false},{"type":"uint256","name":"claim_epoch","indexed":false},{"type":"uint256","name":"max_epoch","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_voting_escrow"},{"type":"uint256","name":"_start_time"},{"type":"address","name":"_token"},{"type":"address","name":"_admin"},{"type":"address","name":"_emergency_return"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"checkpoint_token","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"820723"},{"name":"ve_for_at","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_user"},{"type":"uint256","name":"_timestamp"}],"stateMutability":"view","type":"function","gas":"249417"},{"name":"checkpoint_total_supply","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"10592405"},{"name":"claim","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"nonpayable","type":"function"},{"name":"claim_many","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address[20]","name":"_receivers"}],"stateMutability":"nonpayable","type":"function","gas":"26281905"},{"name":"burn","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_coin"}],"stateMutability":"nonpayable","type":"function","gas":"823450"},{"name":"commit_admin","outputs":[],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"nonpayable","type":"function","gas":"37898"},{"name":"apply_admin","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"39534"},{"name":"toggle_allow_checkpoint_token","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38673"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"39587"},{"name":"recover_balance","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_coin"}],"stateMutability":"nonpayable","type":"function","gas":"7778"},{"name":"start_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"time_cursor","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"},{"name":"time_cursor_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1816"},{"name":"user_epoch_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1846"},{"name":"last_token_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1661"},{"name":"tokens_per_week","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1800"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1721"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1751"},{"name":"total_received","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1781"},{"name":"token_last_balance","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1811"},{"name":"ve_supply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1950"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1871"},{"name":"future_admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1901"},{"name":"can_checkpoint_token","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"},{"name":"emergency_return","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1961"},{"name":"is_killed","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1991"}]'
        ),
        p6 = JSON.parse(
          '[{"name":"CommitOwnership","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyOwnership","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"AddType","inputs":[{"type":"string","name":"name","indexed":false},{"type":"int128","name":"type_id","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewTypeWeight","inputs":[{"type":"int128","name":"type_id","indexed":false},{"type":"uint256","name":"time","indexed":false},{"type":"uint256","name":"weight","indexed":false},{"type":"uint256","name":"total_weight","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewGaugeWeight","inputs":[{"type":"address","name":"gauge_address","indexed":false},{"type":"uint256","name":"time","indexed":false},{"type":"uint256","name":"weight","indexed":false},{"type":"uint256","name":"total_weight","indexed":false}],"anonymous":false,"type":"event"},{"name":"VoteForGauge","inputs":[{"type":"uint256","name":"time","indexed":false},{"type":"address","name":"user","indexed":false},{"type":"address","name":"gauge_addr","indexed":false},{"type":"uint256","name":"weight","indexed":false}],"anonymous":false,"type":"event"},{"name":"NewGauge","inputs":[{"type":"address","name":"addr","indexed":false},{"type":"int128","name":"gauge_type","indexed":false},{"type":"uint256","name":"weight","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_token"},{"type":"address","name":"_voting_escrow"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"commit_transfer_ownership","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"37597"},{"name":"apply_transfer_ownership","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38497"},{"name":"gauge_types","outputs":[{"type":"int128","name":""}],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"view","type":"function","gas":"1625"},{"name":"add_gauge","outputs":[],"inputs":[{"type":"address","name":"addr"},{"type":"int128","name":"gauge_type"},{"type":"uint256","name":"weight"}],"stateMutability":"nonpayable","type":"function"},{"name":"checkpoint","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"18033784416"},{"name":"checkpoint_gauge","outputs":[],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function","gas":"18087678795"},{"name":"gauge_relative_weight_write","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"nonpayable","type":"function"},{"name":"gauge_relative_weight_write","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"},{"type":"uint256","name":"time"}],"stateMutability":"nonpayable","type":"function"},{"name":"gauge_relative_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function"},{"name":"gauge_relative_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"},{"type":"uint256","name":"time"}],"stateMutability":"view","type":"function"},{"name":"add_type","outputs":[],"inputs":[{"type":"string","name":"_name"},{"type":"uint256","name":"weight"}],"stateMutability":"nonpayable","type":"function"},{"name":"change_type_weight","outputs":[],"inputs":[{"type":"int128","name":"type_id"},{"type":"uint256","name":"weight"}],"stateMutability":"nonpayable","type":"function","gas":"36246310050"},{"name":"change_gauge_weight","outputs":[],"inputs":[{"type":"address","name":"addr"},{"type":"uint256","name":"weight"}],"stateMutability":"nonpayable","type":"function","gas":"36354170809"},{"name":"vote_for_gauge_weights","outputs":[],"inputs":[{"type":"address","name":"_gauge_addr"},{"type":"uint256","name":"_user_weight"}],"stateMutability":"nonpayable","type":"function","gas":"18142052127"},{"name":"get_gauge_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"addr"}],"stateMutability":"view","type":"function","gas":"2974"},{"name":"get_type_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"type_id"}],"stateMutability":"view","type":"function","gas":"2977"},{"name":"get_total_weight","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2693"},{"name":"get_weights_sum_per_type","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"type_id"}],"stateMutability":"view","type":"function","gas":"3109"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1841"},{"name":"future_admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1871"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1901"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"},{"name":"n_gauge_types","outputs":[{"type":"int128","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1961"},{"name":"n_gauges","outputs":[{"type":"int128","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1991"},{"name":"gauge_type_names","outputs":[{"type":"string","name":""}],"inputs":[{"type":"int128","name":"arg0"}],"stateMutability":"view","type":"function","gas":"8628"},{"name":"gauges","outputs":[{"type":"address","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2160"},{"name":"vote_user_slopes","outputs":[{"type":"uint256","name":"slope"},{"type":"uint256","name":"power"},{"type":"uint256","name":"end"}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"5020"},{"name":"vote_user_power","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2265"},{"name":"last_user_vote","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"},{"type":"address","name":"arg1"}],"stateMutability":"view","type":"function","gas":"2449"},{"name":"points_weight","outputs":[{"type":"uint256","name":"bias"},{"type":"uint256","name":"slope"}],"inputs":[{"type":"address","name":"arg0"},{"type":"uint256","name":"arg1"}],"stateMutability":"view","type":"function","gas":"3859"},{"name":"time_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2355"},{"name":"points_sum","outputs":[{"type":"uint256","name":"bias"},{"type":"uint256","name":"slope"}],"inputs":[{"type":"int128","name":"arg0"},{"type":"uint256","name":"arg1"}],"stateMutability":"view","type":"function","gas":"3970"},{"name":"time_sum","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2370"},{"name":"points_total","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2406"},{"name":"time_total","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"2321"},{"name":"points_type_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"int128","name":"arg0"},{"type":"uint256","name":"arg1"}],"stateMutability":"view","type":"function","gas":"2671"},{"name":"time_type_weight","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"2490"}]'
        ),
        p1 = JSON.parse(
          '[{"stateMutability":"payable","type":"function","name":"deposit_and_stake","inputs":[{"name":"deposit","type":"address"},{"name":"lp_token","type":"address"},{"name":"gauge","type":"address"},{"name":"n_coins","type":"uint256"},{"name":"coins","type":"address[]"},{"name":"amounts","type":"uint256[]"},{"name":"min_mint_amount","type":"uint256"},{"name":"use_underlying","type":"bool"},{"name":"use_dynarray","type":"bool"},{"name":"pool","type":"address"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"}]'
        ),
        p8 = JSON.parse(
          '[{"stateMutability":"payable","type":"function","name":"deposit_and_stake","inputs":[{"name":"deposit","type":"address"},{"name":"lp_token","type":"address"},{"name":"gauge","type":"address"},{"name":"n_coins","type":"uint256"},{"name":"coins","type":"address[]"},{"name":"amounts","type":"uint256[]"},{"name":"min_mint_amount","type":"uint256"},{"name":"use_dynarray","type":"bool"},{"name":"pool","type":"address"}],"outputs":[]},{"stateMutability":"payable","type":"fallback"}]'
        ),
        p3 = JSON.parse(
          '[{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_meta_underlying","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"},{"name":"base_pool","type":"address"},{"name":"base_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_tricrypto_meta_underlying","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"},{"name":"base_pool","type":"address"},{"name":"base_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_double_meta_underlying","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"uint256"},{"name":"j","type":"uint256"},{"name":"dy","type":"uint256"},{"name":"base_pool","type":"address"},{"name":"base_pool_zap","type":"address"},{"name":"second_base_pool","type":"address"},{"name":"second_base_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        p4 = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_use_int128","type":"address[20]"},{"name":"_pool_type_addresses","type":"address[20]"},{"name":"_pool_types","type":"uint8[20]"},{"name":"_use_rate","type":"bool[10][20]"},{"name":"_factory","type":"address"},{"name":"_eth_implementation","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"calc_token_amount","inputs":[{"name":"pool","type":"address"},{"name":"token","type":"address"},{"name":"amounts","type":"uint256[10]"},{"name":"n_coins","type":"uint256"},{"name":"deposit","type":"bool"},{"name":"use_underlying","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"calc_token_amount_meta","inputs":[{"name":"pool","type":"address"},{"name":"token","type":"address"},{"name":"amounts","type":"uint256[10]"},{"name":"n_coins","type":"uint256"},{"name":"base_pool","type":"address"},{"name":"base_token","type":"address"},{"name":"deposit","type":"bool"},{"name":"use_underlying","type":"bool"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_underlying","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_meta","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"},{"name":"base_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx_meta_underlying","inputs":[{"name":"pool","type":"address"},{"name":"i","type":"int128"},{"name":"j","type":"int128"},{"name":"dy","type":"uint256"},{"name":"n_coins","type":"uint256"},{"name":"base_pool","type":"address"},{"name":"base_token","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}]'
        ),
        p9 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"route","type":"address[11]"},{"indexed":false,"name":"swap_params","type":"uint256[5][5]"},{"indexed":false,"name":"pools","type":"address[5]"},{"indexed":false,"name":"in_amount","type":"uint256"},{"indexed":false,"name":"out_amount","type":"uint256"}],"name":"Exchange","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"name":"_weth","type":"address"},{"name":"_stable_calc","type":"address"},{"name":"_crypto_calc","type":"address"},{"name":"_snx_coins","type":"address[4]"}],"name":"constructor","outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"},{"name":"_expected","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"},{"name":"_expected","type":"uint256"},{"name":"_pools","type":"address[5]"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"},{"name":"_pools","type":"address[5]"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_out_amount","type":"uint256"},{"name":"_pools","type":"address[5]"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_out_amount","type":"uint256"},{"name":"_pools","type":"address[5]"},{"name":"_base_pools","type":"address[5]"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_out_amount","type":"uint256"},{"name":"_pools","type":"address[5]"},{"name":"_base_pools","type":"address[5]"},{"name":"_base_tokens","type":"address[5]"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        p7 = JSON.parse(
          '[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"route","type":"address[11]"},{"indexed":false,"name":"swap_params","type":"uint256[5][5]"},{"indexed":false,"name":"pools","type":"address[5]"},{"indexed":false,"name":"in_amount","type":"uint256"},{"indexed":false,"name":"out_amount","type":"uint256"}],"name":"Exchange","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"name":"_weth","type":"address"},{"name":"_stable_calc","type":"address"},{"name":"_crypto_calc","type":"address"},{"name":"_snx_coins","type":"address[4]"}],"name":"constructor","outputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"},{"name":"_expected","type":"uint256"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"},{"name":"_expected","type":"uint256"},{"name":"_pools","type":"address[5]"}],"name":"exchange","outputs":[{"name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_amount","type":"uint256"},{"name":"_pools","type":"address[5]"}],"name":"get_dy","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_out_amount","type":"uint256"},{"name":"_pools","type":"address[5]"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_out_amount","type":"uint256"},{"name":"_pools","type":"address[5]"},{"name":"_base_pools","type":"address[5]"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[5][5]"},{"name":"_out_amount","type":"uint256"},{"name":"_pools","type":"address[5]"},{"name":"_base_pools","type":"address[5]"},{"name":"_base_tokens","type":"address[5]"},{"name":"_second_base_pools","type":"address[5]"},{"name":"_second_base_tokens","type":"address[5]"}],"name":"get_dx","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
        ),
        oe = JSON.parse(
          '[{"name":"Exchange","inputs":[{"name":"sender","type":"address","indexed":true},{"name":"receiver","type":"address","indexed":true},{"name":"route","type":"address[11]","indexed":false},{"name":"swap_params","type":"uint256[4][5]","indexed":false},{"name":"in_amount","type":"uint256","indexed":false},{"name":"out_amount","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_weth","type":"address"}],"outputs":[]},{"stateMutability":"payable","type":"function","name":"exchange","inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[4][5]"},{"name":"_amount","type":"uint256"},{"name":"_min_dy","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dy","inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[4][5]"},{"name":"_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_dx","inputs":[{"name":"_route","type":"address[11]"},{"name":"_swap_params","type":"uint256[4][5]"},{"name":"_out_amount","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}]}]'
        ),
        ot = JSON.parse(
          '[{"name":"BasePoolAdded","inputs":[{"name":"base_pool","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"PlainPoolDeployed","inputs":[{"name":"coins","type":"address[4]","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"MetaPoolDeployed","inputs":[{"name":"coin","type":"address","indexed":false},{"name":"base_pool","type":"address","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"LiquidityGaugeDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"metapool_implementations","inputs":[{"name":"_base_pool","type":"address"}],"outputs":[{"name":"","type":"address[10]"}],"gas":"21716"},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_base_pool","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"2663"},{"stateMutability":"view","type":"function","name":"get_n_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2699"},{"stateMutability":"view","type":"function","name":"get_meta_n_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"gas":"5201"},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[4]"}],"gas":"9164"},{"stateMutability":"view","type":"function","name":"get_underlying_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[8]"}],"gas":"21345"},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[4]"}],"gas":"20185"},{"stateMutability":"view","type":"function","name":"get_underlying_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[8]"}],"gas":"19730"},{"stateMutability":"view","type":"function","name":"get_metapool_rates","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"5281"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[4]"}],"gas":"20435"},{"stateMutability":"view","type":"function","name":"get_underlying_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[8]"}],"gas":"39733"},{"stateMutability":"view","type":"function","name":"get_A","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3135"},{"stateMutability":"view","type":"function","name":"get_fees","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"gas":"5821"},{"stateMutability":"view","type":"function","name":"get_admin_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[4]"}],"gas":"13535"},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"int128"},{"name":"","type":"int128"},{"name":"","type":"bool"}],"gas":"33407"},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3089"},{"stateMutability":"view","type":"function","name":"get_implementation_address","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3119"},{"stateMutability":"view","type":"function","name":"is_meta","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":"3152"},{"stateMutability":"view","type":"function","name":"get_pool_asset_type","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5450"},{"stateMutability":"view","type":"function","name":"get_fee_receiver","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"5480"},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_asset_type","type":"uint256"},{"name":"_implementation_idx","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_metapool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_implementation_idx","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"93079"},{"stateMutability":"nonpayable","type":"function","name":"add_base_pool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_fee_receiver","type":"address"},{"name":"_asset_type","type":"uint256"},{"name":"_implementations","type":"address[10]"}],"outputs":[],"gas":"1206132"},{"stateMutability":"nonpayable","type":"function","name":"set_metapool_implementations","inputs":[{"name":"_base_pool","type":"address"},{"name":"_implementations","type":"address[10]"}],"outputs":[],"gas":"382072"},{"stateMutability":"nonpayable","type":"function","name":"set_plain_implementations","inputs":[{"name":"_n_coins","type":"uint256"},{"name":"_implementations","type":"address[10]"}],"outputs":[],"gas":"379687"},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_gauge_implementation","type":"address"}],"outputs":[],"gas":"38355"},{"stateMutability":"nonpayable","type":"function","name":"batch_set_pool_asset_type","inputs":[{"name":"_pools","type":"address[32]"},{"name":"_asset_types","type":"uint256[32]"}],"outputs":[],"gas":"1139545"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[],"gas":"38415"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"58366"},{"stateMutability":"nonpayable","type":"function","name":"set_manager","inputs":[{"name":"_manager","type":"address"}],"outputs":[],"gas":"40996"},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_base_pool","type":"address"},{"name":"_fee_receiver","type":"address"}],"outputs":[],"gas":"38770"},{"stateMutability":"nonpayable","type":"function","name":"convert_metapool_fees","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"12880"},{"stateMutability":"nonpayable","type":"function","name":"add_existing_metapools","inputs":[{"name":"_pools","type":"address[10]"}],"outputs":[{"name":"","type":"bool"}],"gas":"8610792"},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"manager","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3573"},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"base_pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3633"},{"stateMutability":"view","type":"function","name":"base_pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"base_pool_assets","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":"3863"},{"stateMutability":"view","type":"function","name":"plain_implementations","inputs":[{"name":"arg0","type":"uint256"},{"name":"arg1","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3838"},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3708"}]'
        ),
        on = JSON.parse(
          '[{"name":"BasePoolAdded","inputs":[{"name":"base_pool","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"PlainPoolDeployed","inputs":[{"name":"coins","type":"address[6]","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"MetaPoolDeployed","inputs":[{"name":"coin","type":"address","indexed":false},{"name":"base_pool","type":"address","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"LiquidityGaugeDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"metapool_implementations","inputs":[{"name":"_base_pool","type":"address"}],"outputs":[{"name":"","type":"address[10]"}],"gas":"21716"},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_base_pool","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"2663"},{"stateMutability":"view","type":"function","name":"get_n_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"2699"},{"stateMutability":"view","type":"function","name":"get_meta_n_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"gas":"5201"},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[6]"}],"gas":"13400"},{"stateMutability":"view","type":"function","name":"get_underlying_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[8]"}],"gas":"21345"},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"28657"},{"stateMutability":"view","type":"function","name":"get_underlying_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[8]"}],"gas":"23972"},{"stateMutability":"view","type":"function","name":"get_metapool_rates","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[2]"}],"gas":"5281"},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"25607"},{"stateMutability":"view","type":"function","name":"get_underlying_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[8]"}],"gas":"39733"},{"stateMutability":"view","type":"function","name":"get_A","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3135"},{"stateMutability":"view","type":"function","name":"get_fees","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"gas":"5821"},{"stateMutability":"view","type":"function","name":"get_admin_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[6]"}],"gas":"18758"},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"int128"},{"name":"","type":"int128"},{"name":"","type":"bool"}],"gas":"33243"},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3089"},{"stateMutability":"view","type":"function","name":"get_implementation_address","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"3119"},{"stateMutability":"view","type":"function","name":"is_meta","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":"3152"},{"stateMutability":"view","type":"function","name":"get_pool_asset_type","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"5450"},{"stateMutability":"view","type":"function","name":"get_fee_receiver","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"5480"},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_asset_type","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[6]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_asset_type","type":"uint256"},{"name":"_implementation_idx","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_metapool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_metapool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_implementation_idx","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}],"gas":"93401"},{"stateMutability":"nonpayable","type":"function","name":"add_base_pool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_fee_receiver","type":"address"},{"name":"_asset_type","type":"uint256"},{"name":"_implementations","type":"address[10]"}],"outputs":[],"gas":"925811"},{"stateMutability":"nonpayable","type":"function","name":"set_metapool_implementations","inputs":[{"name":"_base_pool","type":"address"},{"name":"_implementations","type":"address[10]"}],"outputs":[],"gas":"382072"},{"stateMutability":"nonpayable","type":"function","name":"set_plain_implementations","inputs":[{"name":"_n_coins","type":"uint256"},{"name":"_implementations","type":"address[10]"}],"outputs":[],"gas":"379687"},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_gauge_implementation","type":"address"}],"outputs":[],"gas":"38355"},{"stateMutability":"nonpayable","type":"function","name":"set_gauge","inputs":[{"name":"_pool","type":"address"},{"name":"_gauge","type":"address"}],"outputs":[],"gas":"43210"},{"stateMutability":"nonpayable","type":"function","name":"batch_set_pool_asset_type","inputs":[{"name":"_pools","type":"address[32]"},{"name":"_asset_types","type":"uint256[32]"}],"outputs":[],"gas":"1139575"},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[],"gas":"38445"},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":"58396"},{"stateMutability":"nonpayable","type":"function","name":"set_manager","inputs":[{"name":"_manager","type":"address"}],"outputs":[],"gas":"41026"},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_base_pool","type":"address"},{"name":"_fee_receiver","type":"address"}],"outputs":[],"gas":"38800"},{"stateMutability":"nonpayable","type":"function","name":"convert_metapool_fees","inputs":[],"outputs":[{"name":"","type":"bool"}],"gas":"12910"},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3438"},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3468"},{"stateMutability":"view","type":"function","name":"manager","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3498"},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3573"},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3558"},{"stateMutability":"view","type":"function","name":"base_pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3633"},{"stateMutability":"view","type":"function","name":"base_pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"3618"},{"stateMutability":"view","type":"function","name":"plain_implementations","inputs":[{"name":"arg0","type":"uint256"},{"name":"arg1","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":"3808"},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3678"},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3708"}]'
        ),
        oa = JSON.parse(
          '[{"name":"CommitAdmins","inputs":[{"name":"ownership_admin","type":"address","indexed":false},{"name":"parameter_admin","type":"address","indexed":false},{"name":"emergency_admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyAdmins","inputs":[{"name":"ownership_admin","type":"address","indexed":false},{"name":"parameter_admin","type":"address","indexed":false},{"name":"emergency_admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_ownership_admin","type":"address"},{"name":"_parameter_admin","type":"address"},{"name":"_emergency_admin","type":"address"},{"name":"_factory","type":"address"},{"name":"_old_manager_proxy","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_asset_type","type":"uint256"},{"name":"_implementation_idx","type":"uint256"},{"name":"_ma_exp_time","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool_and_set_oracle","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[4]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_asset_type","type":"uint256"},{"name":"_implementation_idx","type":"uint256"},{"name":"_ma_exp_time","type":"uint256"},{"name":"_oracle_method_id","type":"bytes4"},{"name":"_oracle_address","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"},{"name":"_manager","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"commit_set_admins","inputs":[{"name":"_o_admin","type":"address"},{"name":"_p_admin","type":"address"},{"name":"_e_admin","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_set_admins","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_ma_exp_time","inputs":[{"name":"_pool","type":"address"},{"name":"_ma_exp_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_new_fee","inputs":[{"name":"_pool","type":"address"},{"name":"_new_fee","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_new_fee","inputs":[{"name":"_pool","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"ramp_A","inputs":[{"name":"_pool","type":"address"},{"name":"_future_A","type":"uint256"},{"name":"_future_time","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"stop_ramp_A","inputs":[{"name":"_pool","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_base_pool","inputs":[{"name":"_target","type":"address"},{"name":"_base_pool","type":"address"},{"name":"_fee_receiver","type":"address"},{"name":"_asset_type","type":"uint256"},{"name":"_implementations","type":"address[10]"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_metapool_implementations","inputs":[{"name":"_target","type":"address"},{"name":"_base_pool","type":"address"},{"name":"_implementations","type":"address[10]"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_plain_implementations","inputs":[{"name":"_target","type":"address"},{"name":"_n_coins","type":"uint256"},{"name":"_implementations","type":"address[10]"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_target","type":"address"},{"name":"_gauge_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_target","type":"address"},{"name":"_base_pool","type":"address"},{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_factory_manager","inputs":[{"name":"_target","type":"address"},{"name":"_manager","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_manager","inputs":[{"name":"_gauge","type":"address"},{"name":"_manager","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_target","type":"address"},{"name":"_new_admin","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[{"name":"_target","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_killed","inputs":[{"name":"_gauge","type":"address"},{"name":"_is_killed","type":"bool"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_reward","inputs":[{"name":"_gauge","type":"address"},{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_reward_distributor","inputs":[{"name":"_gauge","type":"address"},{"name":"_reward_token","type":"address"},{"name":"_distributor","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"migrate_gauge_manager","inputs":[{"name":"_gauge","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"FACTORY","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"OLD_MANAGER_PROXY","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"ownership_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"parameter_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"emergency_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_ownership_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_parameter_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_emergency_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_manager","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"address"}]}]'
        ),
        oi = JSON.parse(
          '[{"name":"CryptoPoolDeployed","inputs":[{"name":"token","type":"address","indexed":false},{"name":"coins","type":"address[2]","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"gamma","type":"uint256","indexed":false},{"name":"mid_fee","type":"uint256","indexed":false},{"name":"out_fee","type":"uint256","indexed":false},{"name":"allowed_extra_profit","type":"uint256","indexed":false},{"name":"fee_gamma","type":"uint256","indexed":false},{"name":"adjustment_step","type":"uint256","indexed":false},{"name":"admin_fee","type":"uint256","indexed":false},{"name":"ma_half_time","type":"uint256","indexed":false},{"name":"initial_price","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"LiquidityGaugeDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"token","type":"address","indexed":false},{"name":"gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateFeeReceiver","inputs":[{"name":"_old_fee_receiver","type":"address","indexed":false},{"name":"_new_fee_receiver","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdatePoolImplementation","inputs":[{"name":"_old_pool_implementation","type":"address","indexed":false},{"name":"_new_pool_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateTokenImplementation","inputs":[{"name":"_old_token_implementation","type":"address","indexed":false},{"name":"_new_token_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateGaugeImplementation","inputs":[{"name":"_old_gauge_implementation","type":"address","indexed":false},{"name":"_new_gauge_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_fee_receiver","type":"address"},{"name":"_pool_implementation","type":"address"},{"name":"_token_implementation","type":"address"},{"name":"_gauge_implementation","type":"address"},{"name":"_weth","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deploy_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[2]"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"admin_fee","type":"uint256"},{"name":"ma_half_time","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_pool_implementation","inputs":[{"name":"_pool_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_token_implementation","inputs":[{"name":"_token_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_gauge_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[2]"}]},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_eth_index","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_token","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"token_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]}]'
        ),
        os = JSON.parse(
          '[{"name":"TwocryptoPoolDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"name","type":"string","indexed":false},{"name":"symbol","type":"string","indexed":false},{"name":"coins","type":"address[2]","indexed":false},{"name":"math","type":"address","indexed":false},{"name":"salt","type":"bytes32","indexed":false},{"name":"precisions","type":"uint256[2]","indexed":false},{"name":"packed_A_gamma","type":"uint256","indexed":false},{"name":"packed_fee_params","type":"uint256","indexed":false},{"name":"packed_rebalancing_params","type":"uint256","indexed":false},{"name":"packed_prices","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"LiquidityGaugeDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateFeeReceiver","inputs":[{"name":"_old_fee_receiver","type":"address","indexed":false},{"name":"_new_fee_receiver","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdatePoolImplementation","inputs":[{"name":"_implemention_id","type":"uint256","indexed":false},{"name":"_old_pool_implementation","type":"address","indexed":false},{"name":"_new_pool_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateGaugeImplementation","inputs":[{"name":"_old_gauge_implementation","type":"address","indexed":false},{"name":"_new_gauge_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateMathImplementation","inputs":[{"name":"_old_math_implementation","type":"address","indexed":false},{"name":"_new_math_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateViewsImplementation","inputs":[{"name":"_old_views_implementation","type":"address","indexed":false},{"name":"_new_views_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"initialise_ownership","inputs":[{"name":"_fee_receiver","type":"address"},{"name":"_admin","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deploy_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[2]"},{"name":"implementation_id","type":"uint256"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"ma_exp_time","type":"uint256"},{"name":"initial_price","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_pool_implementation","inputs":[{"name":"_pool_implementation","type":"address"},{"name":"_implementation_index","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_gauge_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_views_implementation","inputs":[{"name":"_views_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_math_implementation","inputs":[{"name":"_math_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[2]"}]},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[2]"}]},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_market_counts","inputs":[{"name":"coin_a","type":"address"},{"name":"coin_b","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_implementations","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"views_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"math_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]}]'
        ),
        ou = JSON.parse(
          '[{"name":"TricryptoPoolDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"name","type":"string","indexed":false},{"name":"symbol","type":"string","indexed":false},{"name":"weth","type":"address","indexed":false},{"name":"coins","type":"address[3]","indexed":false},{"name":"math","type":"address","indexed":false},{"name":"salt","type":"bytes32","indexed":false},{"name":"packed_precisions","type":"uint256","indexed":false},{"name":"packed_A_gamma","type":"uint256","indexed":false},{"name":"packed_fee_params","type":"uint256","indexed":false},{"name":"packed_rebalancing_params","type":"uint256","indexed":false},{"name":"packed_prices","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"LiquidityGaugeDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateFeeReceiver","inputs":[{"name":"_old_fee_receiver","type":"address","indexed":false},{"name":"_new_fee_receiver","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdatePoolImplementation","inputs":[{"name":"_implemention_id","type":"uint256","indexed":false},{"name":"_old_pool_implementation","type":"address","indexed":false},{"name":"_new_pool_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateGaugeImplementation","inputs":[{"name":"_old_gauge_implementation","type":"address","indexed":false},{"name":"_new_gauge_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateMathImplementation","inputs":[{"name":"_old_math_implementation","type":"address","indexed":false},{"name":"_new_math_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateViewsImplementation","inputs":[{"name":"_old_views_implementation","type":"address","indexed":false},{"name":"_new_views_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_fee_receiver","type":"address"},{"name":"_admin","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deploy_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[3]"},{"name":"_weth","type":"address"},{"name":"implementation_id","type":"uint256"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"ma_exp_time","type":"uint256"},{"name":"initial_prices","type":"uint256[2]"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_pool_implementation","inputs":[{"name":"_pool_implementation","type":"address"},{"name":"_implementation_index","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_gauge_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_views_implementation","inputs":[{"name":"_views_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_math_implementation","inputs":[{"name":"_math_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[3]"}]},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_market_counts","inputs":[{"name":"coin_a","type":"address"},{"name":"coin_b","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_implementations","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"views_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"math_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]}]'
        ),
        op = JSON.parse(
          '[{"name":"TricryptoPoolDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"name","type":"string","indexed":false},{"name":"symbol","type":"string","indexed":false},{"name":"weth","type":"address","indexed":false},{"name":"coins","type":"address[3]","indexed":false},{"name":"math","type":"address","indexed":false},{"name":"salt","type":"bytes32","indexed":false},{"name":"packed_precisions","type":"uint256","indexed":false},{"name":"packed_A_gamma","type":"uint256","indexed":false},{"name":"packed_fee_params","type":"uint256","indexed":false},{"name":"packed_rebalancing_params","type":"uint256","indexed":false},{"name":"packed_prices","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateFeeReceiver","inputs":[{"name":"_old_fee_receiver","type":"address","indexed":false},{"name":"_new_fee_receiver","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdatePoolImplementation","inputs":[{"name":"_implemention_id","type":"uint256","indexed":false},{"name":"_old_pool_implementation","type":"address","indexed":false},{"name":"_new_pool_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateMathImplementation","inputs":[{"name":"_old_math_implementation","type":"address","indexed":false},{"name":"_new_math_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateViewsImplementation","inputs":[{"name":"_old_views_implementation","type":"address","indexed":false},{"name":"_new_views_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_fee_receiver","type":"address"},{"name":"_admin","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"deploy_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[3]"},{"name":"_weth","type":"address"},{"name":"implementation_id","type":"uint256"},{"name":"A","type":"uint256"},{"name":"gamma","type":"uint256"},{"name":"mid_fee","type":"uint256"},{"name":"out_fee","type":"uint256"},{"name":"fee_gamma","type":"uint256"},{"name":"allowed_extra_profit","type":"uint256"},{"name":"adjustment_step","type":"uint256"},{"name":"ma_exp_time","type":"uint256"},{"name":"initial_prices","type":"uint256[2]"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_pool_implementation","inputs":[{"name":"_pool_implementation","type":"address"},{"name":"_implementation_index","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_views_implementation","inputs":[{"name":"_views_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_math_implementation","inputs":[{"name":"_math_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"get_implementation_address","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[3]"}]},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[3]"}]},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_market_counts","inputs":[{"name":"coin_a","type":"address"},{"name":"coin_b","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_implementations","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"views_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"math_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
        ),
        oo = JSON.parse(
          '[{"name":"BasePoolAdded","inputs":[{"name":"base_pool","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"PlainPoolDeployed","inputs":[{"name":"coins","type":"address[]","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"MetaPoolDeployed","inputs":[{"name":"coin","type":"address","indexed":false},{"name":"base_pool","type":"address","indexed":false},{"name":"A","type":"uint256","indexed":false},{"name":"fee","type":"uint256","indexed":false},{"name":"deployer","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"LiquidityGaugeDeployed","inputs":[{"name":"pool","type":"address","indexed":false},{"name":"gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_fee_receiver","type":"address"},{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"find_pool_for_coins","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"i","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_base_pool","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_n_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_meta_n_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[]"}]},{"stateMutability":"view","type":"function","name":"get_underlying_coins","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address[]"}]},{"stateMutability":"view","type":"function","name":"get_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"get_underlying_decimals","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"get_metapool_rates","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"get_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"get_underlying_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"get_A","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_fees","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"get_admin_balances","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint256[]"}]},{"stateMutability":"view","type":"function","name":"get_coin_indices","inputs":[{"name":"_pool","type":"address"},{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"outputs":[{"name":"","type":"int128"},{"name":"","type":"int128"},{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"get_implementation_address","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"is_meta","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"get_pool_asset_types","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"uint8[]"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_plain_pool","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coins","type":"address[]"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_offpeg_fee_multiplier","type":"uint256"},{"name":"_ma_exp_time","type":"uint256"},{"name":"_implementation_idx","type":"uint256"},{"name":"_asset_types","type":"uint8[]"},{"name":"_method_ids","type":"bytes4[]"},{"name":"_oracles","type":"address[]"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_metapool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_coin","type":"address"},{"name":"_A","type":"uint256"},{"name":"_fee","type":"uint256"},{"name":"_offpeg_fee_multiplier","type":"uint256"},{"name":"_ma_exp_time","type":"uint256"},{"name":"_implementation_idx","type":"uint256"},{"name":"_asset_type","type":"uint8"},{"name":"_method_id","type":"bytes4"},{"name":"_oracle","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"deploy_gauge","inputs":[{"name":"_pool","type":"address"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"nonpayable","type":"function","name":"add_base_pool","inputs":[{"name":"_base_pool","type":"address"},{"name":"_base_lp_token","type":"address"},{"name":"_asset_types","type":"uint8[]"},{"name":"_n_coins","type":"uint256"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_pool_implementations","inputs":[{"name":"_implementation_index","type":"uint256"},{"name":"_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_metapool_implementations","inputs":[{"name":"_implementation_index","type":"uint256"},{"name":"_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_math_implementation","inputs":[{"name":"_math_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_gauge_implementation","inputs":[{"name":"_gauge_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_views_implementation","inputs":[{"name":"_views_implementation","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"set_fee_receiver","inputs":[{"name":"_pool","type":"address"},{"name":"_fee_receiver","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_asset_type","inputs":[{"name":"_id","type":"uint8"},{"name":"_name","type":"string"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"asset_types","inputs":[{"name":"arg0","type":"uint8"}],"outputs":[{"name":"","type":"string"}]},{"stateMutability":"view","type":"function","name":"pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"base_pool_list","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"base_pool_count","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"base_pool_data","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"tuple","components":[{"name":"lp_token","type":"address"},{"name":"coins","type":"address[]"},{"name":"decimals","type":"uint256"},{"name":"n_coins","type":"uint256"},{"name":"asset_types","type":"uint8[]"}]}]},{"stateMutability":"view","type":"function","name":"base_pool_assets","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"pool_implementations","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"metapool_implementations","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"math_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"gauge_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"views_implementation","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"fee_receiver","inputs":[],"outputs":[{"name":"","type":"address"}]}]'
        ),
        oy = JSON.parse(
          '[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"gasPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getL1Fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getL1GasUsed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l1BaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"overhead","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scalar","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]'
        ),
        od = JSON.parse(
          '[{"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseFeeScalar","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blobBaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blobBaseFeeScalar","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"gasPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getL1Fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getL1GasUsed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isEcotone","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l1BaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"overhead","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scalar","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"setEcotone","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]'
        ),
        om = JSON.parse(
          '[{"constant":true,"inputs":[],"name":"hasInitialized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minTime","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_voteId","type":"uint256"},{"name":"_yeaPct","type":"uint256"},{"name":"_nayPct","type":"uint256"},{"name":"_executesIfDecided","type":"bool"}],"name":"votePct","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_script","type":"bytes"}],"name":"getEVMScriptExecutor","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"canCreateNewVote","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRecoveryVault","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"MODIFY_QUORUM_ROLE","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voteId","type":"uint256"},{"name":"_voter","type":"address"}],"name":"getVoterState","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voteId","type":"uint256"}],"name":"getVote","outputs":[{"name":"open","type":"bool"},{"name":"executed","type":"bool"},{"name":"startDate","type":"uint64"},{"name":"snapshotBlock","type":"uint64"},{"name":"supportRequired","type":"uint64"},{"name":"minAcceptQuorum","type":"uint64"},{"name":"yea","type":"uint256"},{"name":"nay","type":"uint256"},{"name":"votingPower","type":"uint256"},{"name":"script","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_minAcceptQuorumPct","type":"uint64"}],"name":"changeMinAcceptQuorumPct","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"MODIFY_SUPPORT_ROLE","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"lastCreateVoteTimes","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_supportRequiredPct","type":"uint64"}],"name":"changeSupportRequiredPct","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"token","type":"address"}],"name":"allowRecoverability","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"appId","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ENABLE_VOTE_CREATION","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getInitializationBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minBalanceUpperLimit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_minTime","type":"uint256"}],"name":"setMinTime","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_token","type":"address"}],"name":"transferToVault","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"},{"name":"_role","type":"bytes32"},{"name":"_params","type":"uint256[]"}],"name":"canPerform","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEVMScriptRegistry","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_token","type":"address"},{"name":"_supportRequiredPct","type":"uint64"},{"name":"_minAcceptQuorumPct","type":"uint64"},{"name":"_voteTime","type":"uint64"},{"name":"_minBalance","type":"uint256"},{"name":"_minTime","type":"uint256"},{"name":"_minBalanceLowerLimit","type":"uint256"},{"name":"_minBalanceUpperLimit","type":"uint256"},{"name":"_minTimeLowerLimit","type":"uint256"},{"name":"_minTimeUpperLimit","type":"uint256"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"SET_MIN_BALANCE_ROLE","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minTimeLowerLimit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"voteTime","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"CREATE_VOTES_ROLE","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"},{"name":"","type":"bytes"}],"name":"canForward","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"SET_MIN_TIME_ROLE","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_minBalance","type":"uint256"}],"name":"setMinBalance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_voteId","type":"uint256"}],"name":"canExecute","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voteId","type":"uint256"},{"name":"_voter","type":"address"}],"name":"canVote","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"kernel","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_executionScript","type":"bytes"},{"name":"_metadata","type":"string"}],"name":"newVote","outputs":[{"name":"voteId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_evmScript","type":"bytes"}],"name":"forward","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"disableVoteCreationOnce","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"minAcceptQuorumPct","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isPetrified","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"votesLength","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_voteData","type":"uint256"},{"name":"_supports","type":"bool"},{"name":"_executesIfDecided","type":"bool"}],"name":"vote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"enableVoteCreationOnce","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"minTimeUpperLimit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minBalanceLowerLimit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"enableVoteCreation","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_executionScript","type":"bytes"},{"name":"_metadata","type":"string"},{"name":"_castVote","type":"bool"},{"name":"_executesIfDecided","type":"bool"}],"name":"newVote","outputs":[{"name":"voteId","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_voteId","type":"uint256"}],"name":"executeVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"supportRequiredPct","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"PCT_BASE","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isForwarder","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"DISABLE_VOTE_CREATION","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voteId","type":"uint256"},{"indexed":true,"name":"creator","type":"address"},{"indexed":false,"name":"metadata","type":"string"},{"indexed":false,"name":"minBalance","type":"uint256"},{"indexed":false,"name":"minTime","type":"uint256"},{"indexed":false,"name":"totalSupply","type":"uint256"},{"indexed":false,"name":"creatorVotingPower","type":"uint256"}],"name":"StartVote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voteId","type":"uint256"},{"indexed":true,"name":"voter","type":"address"},{"indexed":false,"name":"supports","type":"bool"},{"indexed":false,"name":"stake","type":"uint256"}],"name":"CastVote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voteId","type":"uint256"}],"name":"ExecuteVote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"supportRequiredPct","type":"uint64"}],"name":"ChangeSupportRequired","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minAcceptQuorumPct","type":"uint64"}],"name":"ChangeMinQuorum","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minBalance","type":"uint256"}],"name":"MinimumBalanceSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minTime","type":"uint256"}],"name":"MinimumTimeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"executor","type":"address"},{"indexed":false,"name":"script","type":"bytes"},{"indexed":false,"name":"input","type":"bytes"},{"indexed":false,"name":"returnData","type":"bytes"}],"name":"ScriptResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"vault","type":"address"},{"indexed":true,"name":"token","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"RecoverToVault","type":"event"}]'
        ),
        or = JSON.parse(
          '[{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"add_contract","inputs":[{"name":"_contract","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"circulating_supply","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"set_admin","inputs":[{"name":"_new_admin","type":"address"}],"outputs":[]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"CRV","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"contracts","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"num_contracts","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"cached_contracts","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}]}]'
        ),
        ol = JSON.parse(
          '[{"name":"BridgerUpdated","inputs":[{"name":"_chain_id","type":"uint256","indexed":true},{"name":"_old_bridger","type":"address","indexed":false},{"name":"_new_bridger","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"DeployedGauge","inputs":[{"name":"_implementation","type":"address","indexed":true},{"name":"_chain_id","type":"uint256","indexed":true},{"name":"_deployer","type":"address","indexed":true},{"name":"_salt","type":"bytes32","indexed":false},{"name":"_gauge","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"TransferOwnership","inputs":[{"name":"_old_owner","type":"address","indexed":false},{"name":"_new_owner","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateCallProxy","inputs":[{"name":"_old_call_proxy","type":"address","indexed":false},{"name":"_new_call_proxy","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"UpdateImplementation","inputs":[{"name":"_old_implementation","type":"address","indexed":false},{"name":"_new_implementation","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_call_proxy","type":"address"},{"name":"_owner","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transmit_emissions","inputs":[{"name":"_gauge","type":"address"}],"outputs":[],"gas":10132},{"stateMutability":"payable","type":"function","name":"deploy_gauge","inputs":[{"name":"_chain_id","type":"uint256"},{"name":"_salt","type":"bytes32"}],"outputs":[{"name":"","type":"address"}],"gas":165352},{"stateMutability":"nonpayable","type":"function","name":"deploy_child_gauge","inputs":[{"name":"_chain_id","type":"uint256"},{"name":"_lp_token","type":"address"},{"name":"_salt","type":"bytes32"}],"outputs":[],"gas":18165},{"stateMutability":"nonpayable","type":"function","name":"deploy_child_gauge","inputs":[{"name":"_chain_id","type":"uint256"},{"name":"_lp_token","type":"address"},{"name":"_salt","type":"bytes32"},{"name":"_manager","type":"address"}],"outputs":[],"gas":18165},{"stateMutability":"nonpayable","type":"function","name":"set_bridger","inputs":[{"name":"_chain_id","type":"uint256"},{"name":"_bridger","type":"address"}],"outputs":[],"gas":42889},{"stateMutability":"nonpayable","type":"function","name":"set_implementation","inputs":[{"name":"_implementation","type":"address"}],"outputs":[],"gas":41933},{"stateMutability":"nonpayable","type":"function","name":"set_call_proxy","inputs":[{"name":"_new_call_proxy","type":"address"}],"outputs":[],"gas":41963},{"stateMutability":"nonpayable","type":"function","name":"commit_transfer_ownership","inputs":[{"name":"_future_owner","type":"address"}],"outputs":[],"gas":37785},{"stateMutability":"nonpayable","type":"function","name":"accept_transfer_ownership","inputs":[],"outputs":[],"gas":41864},{"stateMutability":"view","type":"function","name":"call_proxy","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":2700},{"stateMutability":"view","type":"function","name":"get_bridger","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":2845},{"stateMutability":"view","type":"function","name":"get_implementation","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":2760},{"stateMutability":"view","type":"function","name":"get_gauge","inputs":[{"name":"arg0","type":"uint256"},{"name":"arg1","type":"uint256"}],"outputs":[{"name":"","type":"address"}],"gas":2950},{"stateMutability":"view","type":"function","name":"get_gauge_count","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":2935},{"stateMutability":"view","type":"function","name":"is_valid_gauge","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"bool"}],"gas":3116},{"stateMutability":"view","type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":2880},{"stateMutability":"view","type":"function","name":"future_owner","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":2910}]'
        );
      var oc = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let of = (e) => [].concat(...e.map((e) => (Array.isArray(e) ? of(e) : e)));
      function o_(e) {
        return oc(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.twocrypto_factory].contract,
            n = Number(this.formatUnits(yield t.pool_count(this.constantOptions), 0));
          for (let a = 1; a <= n; a++)
            if ((yield t.pool_list(n - a)).toLowerCase() === e.toLowerCase())
              return `factory-twocrypto-${n - a}`;
          throw Error('Unknown pool');
        });
      }
      function ob() {
        return oc(this, arguments, void 0, function* (e = 0) {
          let t = this.contracts[this.constants.ALIASES.twocrypto_factory].contract,
            n = this.contracts[this.constants.ALIASES.twocrypto_factory].multicallContract,
            a = Number(this.formatUnits(yield t.pool_count(this.constantOptions), 0)),
            i = [];
          for (let t = e; t < a; t++) i.push(n.pool_list(t));
          if (0 === i.length) return [[], []];
          let s = (yield this.multicallProvider.all(i)).map((t, n) => ({
              id: `factory-twocrypto-${e + n}`,
              address: t.toLowerCase(),
            })),
            u = Object.values(this.constants.POOLS_DATA).map((e) => e.swap_address.toLowerCase());
          return [
            (s = s.filter((e) => !u.includes(e.address))).map((e) => e.id),
            s.map((e) => e.address),
          ];
        });
      }
      function og(e) {
        return e.map((e) =>
          e.map((e) =>
            137 === this.chainId && '0x0000000000000000000000000000000000001010' === e
              ? this.constants.NATIVE_TOKEN.wrappedAddress
              : e.toLowerCase()
          )
        );
      }
      function ov(e) {
        return oc(this, void 0, void 0, function* () {
          let t = this.contracts[this.constants.ALIASES.twocrypto_factory].multicallContract,
            n =
              1 !== this.chainId &&
              this.constants.ALIASES.child_gauge_factory === this.constants.ZERO_ADDRESS,
            a = !('child_gauge_factory_old' in this.constants.ALIASES),
            i = [];
          if (1 === this.chainId) for (let n of e) i.push(t.get_gauge(n)), i.push(t.get_coins(n));
          else
            for (let s of e)
              n ||
                i.push(
                  this.contracts[
                    this.constants.ALIASES.child_gauge_factory
                  ].multicallContract.get_gauge_from_lp_token(s)
                ),
                a ||
                  i.push(
                    this.contracts[
                      this.constants.ALIASES.child_gauge_factory_old
                    ].multicallContract.get_gauge_from_lp_token(s)
                  ),
                i.push(t.get_coins(s));
          let s = yield this.multicallProvider.all(i);
          if (n || a)
            for (let e = 0; e < s.length; e++)
              n && e % 3 == 0 && s.splice(e, 0, this.constants.ZERO_ADDRESS),
                a && e % 3 == 1 && s.splice(e, 0, this.constants.ZERO_ADDRESS);
          let u = s.filter((e, t) => t % 3 == 0).map((e) => e.toLowerCase());
          return [
            u,
            s.filter((e, t) => t % 3 == 1).map((e) => e.toLowerCase()),
            og.call(
              this,
              s.filter((e, t) => t % 3 == 2)
            ),
          ];
        });
      }
      function ow(e) {
        e.forEach((e) => {
          this.setContract(e, pm);
        });
      }
      function oh(e) {
        e.filter((e) => e !== this.constants.ZERO_ADDRESS).forEach((e) => {
          this.setContract(e, 1 === this.chainId ? eM : tV);
        });
      }
      function ox(e) {
        for (let t of Array.from(new Set(of(e)))) t in this.contracts || this.setContract(t, eu);
      }
      function oM(e) {
        return [...e.map((e) => e.map((e) => e))];
      }
      function oA() {
        let e = {};
        for (let t of Object.values(this.constants.POOLS_DATA))
          t.wrapped_coin_addresses.forEach((n, a) => {
            n.toLowerCase() in e || (e[n.toLowerCase()] = t.wrapped_coins[a]);
          }),
            t.underlying_coin_addresses.forEach((n, a) => {
              n.toLowerCase() in e || (e[n.toLowerCase()] = t.underlying_coins[a]);
            });
        return (e[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol), e;
      }
      function oE(e, t, n, a) {
        return oc(this, void 0, void 0, function* () {
          let i = Array.from(new Set(of(t))),
            s = [],
            u = {},
            p = {};
          for (let e of i)
            e in n
              ? ((u[e] = n[e]), (p[e] = a[e]))
              : '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2' === e
                ? (u[e] = 'MKR')
                : s.push(e);
          let o = [];
          for (let t of e)
            o.push(this.contracts[t].multicallContract.symbol()),
              o.push(this.contracts[t].multicallContract.name());
          for (let e of s)
            o.push(this.contracts[e].multicallContract.symbol()),
              o.push(this.contracts[e].multicallContract.decimals());
          let y = yield this.multicallProvider.all(o),
            d = y.slice(0, 2 * e.length),
            m = d.filter((e, t) => t % 2 == 0),
            r = d.filter((e, t) => t % 2 == 1),
            l = y.slice(2 * e.length),
            c = l.filter((e, t) => t % 2 == 0),
            f = l.filter((e, t) => t % 2 == 1).map((e) => Number(this.formatUnits(e, 0)));
          return (
            s.forEach((e, t) => {
              (u[e] = c[t]), (p[e] = f[t]);
            }),
            (u[this.constants.NATIVE_TOKEN.address] = this.constants.NATIVE_TOKEN.symbol),
            (p[this.constants.NATIVE_TOKEN.address] = 18),
            [m, r, u, p]
          );
        });
      }
      function oC() {
        return oc(this, arguments, void 0, function* (e = 0, t) {
          let [n, a] = t ? [[yield o_.call(this, t)], [t.toLowerCase()]] : yield ob.call(this, e);
          if (0 === n.length) return {};
          let [i, s, u] = yield ov.call(this, a),
            p = [];
          for (let e = 0; e < i.length; e++)
            p.push(i[e] !== this.constants.ZERO_ADDRESS ? i[e] : s[e]);
          ow.call(this, a), oh.call(this, p), ox.call(this, u);
          let o = oM.call(this, u),
            y = oA.call(this),
            [d, m, r, l] = yield oE.call(this, a, u, y, this.constants.DECIMALS),
            c = {};
          for (let e = 0; e < n.length; e++)
            c[n[e]] = {
              name: m[e],
              full_name: m[e],
              symbol: d[e],
              reference_asset: 'CRYPTO',
              swap_address: a[e],
              token_address: a[e],
              gauge_address: p[e],
              is_crypto: !0,
              is_plain: o[e].toString() === u[e].toString(),
              is_factory: !0,
              underlying_coins: [...o[e].map((e) => r[e])],
              wrapped_coins: [...u[e].map((e) => r[e])],
              underlying_coin_addresses: o[e],
              wrapped_coin_addresses: u[e],
              underlying_decimals: [...o[e].map((e) => l[e])],
              wrapped_decimals: [...u[e].map((e) => l[e])],
              swap_abi: pm,
              gauge_abi: 1 === this.chainId ? eM : tV,
              is_ng: !0,
            };
          return c;
        });
      }
      var ok = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let oD = [1, 10, 56, 100, 137, 250, 1284, 2222, 8453, 42161, 42220, 43114, 0x4e454152],
        oT = () => {
          let e = {};
          return (t, n, a) => {
            if (t in e) return e[t];
            {
              let i = new A.NZ(t, n, a);
              return (e[t] = i), i;
            }
          };
        },
        oS = () => {
          let e = {};
          return (t, n) => {
            if (t in e) return e[t];
            {
              let a = new E(t, n);
              return (e[t] = a), a;
            }
          };
        };
      class oO {
        constructor() {
          (this.initContract = oT()),
            (this.initMulticallContract = oS()),
            (this.fetchFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                'factory' in this.constants.ALIASES &&
                  (e
                    ? (this.constants.FACTORY_POOLS_DATA = em(yield pw.call(this, 'factory')))
                    : (this.constants.FACTORY_POOLS_DATA = em(yield py.call(this))),
                  (this.constants.FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.FACTORY_POOLS_DATA
                  )),
                  this._updateDecimalsAndGauges(this.constants.FACTORY_POOLS_DATA),
                  (this.constants.FACTORY_GAUGE_IMPLEMENTATIONS.factory = this.isNoRPC
                    ? null
                    : yield this.contracts[
                        this.constants.ALIASES.factory
                      ].contract.gauge_implementation(this.constantOptions)));
              })),
            (this.fetchCrvusdFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                if ('crvusd_factory' in this.constants.ALIASES) {
                  if (e)
                    this.constants.CRVUSD_FACTORY_POOLS_DATA = em(
                      yield pw.call(this, 'factory-crvusd')
                    );
                  else {
                    if (this.isNoRPC) throw Error('RPC connection is required');
                    this.constants.CRVUSD_FACTORY_POOLS_DATA = em(
                      yield py.call(this, 0, void 0, this.constants.ALIASES.crvusd_factory)
                    );
                  }
                  (this.constants.CRVUSD_FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.CRVUSD_FACTORY_POOLS_DATA
                  )),
                    this._updateDecimalsAndGauges(this.constants.CRVUSD_FACTORY_POOLS_DATA);
                }
              })),
            (this.fetchEywaFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                if ('eywa_factory' in this.constants.ALIASES) {
                  if (e)
                    this.constants.EYWA_FACTORY_POOLS_DATA = em(
                      yield pw.call(this, 'factory-eywa')
                    );
                  else {
                    if (this.isNoRPC) throw Error('RPC connection is required');
                    this.constants.EYWA_FACTORY_POOLS_DATA = em(
                      yield py.call(this, 0, void 0, this.constants.ALIASES.eywa_factory)
                    );
                  }
                  (this.constants.EYWA_FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.EYWA_FACTORY_POOLS_DATA
                  )),
                    this._updateDecimalsAndGauges(this.constants.EYWA_FACTORY_POOLS_DATA);
                }
              })),
            (this.fetchCryptoFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                if ('crypto_factory' in this.constants.ALIASES) {
                  if (e)
                    this.constants.CRYPTO_FACTORY_POOLS_DATA = em(
                      yield pw.call(this, 'factory-crypto')
                    );
                  else {
                    if (this.isNoRPC) throw Error('RPC connection is required');
                    this.constants.CRYPTO_FACTORY_POOLS_DATA = em(yield pI.call(this));
                  }
                  (this.constants.CRYPTO_FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.CRYPTO_FACTORY_POOLS_DATA
                  )),
                    this._updateDecimalsAndGauges(this.constants.CRYPTO_FACTORY_POOLS_DATA),
                    (this.constants.FACTORY_GAUGE_IMPLEMENTATIONS['factory-crypto'] = this.isNoRPC
                      ? null
                      : yield this.contracts[
                          this.constants.ALIASES.crypto_factory
                        ].contract.gauge_implementation(this.constantOptions));
                }
              })),
            (this.fetchStableNgFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                if ('stable_ng_factory' in this.constants.ALIASES) {
                  if (e)
                    this.constants.STABLE_NG_FACTORY_POOLS_DATA = em(
                      yield pw.call(this, 'factory-stable-ng')
                    );
                  else {
                    if (this.isNoRPC) throw Error('RPC connection is required');
                    this.constants.STABLE_NG_FACTORY_POOLS_DATA = em(
                      yield py.call(this, 0, void 0, this.constants.ALIASES.stable_ng_factory)
                    );
                  }
                  (this.constants.STABLE_NG_FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.STABLE_NG_FACTORY_POOLS_DATA
                  )),
                    this._updateDecimalsAndGauges(this.constants.STABLE_NG_FACTORY_POOLS_DATA);
                }
              })),
            (this.fetchTworyptoFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                if ('twocrypto_factory' in this.constants.ALIASES) {
                  if (e)
                    this.constants.TWOCRYPTO_FACTORY_POOLS_DATA = em(
                      yield pw.call(this, 'factory-twocrypto')
                    );
                  else {
                    if (this.isNoRPC) throw Error('RPC connection is required');
                    this.constants.TWOCRYPTO_FACTORY_POOLS_DATA = em(yield oC.call(this));
                  }
                  (this.constants.TWOCRYPTO_FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.TWOCRYPTO_FACTORY_POOLS_DATA
                  )),
                    this._updateDecimalsAndGauges(this.constants.TWOCRYPTO_FACTORY_POOLS_DATA),
                    1 === this.chainId
                      ? (this.constants.FACTORY_GAUGE_IMPLEMENTATIONS['factory-twocrypto'] = this
                          .isNoRPC
                          ? null
                          : yield this.contracts[
                              this.constants.ALIASES.twocrypto_factory
                            ].contract.gauge_implementation(this.constantOptions))
                      : (this.constants.FACTORY_GAUGE_IMPLEMENTATIONS['factory-twocrypto'] = this
                          .isNoRPC
                          ? null
                          : yield this.contracts[
                              this.constants.ALIASES.child_gauge_factory
                            ].contract.get_implementation(this.constantOptions));
                }
              })),
            (this.fetchTricryptoFactoryPools = (...e) =>
              ok(this, [...e], void 0, function* (e = !0) {
                if ('tricrypto_factory' in this.constants.ALIASES) {
                  if (e)
                    this.constants.TRICRYPTO_FACTORY_POOLS_DATA = em(
                      yield pw.call(this, 'factory-tricrypto')
                    );
                  else {
                    if (this.isNoRPC) throw Error('RPC connection is required');
                    this.constants.TRICRYPTO_FACTORY_POOLS_DATA = em(yield pZ.call(this));
                  }
                  (this.constants.TRICRYPTO_FACTORY_POOLS_DATA = yield this._filterHiddenPools(
                    this.constants.TRICRYPTO_FACTORY_POOLS_DATA
                  )),
                    this._updateDecimalsAndGauges(this.constants.TRICRYPTO_FACTORY_POOLS_DATA),
                    1 === this.chainId
                      ? (this.constants.FACTORY_GAUGE_IMPLEMENTATIONS['factory-tricrypto'] = this
                          .isNoRPC
                          ? null
                          : yield this.contracts[
                              this.constants.ALIASES.tricrypto_factory
                            ].contract.gauge_implementation(this.constantOptions))
                      : (this.constants.FACTORY_GAUGE_IMPLEMENTATIONS['factory-tricrypto'] = this
                          .isNoRPC
                          ? null
                          : yield this.contracts[
                              this.constants.ALIASES.child_gauge_factory
                            ].contract.get_implementation(this.constantOptions));
                }
              })),
            (this.fetchNewFactoryPools = () =>
              ok(this, void 0, void 0, function* () {
                if (!('factory' in this.constants.ALIASES)) return [];
                let e = Object.keys(this.constants.FACTORY_POOLS_DATA),
                  t = 0 === e.length ? -1 : Number(e[e.length - 1].split('-')[2]),
                  n = em(yield py.call(this, t + 1));
                return (
                  (this.constants.FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.FACTORY_POOLS_DATA),
                    n
                  )),
                  this._updateDecimalsAndGauges(this.constants.FACTORY_POOLS_DATA),
                  Object.keys(n)
                );
              })),
            (this.fetchNewCryptoFactoryPools = () =>
              ok(this, void 0, void 0, function* () {
                if (!('crypto_factory' in this.constants.ALIASES)) return [];
                let e = Object.keys(this.constants.CRYPTO_FACTORY_POOLS_DATA),
                  t = 0 === e.length ? -1 : Number(e[e.length - 1].split('-')[2]),
                  n = em(yield pI.call(this, t + 1));
                return (
                  (this.constants.CRYPTO_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.CRYPTO_FACTORY_POOLS_DATA),
                    n
                  )),
                  this._updateDecimalsAndGauges(this.constants.CRYPTO_FACTORY_POOLS_DATA),
                  Object.keys(n)
                );
              })),
            (this.fetchNewStableNgFactoryPools = () =>
              ok(this, void 0, void 0, function* () {
                if (!('stable_ng_factory' in this.constants.ALIASES)) return [];
                let e = Object.keys(this.constants.STABLE_NG_FACTORY_POOLS_DATA),
                  t = 0 === e.length ? -1 : Number(e[e.length - 1].split('-')[3]),
                  n = em(
                    yield py.call(this, t + 1, void 0, this.constants.ALIASES.stable_ng_factory)
                  );
                return (
                  (this.constants.STABLE_NG_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.STABLE_NG_FACTORY_POOLS_DATA),
                    n
                  )),
                  this._updateDecimalsAndGauges(this.constants.STABLE_NG_FACTORY_POOLS_DATA),
                  Object.keys(n)
                );
              })),
            (this.fetchNewTwocryptoFactoryPools = () =>
              ok(this, void 0, void 0, function* () {
                if (!('twocrypto_factory' in this.constants.ALIASES)) return [];
                let e = Object.keys(this.constants.TWOCRYPTO_FACTORY_POOLS_DATA),
                  t = 0 === e.length ? -1 : Number(e[e.length - 1].split('-')[2]),
                  n = em(yield oC.call(this, t + 1));
                return (
                  (this.constants.TWOCRYPTO_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.TWOCRYPTO_FACTORY_POOLS_DATA),
                    n
                  )),
                  this._updateDecimalsAndGauges(this.constants.TWOCRYPTO_FACTORY_POOLS_DATA),
                  Object.keys(n)
                );
              })),
            (this.fetchNewTricryptoFactoryPools = () =>
              ok(this, void 0, void 0, function* () {
                if (!('tricrypto_factory' in this.constants.ALIASES)) return [];
                let e = Object.keys(this.constants.TRICRYPTO_FACTORY_POOLS_DATA),
                  t = 0 === e.length ? -1 : Number(e[e.length - 1].split('-')[2]),
                  n = em(yield pZ.call(this, t + 1));
                return (
                  (this.constants.TRICRYPTO_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.TRICRYPTO_FACTORY_POOLS_DATA),
                    n
                  )),
                  this._updateDecimalsAndGauges(this.constants.TRICRYPTO_FACTORY_POOLS_DATA),
                  Object.keys(n)
                );
              })),
            (this.fetchRecentlyDeployedFactoryPool = (e) =>
              ok(this, void 0, void 0, function* () {
                if (!('factory' in this.constants.ALIASES)) return '';
                let t = em(yield py.call(this, 0, e));
                return (
                  (this.constants.FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.FACTORY_POOLS_DATA),
                    t
                  )),
                  this._updateDecimalsAndGauges(this.constants.FACTORY_POOLS_DATA),
                  Object.keys(t)[0]
                );
              })),
            (this.fetchRecentlyDeployedCryptoFactoryPool = (e) =>
              ok(this, void 0, void 0, function* () {
                if (!('crypto_factory' in this.constants.ALIASES)) return '';
                let t = em(yield pI.call(this, 0, e));
                return (
                  (this.constants.CRYPTO_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.CRYPTO_FACTORY_POOLS_DATA),
                    t
                  )),
                  this._updateDecimalsAndGauges(this.constants.CRYPTO_FACTORY_POOLS_DATA),
                  Object.keys(t)[0]
                );
              })),
            (this.fetchRecentlyDeployedStableNgFactoryPool = (e) =>
              ok(this, void 0, void 0, function* () {
                if (!('stable_ng_factory' in this.constants.ALIASES)) return '';
                let t = em(yield py.call(this, 0, e, this.constants.ALIASES.stable_ng_factory));
                return (
                  (this.constants.STABLE_NG_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.STABLE_NG_FACTORY_POOLS_DATA),
                    t
                  )),
                  this._updateDecimalsAndGauges(this.constants.STABLE_NG_FACTORY_POOLS_DATA),
                  Object.keys(t)[0]
                );
              })),
            (this.fetchRecentlyDeployedTwocryptoFactoryPool = (e) =>
              ok(this, void 0, void 0, function* () {
                if (!('twocrypto_factory' in this.constants.ALIASES)) return '';
                let t = em(yield oC.call(this, 0, e));
                return (
                  (this.constants.TWOCRYPTO_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.TWOCRYPTO_FACTORY_POOLS_DATA),
                    t
                  )),
                  this._updateDecimalsAndGauges(this.constants.TWOCRYPTO_FACTORY_POOLS_DATA),
                  Object.keys(t)[0]
                );
              })),
            (this.fetchRecentlyDeployedTricryptoFactoryPool = (e) =>
              ok(this, void 0, void 0, function* () {
                if (!('tricrypto_factory' in this.constants.ALIASES)) return '';
                let t = em(yield pZ.call(this, 0, e));
                return (
                  (this.constants.TRICRYPTO_FACTORY_POOLS_DATA = Object.assign(
                    Object.assign({}, this.constants.TRICRYPTO_FACTORY_POOLS_DATA),
                    t
                  )),
                  this._updateDecimalsAndGauges(this.constants.TRICRYPTO_FACTORY_POOLS_DATA),
                  Object.keys(t)[0]
                );
              })),
            (this.getMainPoolList = () => Object.keys(this.constants.POOLS_DATA)),
            (this.getFactoryPoolList = () => Object.keys(this.constants.FACTORY_POOLS_DATA)),
            (this.getCrvusdFactoryPoolList = () =>
              Object.keys(this.constants.CRVUSD_FACTORY_POOLS_DATA)),
            (this.getEywaFactoryPoolList = () =>
              Object.keys(this.constants.EYWA_FACTORY_POOLS_DATA)),
            (this.getCryptoFactoryPoolList = () =>
              Object.keys(this.constants.CRYPTO_FACTORY_POOLS_DATA)),
            (this.getStableNgFactoryPoolList = () =>
              Object.keys(this.constants.STABLE_NG_FACTORY_POOLS_DATA)),
            (this.getTworyptoFactoryPoolList = () =>
              Object.keys(this.constants.TWOCRYPTO_FACTORY_POOLS_DATA)),
            (this.getTricryptoFactoryPoolList = () =>
              Object.keys(this.constants.TRICRYPTO_FACTORY_POOLS_DATA)),
            (this.getPoolList = () => [
              ...this.getMainPoolList(),
              ...this.getFactoryPoolList(),
              ...this.getCrvusdFactoryPoolList(),
              ...this.getEywaFactoryPoolList(),
              ...this.getCryptoFactoryPoolList(),
              ...this.getStableNgFactoryPoolList(),
              ...this.getTworyptoFactoryPoolList(),
              ...this.getTricryptoFactoryPoolList(),
            ]),
            (this.getPoolsData = () =>
              Object.assign(
                Object.assign(
                  Object.assign(
                    Object.assign(
                      Object.assign(
                        Object.assign(
                          Object.assign(
                            Object.assign(
                              Object.assign({}, this.constants.POOLS_DATA),
                              this.constants.FACTORY_POOLS_DATA
                            ),
                            this.constants.CRVUSD_FACTORY_POOLS_DATA
                          ),
                          this.constants.EYWA_FACTORY_POOLS_DATA
                        ),
                        this.constants.CRYPTO_FACTORY_POOLS_DATA
                      ),
                      this.constants.STABLE_NG_FACTORY_POOLS_DATA
                    ),
                    this.constants.TWOCRYPTO_FACTORY_POOLS_DATA
                  ),
                  this.constants.TRICRYPTO_FACTORY_POOLS_DATA
                ),
                this.constants.LLAMMAS_DATA
              )),
            (this.getGaugeImplementation = (e) =>
              this.constants.FACTORY_GAUGE_IMPLEMENTATIONS[e] || this.constants.ZERO_ADDRESS),
            (this.getNetworkConstants = () => this.constants),
            (this.getIsLiteChain = () => this.isLiteChain),
            (this.provider = null),
            (this.signer = null),
            (this.isNoRPC = !1),
            (this.signerAddress = ''),
            (this.chainId = 1),
            (this.isLiteChain = !1),
            (this.multicallProvider = null),
            (this.contracts = {}),
            (this.feeData = {}),
            (this.constantOptions = { gasLimit: 12e6 }),
            (this.options = {}),
            (this.constants = {
              NATIVE_TOKEN: n8[1].NATIVE_COIN,
              NETWORK_NAME: 'ethereum',
              ALIASES: {},
              POOLS_DATA: {},
              STABLE_FACTORY_CONSTANTS: {},
              CRYPTO_FACTORY_CONSTANTS: {},
              FACTORY_POOLS_DATA: {},
              CRVUSD_FACTORY_POOLS_DATA: {},
              EYWA_FACTORY_POOLS_DATA: {},
              CRYPTO_FACTORY_POOLS_DATA: {},
              TWOCRYPTO_FACTORY_POOLS_DATA: {},
              TRICRYPTO_FACTORY_POOLS_DATA: {},
              STABLE_NG_FACTORY_POOLS_DATA: {},
              BASE_POOLS: {},
              LLAMMAS_DATA: {},
              COINS: {},
              DECIMALS: {},
              GAUGES: [],
              FACTORY_GAUGE_IMPLEMENTATIONS: {},
              ZERO_ADDRESS: a8.j,
            });
        }
        init(e, t) {
          return ok(this, arguments, void 0, function* (e, t, n = {}) {
            var a, i, s, u, p, o, y, d, m, r;
            if (
              ((this.provider = null),
              (this.signer = null),
              (this.isNoRPC = !1),
              (this.signerAddress = ''),
              (this.chainId = 1),
              (this.multicallProvider = null),
              (this.contracts = {}),
              (this.feeData = {}),
              (this.constantOptions = { gasLimit: 12e6 }),
              (this.options = {}),
              (this.constants = {
                NATIVE_TOKEN: n8[1].NATIVE_COIN,
                NETWORK_NAME: 'ethereum',
                ALIASES: {},
                POOLS_DATA: {},
                STABLE_FACTORY_CONSTANTS: {},
                CRYPTO_FACTORY_CONSTANTS: {},
                FACTORY_POOLS_DATA: {},
                CRVUSD_FACTORY_POOLS_DATA: {},
                EYWA_FACTORY_POOLS_DATA: {},
                CRYPTO_FACTORY_POOLS_DATA: {},
                TWOCRYPTO_FACTORY_POOLS_DATA: {},
                TRICRYPTO_FACTORY_POOLS_DATA: {},
                STABLE_NG_FACTORY_POOLS_DATA: {},
                BASE_POOLS: {},
                LLAMMAS_DATA: {},
                COINS: {},
                DECIMALS: {},
                GAUGES: [],
                FACTORY_GAUGE_IMPLEMENTATIONS: {},
                ZERO_ADDRESS: a8.j,
              }),
              (this.initContract = oT()),
              (this.initMulticallContract = oS()),
              'jsonrpc' === e.toLowerCase())
            ) {
              let e;
              if (
                (t.batchMaxCount && (e = { batchMaxCount: t.batchMaxCount }),
                t.url
                  ? (this.provider = new a3.FR(t.url, void 0, e))
                  : (this.provider = new a3.FR('http://localhost:8545/', void 0, e)),
                t.privateKey)
              )
                this.signer = new sG(t.privateKey, this.provider);
              else if (
                !(null === (a = t.url) || void 0 === a
                  ? void 0
                  : a.startsWith('https://rpc.gnosischain.com'))
              )
                try {
                  this.signer = yield this.provider.getSigner();
                } catch (e) {
                  this.signer = null;
                }
            } else if ('web3' === e.toLowerCase())
              (this.provider = new sW.k(t.externalProvider)),
                (this.signer = yield this.provider.getSigner());
            else if ('infura' === e.toLowerCase())
              (this.provider = new s8(t.network, t.apiKey)), (this.signer = null);
            else if ('alchemy' === e.toLowerCase())
              (this.provider = new s4(t.network, t.apiKey)), (this.signer = null);
            else if ('norpc' === e.toLowerCase()) {
              if (((this.isNoRPC = !0), (this.signer = null), !n.chainId))
                throw Error('ChainId is required for NoRPC provider');
            } else throw Error('Wrong providerType');
            let l = this.isNoRPC
              ? { chainId: n.chainId, name: 'NoRPC' }
              : yield this.provider.getNetwork();
            console.log('CURVE-JS IS CONNECTED TO NETWORK:', {
              name: l.name.toUpperCase(),
              chainId: Number(l.chainId),
            }),
              (this.chainId =
                133 === Number(l.chainId) || 31337 === Number(l.chainId) ? 1 : Number(l.chainId)),
              (this.isLiteChain = !(this.chainId in n8));
            let c = yield aj.call(this, this.chainId);
            for (let e in ((this.constants.NATIVE_TOKEN = c.NATIVE_COIN),
            (this.constants.NETWORK_NAME = c.NAME),
            (this.constants.ALIASES = c.ALIASES),
            (this.constants.ALIASES.anycall = '0x37414a8662bc1d25be3ee51fb27c2686e2490a89'),
            (this.constants.ALIASES.voting_escrow_oracle =
              '0x12F407340697Ae0b177546E535b91A5be021fBF9'),
            (this.constants.POOLS_DATA = null !== (i = c.POOLS_DATA) && void 0 !== i ? i : {}),
            (this.constants.LLAMMAS_DATA = null !== (s = c.LLAMMAS_DATA) && void 0 !== s ? s : {}),
            this.constants.POOLS_DATA))
              this.constants.POOLS_DATA[e].in_api = !0;
            (this.constants.COINS = null !== (u = c.COINS) && void 0 !== u ? u : {}),
              (this.constants.DECIMALS = er(
                Object.assign(
                  Object.assign({}, this.constants.POOLS_DATA),
                  this.constants.LLAMMAS_DATA
                )
              )),
              (this.constants.DECIMALS[this.constants.NATIVE_TOKEN.address] = 18),
              (this.constants.DECIMALS[this.constants.NATIVE_TOKEN.wrappedAddress] = 18),
              (this.constants.GAUGES = el.call(this, this.constants.POOLS_DATA)),
              this.isLiteChain && (this.constants.API_CONSTANTS = c.API_CONSTANTS);
            let [f, _, b, g] = [
                null !== (p = c.cTokens) && void 0 !== p ? p : [],
                null !== (o = c.yTokens) && void 0 !== o ? o : [],
                null !== (y = c.ycTokens) && void 0 !== y ? y : [],
                null !== (d = c.aTokens) && void 0 !== d ? d : [],
              ],
              v = [...f, ..._, ...b, ...g];
            if (
              (this.isLiteChain
                ? (this.constants.STABLE_FACTORY_CONSTANTS.stableNgBasePoolZap =
                    c.stableNgBasePoolZap)
                : ((this.constants.STABLE_FACTORY_CONSTANTS =
                    null !== (m = uV[this.chainId]) && void 0 !== m ? m : {}),
                  (this.constants.CRYPTO_FACTORY_CONSTANTS =
                    null !== (r = u2[this.chainId]) && void 0 !== r ? r : {})),
              5e3 === this.chainId && (this.constantOptions = {}),
              (this.multicallProvider = new K(this.chainId, this.provider)),
              this.signer)
            )
              try {
                this.signerAddress = yield this.signer.getAddress();
              } catch (e) {
                this.signer = null;
              }
            else this.signerAddress = '';
            for (let e of ((this.feeData = {
              gasPrice: n.gasPrice,
              maxFeePerGas: n.maxFeePerGas,
              maxPriorityFeePerGas: n.maxPriorityFeePerGas,
            }),
            n.poolsData && en(this.constants.NETWORK_NAME, this.isLiteChain, n.poolsData),
            yield this.updateFeeData(),
            Object.values(
              Object.assign(
                Object.assign({}, this.constants.POOLS_DATA),
                this.constants.LLAMMAS_DATA
              )
            ))) {
              for (let t of (this.setContract(e.swap_address, e.swap_abi),
              e.token_address !== e.swap_address && this.setContract(e.token_address, eu),
              e.gauge_address !== this.constants.ZERO_ADDRESS &&
                this.setContract(e.gauge_address, e.gauge_abi),
              e.deposit_address &&
                !this.contracts[e.deposit_address] &&
                this.setContract(e.deposit_address, e.deposit_abi),
              e.underlying_coin_addresses))
                this.setContract(t, eu);
              for (let t of e.wrapped_coin_addresses)
                !v.includes(t) && (t in this.contracts || this.setContract(t, eu));
              for (let t of e.wrapped_coin_addresses)
                f.includes(t) && this.setContract(t, pV),
                  g.includes(t) && this.setContract(t, eu),
                  (_.includes(t) || b.includes(t)) && this.setContract(t, pJ);
              e.reward_contract && this.setContract(e.reward_contract, t2),
                e.sCurveRewards_address &&
                  this.setContract(e.sCurveRewards_address, e.sCurveRewards_abi);
            }
            if (
              (this.setContract(this.constants.NATIVE_TOKEN.wrappedAddress, eu),
              this.setContract(this.constants.ALIASES.crv, eu),
              (this.constants.DECIMALS[this.constants.ALIASES.crv] = 18),
              this.setContract(this.constants.COINS.scrvusd, eu),
              (this.constants.DECIMALS[this.constants.COINS.scrvusd] = 18),
              1 === this.chainId
                ? (this.setContract(this.constants.ALIASES.minter, pK),
                  this.setContract(this.constants.ALIASES.fee_distributor_crvusd, p0),
                  this.setContract(this.constants.ALIASES.root_gauge_factory, ol))
                : (this.setContract(this.constants.ALIASES.child_gauge_factory, pH),
                  'child_gauge_factory_old' in this.constants.ALIASES &&
                    this.setContract(this.constants.ALIASES.child_gauge_factory_old, pH)),
              this.setContract(this.constants.ALIASES.voting_escrow, pz),
              this.setContract(this.constants.ALIASES.fee_distributor, p5),
              this.setContract(this.constants.ALIASES.gauge_controller, p6),
              137 == this.chainId
                ? this.setContract(this.constants.ALIASES.router, p7)
                : 'factory' in this.constants.ALIASES
                  ? this.setContract(this.constants.ALIASES.router, p9)
                  : this.setContract(this.constants.ALIASES.router, oe),
              oD.includes(this.chainId)
                ? this.setContract(this.constants.ALIASES.deposit_and_stake, p1)
                : this.setContract(this.constants.ALIASES.deposit_and_stake, p8),
              this.setContract(this.constants.ALIASES.crypto_calc, p3),
              this.setContract(this.constants.ALIASES.stable_calc, p4),
              'factory' in this.constants.ALIASES)
            ) {
              this.setContract(this.constants.ALIASES.factory, ot);
              let e = this.contracts[this.constants.ALIASES.factory].contract;
              this.isNoRPC ||
                ((this.constants.ALIASES.factory_admin = (yield e.admin(
                  this.constantOptions
                )).toLowerCase()),
                this.setContract(this.constants.ALIASES.factory_admin, oa));
            }
            if (
              (this.setContract(this.constants.ALIASES.crvusd_factory, ot),
              this.setContract(this.constants.ALIASES.eywa_factory, on),
              this.setContract(this.constants.ALIASES.crypto_factory, oi),
              this.setContract(this.constants.ALIASES.stable_ng_factory, oo),
              this.setContract(this.constants.ALIASES.twocrypto_factory, os),
              1 == this.chainId
                ? this.setContract(this.constants.ALIASES.tricrypto_factory, ou)
                : this.setContract(this.constants.ALIASES.tricrypto_factory, op),
              this.setContract(this.constants.ALIASES.anycall, pX),
              this.setContract(
                this.constants.ALIASES.voting_escrow_oracle,
                1 === this.chainId ? p2 : pQ
              ),
              1 === this.chainId &&
                (this.setContract(this.constants.ALIASES.voting_parameter, om),
                this.setContract(this.constants.ALIASES.voting_ownership, om),
                this.setContract(this.constants.ALIASES.circulating_supply, or)),
              ep.includes(this.chainId))
            ) {
              let e = this;
              e.setContract(e.constants.ALIASES.gas_oracle, oy),
                e.setContract(e.constants.ALIASES.gas_oracle_blob, od),
                'originalEstimate' in sK.Q.prototype &&
                  (sK.Q.prototype.estimateGas = sK.Q.prototype.originalEstimate);
              let t = sK.Q.prototype.estimateGas;
              (sK.Q.prototype.estimateGas = function (n) {
                return ok(this, void 0, void 0, function* () {
                  let a = yield e.contracts[
                      e.constants.ALIASES.gas_oracle_blob
                    ].contract.getL1GasUsed(n.data),
                    i = yield e.contracts[e.constants.ALIASES.gas_oracle_blob].contract.getL1Fee(
                      n.data
                    );
                  return (e.L1WeightedGasPrice = Number(i) / Number(a)), [yield t.call(this, n), a];
                });
              }),
                (sK.Q.prototype.originalEstimate = t);
            } else
              'originalEstimate' in sK.Q.prototype &&
                (sK.Q.prototype.estimateGas = sK.Q.prototype.originalEstimate);
          });
        }
        setContract(e, t) {
          if (e === this.constants.ZERO_ADDRESS || void 0 === e) return;
          let n = this;
          this.contracts[e] = new Proxy(
            { address: e, abi: t },
            {
              get: function (e, t) {
                return 'contract' === t
                  ? n.initContract(e.address, e.abi, n.signer || n.provider)
                  : 'multicallContract' === t
                    ? n.initMulticallContract(e.address, e.abi)
                    : e[t];
              },
            }
          );
        }
        _filterHiddenPools(e) {
          return ok(this, void 0, void 0, function* () {
            let t = (yield f())[this.constants.NETWORK_NAME] || [];
            return Object.fromEntries(Object.entries(e).filter(([e]) => !t.includes(e)));
          });
        }
        _updateDecimalsAndGauges(e) {
          (this.constants.DECIMALS = Object.assign(
            Object.assign({}, this.constants.DECIMALS),
            er(e)
          )),
            (this.constants.GAUGES = [...this.constants.GAUGES, ...el.call(this, e)]);
        }
        setCustomFeeData(e) {
          this.feeData = Object.assign(Object.assign({}, this.feeData), e);
        }
        formatUnits(e, t) {
          return ey(e, t);
        }
        parseUnits(e, t) {
          return ed(e, t);
        }
        updateFeeData() {
          return ok(this, void 0, void 0, function* () {
            if (this.isNoRPC) return;
            let e = yield this.provider.getFeeData();
            null === e.maxFeePerGas || null === e.maxPriorityFeePerGas
              ? (delete this.options.maxFeePerGas,
                delete this.options.maxPriorityFeePerGas,
                (this.options.gasPrice =
                  void 0 !== this.feeData.gasPrice
                    ? this.parseUnits(this.feeData.gasPrice.toString(), 'gwei')
                    : e.gasPrice || this.parseUnits('20', 'gwei')))
              : (delete this.options.gasPrice,
                (this.options.maxFeePerGas =
                  void 0 !== this.feeData.maxFeePerGas && null !== this.feeData.maxFeePerGas
                    ? this.parseUnits(this.feeData.maxFeePerGas.toString(), 'gwei')
                    : e.maxFeePerGas),
                (this.options.maxPriorityFeePerGas =
                  void 0 !== this.feeData.maxPriorityFeePerGas &&
                  null !== this.feeData.maxPriorityFeePerGas
                    ? this.parseUnits(this.feeData.maxPriorityFeePerGas.toString(), 'gwei')
                    : e.maxPriorityFeePerGas));
          });
        }
      }
      new oO();
      var oF = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      class oB {
        constructor(e, t, n) {
          (this.address = e),
            (this.poolName = t),
            (this.curve = n),
            (this.address = e),
            (this.poolName = t),
            (this.estimateGas = {
              addReward: this.addRewardEstimateGas.bind(this),
              depositRewardApprove: this.depositRewardApproveEstimateGas.bind(this),
              depositReward: this.depositRewardEstimateGas.bind(this),
            });
        }
        gaugeManager() {
          return oF(this, void 0, void 0, function* () {
            let e = this.curve;
            if (!this.address || this.address === e.constants.ZERO_ADDRESS)
              return e.constants.ZERO_ADDRESS;
            try {
              return yield e.contracts[this.address].contract.manager();
            } catch (t) {
              return e.constants.ZERO_ADDRESS;
            }
          });
        }
        gaugeDistributors() {
          return oF(this, void 0, void 0, function* () {
            let { contract: e, multicallContract: t } = this.curve.contracts[this.address],
              n = Number(
                this.curve.formatUnits(yield e.reward_count(this.curve.constantOptions), 0)
              ),
              a = [];
            for (let e = 0; e < n; e++) a.push(t.reward_tokens(e));
            let i = yield this.curve.multicallProvider.all(a);
            a = [];
            for (let e = 0; e < n; e++) a.push(t.reward_data(i[e]));
            let s = yield this.curve.multicallProvider.all(a),
              u = {};
            for (let e = 0; e < n; e++) u[i[e]] = s[e].distributor;
            return u;
          });
        }
        gaugeVersion() {
          return oF(this, void 0, void 0, function* () {
            let e = this.curve;
            if (!this.address || this.address === e.constants.ZERO_ADDRESS) return null;
            try {
              return yield e.contracts[this.address].contract.version();
            } catch (e) {
              return null;
            }
          });
        }
        _addReward(e, t) {
          return oF(this, arguments, void 0, function* (e, t, n = !1) {
            let a = this.curve;
            if (this.address !== a.constants.ZERO_ADDRESS && this.address) {
              let i = yield a.contracts[this.address].contract.add_reward.estimateGas(
                e,
                t,
                Object.assign({}, a.constantOptions)
              );
              if (n) return ad(i);
              let s = ay(am(i));
              return (yield a.contracts[this.address].contract.add_reward(
                e,
                t,
                Object.assign(Object.assign({}, a.options), { gasLimit: s })
              )).hash;
            }
            throw Error(`Pool ${this.poolName} does not have gauge`);
          });
        }
        addRewardEstimateGas(e, t) {
          return oF(this, void 0, void 0, function* () {
            return yield this._addReward(e, t, !0);
          });
        }
        addReward(e, t) {
          return oF(this, void 0, void 0, function* () {
            return yield this._addReward(e, t);
          });
        }
        isDepositRewardAvailable() {
          return oF(this, void 0, void 0, function* () {
            let e = yield this.gaugeVersion();
            return e ? ['v6.1.0'].includes(e) : !!e;
          });
        }
        depositRewardIsApproved(e, t) {
          return oF(this, void 0, void 0, function* () {
            return yield aM.call(this.curve, [e], [t], this.curve.signerAddress, this.address);
          });
        }
        depositRewardApproveEstimateGas(e, t) {
          return oF(this, void 0, void 0, function* () {
            return yield aE.call(this.curve, [e], [t], this.address);
          });
        }
        depositRewardApprove(e, t) {
          return oF(this, void 0, void 0, function* () {
            return yield aC.call(this.curve, [e], [t], this.address);
          });
        }
        _depositReward(e, t, n) {
          return oF(this, arguments, void 0, function* (e, t, n, a = !1) {
            let i = this.curve;
            a || (yield aC.call(i, [e], [t], this.address));
            let s = i.contracts[this.address].contract,
              u = an(t, (yield aV.call(i, e))[0].decimals),
              p = yield s.deposit_reward_token.estimateGas(
                e,
                u,
                n,
                Object.assign({}, i.constantOptions)
              );
            if (a) return ad(p);
            let o = ay(am(p));
            return (yield s.deposit_reward_token(
              e,
              u,
              n,
              Object.assign(Object.assign({}, i.options), { gasLimit: o })
            )).hash;
          });
        }
        depositRewardEstimateGas(e, t, n) {
          return oF(this, void 0, void 0, function* () {
            return yield this._depositReward(e, t, n, !0);
          });
        }
        depositReward(e, t, n) {
          return oF(this, void 0, void 0, function* () {
            return yield this._depositReward(e, t, n);
          });
        }
      }
      class oR {
        constructor(e, t, n) {
          var a, i;
          if (((this.curve = n), !t)) throw Error(`Pool data is required for pool ${e}`);
          (this.id = e),
            (this.name = t.name),
            (this.fullName = t.full_name),
            (this.symbol = t.symbol),
            (this.referenceAsset = t.reference_asset),
            (this.address = t.swap_address),
            (this.lpToken = t.token_address),
            (this.gauge = new oB(t.gauge_address, t.name, n)),
            (this.zap = t.deposit_address || null),
            (this.sRewardContract = t.sCurveRewards_address || null),
            (this.rewardContract = t.reward_contract || null),
            (this.implementation = t.implementation_address || null),
            (this.isPlain = t.is_plain || !1),
            (this.isLending = t.is_lending || !1),
            (this.isMeta = t.is_meta || !1),
            (this.isCrypto = t.is_crypto || !1),
            (this.isFake = t.is_fake || !1),
            (this.isFactory = t.is_factory || !1),
            (this.isMetaFactory =
              (this.isMeta && this.isFactory) ||
              '0xa79828df1850e8a3a3064576f380d90aecdd3359' === this.zap),
            (this.isNg = t.is_ng || !1),
            (this.isLlamma = t.is_llamma || !1),
            (this.basePool = t.base_pool || ''),
            (this.metaCoinIdx = this.isMeta
              ? null !== (a = t.meta_coin_idx) && void 0 !== a
                ? a
                : t.wrapped_coins.length - 1
              : -1),
            (this.underlyingCoins = t.underlying_coins),
            (this.wrappedCoins = t.wrapped_coins),
            (this.underlyingCoinAddresses = t.underlying_coin_addresses),
            (this.wrappedCoinAddresses = t.wrapped_coin_addresses),
            (this.underlyingDecimals = t.underlying_decimals),
            (this.wrappedDecimals = t.wrapped_decimals),
            (this.useLending = t.use_lending || t.underlying_coin_addresses.map(() => !1)),
            (this.inApi = null !== (i = t.in_api) && void 0 !== i && i);
        }
      }
      var oI = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      class oL {
        constructor(e) {
          (this.parameters = () =>
            oI(this, void 0, void 0, function* () {
              let e, t, n, a, i, s, u;
              let p = this.pool.curve,
                o = p.contracts[this.pool.address].multicallContract,
                y = p.contracts[this.pool.lpToken].multicallContract,
                d = [
                  o.get_virtual_price(),
                  o.fee(),
                  'admin_fee' in o ? o.admin_fee() : o.ADMIN_FEE(),
                  o.A(),
                  y.totalSupply(),
                ];
              if (this.pool.isCrypto) {
                if ((d.push(o.gamma()), 2 === this.pool.wrappedCoins.length))
                  d.push(o.price_oracle()), d.push(o.price_scale());
                else
                  for (let e = 0; e < this.pool.wrappedCoins.length - 1; e++)
                    d.push(o.price_oracle(e)), d.push(o.price_scale(e));
              }
              let m = this.pool.isCrypto ? [] : [o.future_A()];
              'initial_A' in o && m.push(o.initial_A(), o.future_A_time(), o.initial_A_time());
              let r = p.parseUnits('0'),
                l = p.parseUnits('0');
              try {
                [r, l, t, n, a, i, ...e] = yield p.multicallProvider.all(d);
              } catch (s) {
                d.shift(),
                  this.pool.isCrypto
                    ? (d.shift(), ([t, n, a, i, ...e] = yield p.multicallProvider.all(d)))
                    : ([l, t, n, a, i, ...e] = yield p.multicallProvider.all(d));
              }
              let [c, f, _, b, g, v] = [
                p.formatUnits(r),
                p.formatUnits(l, 8),
                p.formatUnits(t * l),
                p.formatUnits(n, 0),
                p.formatUnits(a),
                i ? p.formatUnits(i) : void 0,
              ];
              if (this.pool.isCrypto) {
                let t = e.map((e) => p.formatUnits(e));
                (s = []), (u = []);
                for (let e = 0; e < this.pool.wrappedCoins.length - 1; e++)
                  s.push(t.shift()), u.push(t.shift());
              }
              let w =
                  1 === p.chainId &&
                  [
                    'compound',
                    'usdt',
                    'y',
                    'busd',
                    'susd',
                    'pax',
                    'ren',
                    'sbtc',
                    'hbtc',
                    '3pool',
                  ].includes(this.pool.id)
                    ? 1
                    : 100,
                [h, x, M, A] = yield p.multicallProvider.all(m),
                [E, C, k, D] = [
                  h ? String(Number(p.formatUnits(h, 0)) / w) : void 0,
                  x ? String(Number(p.formatUnits(x, 0)) / w) : void 0,
                  M ? 1e3 * Number(p.formatUnits(M, 0)) : void 0,
                  A ? 1e3 * Number(p.formatUnits(A, 0)) : void 0,
                ];
              return {
                lpTokenSupply: g,
                virtualPrice: c,
                fee: f,
                adminFee: _,
                A: b,
                future_A: E,
                initial_A: C,
                future_A_time: k,
                initial_A_time: D,
                gamma: v,
                priceOracle: s,
                priceScale: u,
              };
            })),
            (this.totalLiquidity = (...e) =>
              oI(this, [...e], void 0, function* (e = !0) {
                let t = this.pool.curve;
                if (1 === t.chainId && 'crveth' === this.pool.id) return '0';
                if (this.pool.isLlamma) {
                  let e = t.contracts[this.pool.underlyingCoinAddresses[0]].multicallContract,
                    n = t.contracts[this.pool.underlyingCoinAddresses[1]].multicallContract,
                    a = t.contracts[this.pool.address].multicallContract,
                    [i, s, u, p] = yield t.multicallProvider.all([
                      e.balanceOf(this.pool.address),
                      a.admin_fees_x(),
                      n.balanceOf(this.pool.address),
                      a.admin_fees_y(),
                    ]),
                    o = yield aS.call(t, this.pool.underlyingCoinAddresses[1]),
                    y = ai(i).minus(ai(s)),
                    d = ai(u).minus(ai(p)).times(o);
                  return y.plus(d).toString();
                }
                if (e) {
                  let e = t.constants.NETWORK_NAME,
                    n = this.pool.isCrypto ? 'crypto' : 'main';
                  this.pool.id.startsWith('factory') &&
                    (n = (n = this.pool.id.replace(/-\d+$/, '')).replace(/-v2$/, ''));
                  let a = (yield et.call(t, e, n, t.isLiteChain)).poolData;
                  try {
                    let e = a.filter(
                      (e) => e.address.toLowerCase() === this.pool.address.toLowerCase()
                    )[0].usdTotal;
                    return String(e);
                  } catch (e) {
                    console.log(this.pool.id, e.message);
                  }
                }
                let n = yield this.underlyingBalances(),
                  a = [];
                for (let e of this.pool.underlyingCoinAddresses) a.push(aS.call(t, e));
                let i = yield Promise.all(a);
                return n.reduce((e, t, n) => e + Number(t) * i[n], 0).toFixed(8);
              })),
            (this.totalLiquidityMemoized = a(this.totalLiquidity.bind(this), {
              promise: !0,
              maxAge: 3e5,
            })),
            (this.volume = () =>
              oI(this, void 0, void 0, function* () {
                let e = this.pool.curve;
                if (e.isLiteChain && 146 !== e.chainId)
                  throw Error('This method is not supported for the lite version');
                let t = e.constants.NETWORK_NAME,
                  { poolsData: n } = yield a$.call(e, t),
                  a = n.find((e) => e.address.toLowerCase() === this.pool.address);
                if (a) return a.volumeUSD.toString();
                throw Error(`Can't get Volume for ${this.pool.name} (id: ${this.pool.id})`);
              })),
            (this.baseApy = () =>
              oI(this, void 0, void 0, function* () {
                let e = this.pool.curve;
                if (e.isLiteChain && 146 !== e.chainId)
                  throw Error('baseApy is not supported for the lite version');
                let t = e.constants.NETWORK_NAME,
                  { poolsData: n } = yield a$.call(e, t),
                  a = n.find((e) => e.address.toLowerCase() === this.pool.address);
                if (a) return { day: a.day.toString(), week: a.week.toString() };
                throw Error(`Can't get base APY for ${this.pool.name} (id: ${this.pool.id})`);
              })),
            (this.tokenApy = (...e) =>
              oI(this, [...e], void 0, function* (e = !0) {
                var t;
                let n = this.pool.curve;
                if (n.isLiteChain && 146 !== n.chainId)
                  throw Error('tokenApy is not supported for the lite version');
                if (this.pool.rewardsOnly())
                  throw Error(
                    `${this.pool.name} has Rewards-Only Gauge. Use stats.rewardsApy instead`
                  );
                let a = [0x4e454152].includes(n.chainId);
                if (e && !a) {
                  let e =
                    null !==
                      (t = (yield es(n.constants.NETWORK_NAME, n.isLiteChain))[
                        this.pool.gauge.address
                      ]) && void 0 !== t
                      ? t
                      : [0, 0];
                  return [e[0], e[1]];
                }
                return yield this.pool._calcTokenApy();
              })),
            (this.rewardsApy = (...e) =>
              oI(this, [...e], void 0, function* (e = !0) {
                let t = this.pool.curve;
                if (this.pool.gauge.address === t.constants.ZERO_ADDRESS) return [];
                let n = [0x4e454152].includes(t.chainId);
                if (e && !n) {
                  let e = yield aD.call(t);
                  return e[this.pool.gauge.address]
                    ? e[this.pool.gauge.address].map((e) => ({
                        gaugeAddress: e.gaugeAddress,
                        tokenAddress: e.tokenAddress,
                        symbol: e.symbol,
                        apy: e.apy,
                      }))
                    : [];
                }
                let a = [];
                for (let e of yield this.pool.rewardTokens(!1)) {
                  let n = t.contracts[this.pool.gauge.address].multicallContract,
                    i = t.contracts[this.pool.lpToken].multicallContract,
                    s =
                      t.contracts[this.pool.sRewardContract || this.pool.gauge.address]
                        .multicallContract,
                    u = yield this.totalLiquidity(),
                    p = yield aS.call(t, e.token),
                    [o, y, d] = yield t.multicallProvider.all([
                      s.reward_data(e.token),
                      n.totalSupply(),
                      i.totalSupply(),
                    ]),
                    m = ai(y),
                    r = ai(d),
                    l = ai(o.rate, e.decimals),
                    c =
                      1e3 * Number(t.formatUnits(o.period_finish, 0)) > Date.now()
                        ? l.times(31536e3).times(p).div(m).times(r).div(Number(u))
                        : aa(0);
                  a.push({
                    gaugeAddress: this.pool.gauge.address,
                    tokenAddress: e.token,
                    symbol: e.symbol,
                    apy: c.times(100).toNumber(),
                  });
                }
                return a;
              })),
            (this.pool = e);
        }
        wrappedBalances() {
          return oI(this, void 0, void 0, function* () {
            let e = this.pool.curve,
              t = e.contracts[this.pool.address].multicallContract,
              n = [];
            for (let e = 0; e < this.pool.wrappedCoins.length; e++) n.push(t.balances(e));
            return (yield e.multicallProvider.all(n)).map((t, n) =>
              e.formatUnits(t, this.pool.wrappedDecimals[n])
            );
          });
        }
        underlyingBalances() {
          return oI(this, void 0, void 0, function* () {
            return yield this.wrappedBalances();
          });
        }
      }
      var oN = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      class oP {
        constructor(e, t = e.curve) {
          (this.curve = t),
            (this._balances = (e, t, ...n) =>
              oN(this, void 0, void 0, function* () {
                let a = [],
                  i = [];
                for (let n = 0; n < t.length; n++) i.includes(t[n]) || (a.push(e[n]), i.push(t[n]));
                n = ag.call(this.curve, n);
                let s = yield ab.call(this.curve, i, n),
                  u = {};
                for (let e of n) for (let t of ((u[e] = {}), a)) u[e][t] = s[e].shift();
                return 1 === n.length ? u[n[0]] : u;
              })),
            (this.pool = e);
        }
        balances(...e) {
          return oN(this, void 0, void 0, function* () {
            return this.pool.gauge.address === this.curve.constants.ZERO_ADDRESS
              ? yield this._balances(
                  [
                    'lpToken',
                    ...this.pool.underlyingCoinAddresses,
                    ...this.pool.wrappedCoinAddresses,
                  ],
                  [
                    this.pool.lpToken,
                    ...this.pool.underlyingCoinAddresses,
                    ...this.pool.wrappedCoinAddresses,
                  ],
                  ...e
                )
              : yield this._balances(
                  [
                    'lpToken',
                    'gauge',
                    ...this.pool.underlyingCoinAddresses,
                    ...this.pool.wrappedCoinAddresses,
                  ],
                  [
                    this.pool.lpToken,
                    this.pool.gauge.address,
                    ...this.pool.underlyingCoinAddresses,
                    ...this.pool.wrappedCoinAddresses,
                  ],
                  ...e
                );
          });
        }
        lpTokenBalances(...e) {
          return oN(this, void 0, void 0, function* () {
            return this.pool.gauge.address === this.curve.constants.ZERO_ADDRESS
              ? yield this._balances(['lpToken'], [this.pool.lpToken], ...e)
              : yield this._balances(
                  ['lpToken', 'gauge'],
                  [this.pool.lpToken, this.pool.gauge.address],
                  ...e
                );
          });
        }
        underlyingCoinBalances(...e) {
          return oN(this, void 0, void 0, function* () {
            return yield this._balances(
              this.pool.underlyingCoinAddresses,
              this.pool.underlyingCoinAddresses,
              ...e
            );
          });
        }
        wrappedCoinBalances(...e) {
          return oN(this, void 0, void 0, function* () {
            return yield this._balances(
              this.pool.wrappedCoinAddresses,
              this.pool.wrappedCoinAddresses,
              ...e
            );
          });
        }
        allCoinBalances(...e) {
          return oN(this, void 0, void 0, function* () {
            return yield this._balances(
              [...this.pool.underlyingCoinAddresses, ...this.pool.wrappedCoinAddresses],
              [...this.pool.underlyingCoinAddresses, ...this.pool.wrappedCoinAddresses],
              ...e
            );
          });
        }
      }
      var oq = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function oj(e) {
        return oq(this, void 0, void 0, function* () {
          let t = [];
          for (let n = 0; n < e.length; n += 50) {
            let a = e.slice(n, n + 50),
              i = yield this.multicallProvider.all(a);
            t.push(...i);
          }
          return t;
        });
      }
      let oU = {},
        o$ = (e, t) => {
          var n, a;
          return (
            ((null === (a = null === (n = oU[e]) || void 0 === n ? void 0 : n[t]) || void 0 === a
              ? void 0
              : a.time) || 0) +
              6e5 <
            Date.now()
          );
        };
      function oG(e, t, n) {
        return oq(this, void 0, void 0, function* () {
          var a;
          let i = n ? e.filter((e) => o$(t, e)) : e;
          if (i.length > 0) {
            let e = [];
            for (let n of i) {
              let a = dw.call(this, n);
              e.push(this.contracts[a.lpToken].multicallContract.balanceOf(t)),
                a.gauge.address &&
                  a.gauge.address !== this.constants.ZERO_ADDRESS &&
                  e.push(this.contracts[a.gauge.address].multicallContract.balanceOf(t));
            }
            let n = yield oj.call(this, e);
            for (let e of i) {
              let a = dw.call(this, e),
                i = n.shift();
              a.gauge.address &&
                a.gauge.address !== this.constants.ZERO_ADDRESS &&
                (i += n.shift()),
                oU[t] || (oU[t] = {}),
                (oU[t][e] = { _lpBalance: i, time: Date.now() });
            }
          }
          let s = [];
          for (let n of e) s.push(null === (a = oU[t]) || void 0 === a ? void 0 : a[n]._lpBalance);
          return s;
        });
      }
      function oW() {
        return oq(this, arguments, void 0, function* (e = this.signerAddress) {
          let t = this.getPoolList(),
            n = yield oG.call(this, t, e, !1),
            a = [];
          for (let e = 0; e < t.length; e++) n[e] > 0 && a.push(t[e]);
          return a;
        });
      }
      function oY(e) {
        return oq(this, arguments, void 0, function* (e, t = this.signerAddress) {
          let n = yield oG.call(this, e, t, !0),
            a = [];
          for (let t = 0; t < e.length; t++) {
            let i = dw.call(this, e[t]),
              s = yield aS.call(this, i.lpToken);
            a.push(ai(n[t]).times(s).toFixed(8));
          }
          return a;
        });
      }
      let oZ = {},
        oV = (e, t) => {
          var n, a;
          return (
            ((null === (a = null === (n = oZ[e]) || void 0 === n ? void 0 : n[t]) || void 0 === a
              ? void 0
              : a.time) || 0) +
              6e5 <
            Date.now()
          );
        };
      function oJ(e, t, n) {
        return oq(this, void 0, void 0, function* () {
          var a;
          let i = n ? e.filter((e) => oV(t, e)) : e;
          if (i.length > 0) {
            let e = [];
            for (let t of i) {
              let n = dw.call(this, t);
              if (
                324 === this.chainId ||
                2222 === this.chainId ||
                n.gauge.address === this.constants.ZERO_ADDRESS
              ) {
                e.push(!1);
                continue;
              }
              let a = this.contracts[n.gauge.address].contract;
              e.push('inflation_rate()' in a || 'inflation_rate(uint256)' in a);
            }
            let n = [];
            for (let e of i) {
              let t = dw.call(this, e);
              if (t.gauge.address === this.constants.ZERO_ADDRESS) {
                n.push(0);
                continue;
              }
              let a = this.contracts[t.gauge.address].contract;
              'reward_tokens(uint256)' in a
                ? n.push(8)
                : 'claimable_reward(address)' in a
                  ? n.push(-1)
                  : n.push(0);
            }
            let a = [];
            for (let e = 0; e < i.length; e++) {
              let t = dw.call(this, i[e]);
              if (-1 !== n[e])
                for (let i = 0; i < n[e]; i++) {
                  let e = this.contracts[t.gauge.address].multicallContract;
                  a.push(e.reward_tokens(i));
                }
              else {
                n[e] = 1;
                let i = this.contracts[t.sRewardContract].contract,
                  s = this.contracts[t.sRewardContract].multicallContract,
                  u = 'snx()' in i ? 'snx' : 'rewardsToken';
                a.push(s[u]());
              }
            }
            let s = (yield oj.call(this, a)).map((e) => e.toLowerCase()),
              u = {};
            for (let e = 0; e < i.length; e++) {
              u[i[e]] = [];
              for (let t = 0; t < n[e]; t++) {
                let t = s.shift();
                t !== this.constants.ZERO_ADDRESS &&
                  (1 === this.chainId || t !== this.constants.COINS.crv) &&
                  '0xf228ec3476318acb4e719d2b290bb2ef8b34dffa' !== t &&
                  u[i[e]].push(t);
              }
            }
            let p = [];
            for (let n = 0; n < i.length; n++) {
              let a = i[n],
                s = dw.call(this, a);
              if (s.gauge.address === this.constants.ZERO_ADDRESS) continue;
              let o = this.contracts[s.gauge.address].contract,
                y = this.contracts[s.gauge.address].multicallContract;
              for (let i of (e[n] && p.push(y.claimable_tokens(t)), u[a])) {
                let { multicallContract: e } = this.contracts[i] || aW.call(this, i, eu);
                p.push(e.symbol(), e.decimals()),
                  'claimable_reward(address,address)' in o
                    ? p.push(y.claimable_reward(t, i))
                    : 'claimable_reward(address)' in o &&
                      p.push(y.claimable_reward(t), y.claimed_rewards_for(t));
              }
            }
            let o = yield oj.call(this, p);
            for (let n = 0; n < i.length; n++) {
              let a = i[n],
                s = dw.call(this, a);
              if (
                (oZ[t] || (oZ[t] = {}),
                (oZ[t][a] = { rewards: [], time: Date.now() }),
                s.gauge.address === this.constants.ZERO_ADDRESS)
              )
                continue;
              let p = this.contracts[s.gauge.address].contract;
              if (e[n]) {
                let e = this.constants.ALIASES.crv,
                  n = o.shift(),
                  i = this.formatUnits(n, 18);
                Number(i) > 0 && oZ[t][a].rewards.push({ token: e, symbol: 'CRV', amount: i });
              }
              for (let e of u[a]) {
                let n = o.shift(),
                  i = Number(o.shift()),
                  s = o.shift();
                'claimable_reward(address)' in p && (s -= o.shift());
                let u = this.formatUnits(s, i);
                Number(u) > 0 && oZ[t][a].rewards.push({ token: e, symbol: n, amount: u });
              }
            }
          }
          let s = [];
          for (let n of e) s.push(null === (a = oZ[t]) || void 0 === a ? void 0 : a[n].rewards);
          return s;
        });
      }
      function oH(e, t, n) {
        return oq(this, void 0, void 0, function* () {
          var a, i;
          let s = n ? e.filter((e) => oV(t, e)) : e;
          if (s.length > 0) {
            let e = [];
            for (let t of s) {
              let n = dw.call(this, t);
              if (
                324 === this.chainId ||
                2222 === this.chainId ||
                n.gauge.address === this.constants.ZERO_ADDRESS
              ) {
                e.push(!1);
                continue;
              }
              let a = this.contracts[n.gauge.address].contract;
              e.push('inflation_rate()' in a || 'inflation_rate(uint256)' in a);
            }
            let n = {};
            for (let e = 0; e < s.length; e++) {
              let t = dw.call(this, s[e]),
                i = yield aD.call(this);
              n[s[e]] = (null !== (a = i[t.gauge.address]) && void 0 !== a ? a : []).map((e) => ({
                token: e.tokenAddress,
                symbol: e.symbol,
                decimals: Number(e.decimals),
              }));
            }
            let i = [];
            for (let a = 0; a < s.length; a++) {
              let u = s[a],
                p = dw.call(this, u);
              if (p.gauge.address === this.constants.ZERO_ADDRESS) continue;
              let o = this.contracts[p.gauge.address].contract,
                y = this.contracts[p.gauge.address].multicallContract;
              for (let s of (e[a] && i.push(y.claimable_tokens(t)), n[u]))
                this.contracts[s.token] || aW.call(this, s.token, eu),
                  'claimable_reward(address,address)' in o
                    ? i.push(y.claimable_reward(t, s.token))
                    : 'claimable_reward(address)' in o &&
                      i.push(y.claimable_reward(t), y.claimed_rewards_for(t));
            }
            let u = yield oj.call(this, i);
            for (let a = 0; a < s.length; a++) {
              let i = s[a],
                p = dw.call(this, i);
              if (
                (oZ[t] || (oZ[t] = {}),
                (oZ[t][i] = { rewards: [], time: Date.now() }),
                p.gauge.address === this.constants.ZERO_ADDRESS)
              )
                continue;
              let o = this.contracts[p.gauge.address].contract;
              if (e[a]) {
                let e = this.constants.ALIASES.crv,
                  n = u.shift(),
                  a = this.formatUnits(n, 18);
                Number(a) > 0 && oZ[t][i].rewards.push({ token: e, symbol: 'CRV', amount: a });
              }
              for (let e of n[i]) {
                let n = u.shift();
                'claimable_reward(address)' in o && (n -= u.shift());
                let a = this.formatUnits(n, e.decimals);
                Number(a) > 0 &&
                  oZ[t][i].rewards.push({ token: e.token, symbol: e.symbol, amount: a });
              }
            }
          }
          let u = [];
          for (let n of e) u.push(null === (i = oZ[t]) || void 0 === i ? void 0 : i[n].rewards);
          return u;
        });
      }
      function oK() {
        return oq(this, arguments, void 0, function* (e = this.signerAddress) {
          let t = this.getPoolList(),
            n = yield oJ.call(this, t, e, !1),
            a = [];
          for (let e = 0; e < t.length; e++) n[e].length > 0 && a.push(t[e]);
          return a;
        });
      }
      function oz(e) {
        return oq(this, arguments, void 0, function* (e, t = this.signerAddress) {
          let n = yield oJ.call(this, e, t, !0),
            a = [];
          for (let t = 0; t < e.length; t++)
            for (let e of (a.push([]), n[t])) {
              let t = yield aS.call(this, e.token);
              a[a.length - 1].push(Object.assign(Object.assign({}, e), { price: t }));
            }
          return a;
        });
      }
      function oX() {
        return oq(this, arguments, void 0, function* (e = this.signerAddress, t = !0) {
          let n = this.getPoolList(),
            [a, i] = yield Promise.all([
              oG.call(this, n, e, !1),
              t ? oH.call(this, n, e, !1) : oJ.call(this, n, e, !1),
            ]),
            s = [];
          for (let e = 0; e < n.length; e++) (a[e] > 0 || i[e].length > 0) && s.push(n[e]);
          return s;
        });
      }
      function oQ() {
        return oq(this, void 0, void 0, function* () {
          let e = this.constants.NETWORK_NAME,
            t = yield ea(e, this.isLiteChain),
            n = {};
          for (let e of t)
            for (let t of e.poolData)
              n[t.address.toLowerCase()] = Number(t.amplificationCoefficient);
          return n;
        });
      }
      let o2 = (e, t, n) => {
        var a, i;
        return (
          (1 === e && 'crveth' === t) ||
          (42161 === e && 'tricrypto' === t) ||
          (null !==
            (a = {
              1: [
                '0x6326DEbBAa15bCFE603d831e7D75f4fc10d9B43E',
                '0x8c1aB78601c259E1B43F19816923609dC7d7de9B',
                '0x88855cdF2b0A8413D470B86952E726684de915be',
              ].map((e) => e.toLowerCase()),
              137: [
                '0xAe00f57663F4C85FC948B13963cd4627dAF01061',
                '0xA9134FaE98F92217f457918505375Ae91fdc5e3c',
                '0xf31bcdf0B9a5eCD7AB463eB905551fBc32e51856',
              ].map((e) => e.toLowerCase()),
              250: [
                '0xE6358f6a45B502477e83CC1CDa759f540E4459ee',
                '0x5d58Eb45e97B43e471AF05cD2b11CeB4106E1b1a',
                '0xb11Dc44A9f981fAF1669dca6DD40c3cc2554A2ce',
              ].map((e) => e.toLowerCase()),
              42161: [
                '0x7DA64233Fefb352f8F501B357c018158ED8aA455',
                '0xAAe75FAebCae43b9d541Fd875622BE48D9B4f5D0',
                '0x89287c32c2CAC1C76227F6d300B2DBbab6b75C08',
              ].map((e) => e.toLowerCase()),
              43114: [
                '0x64448B78561690B70E17CBE8029a3e5c1bB7136e',
                '0xF1f85a74AD6c64315F85af52d3d46bF715236ADc',
                '0x0eb0F1FaF5F509Ac53fA224477509EAD167cf410',
              ].map((e) => e.toLowerCase()),
            }[e]) && void 0 !== a
            ? a
            : []
          ).includes(null !== (i = null == n ? void 0 : n.toLowerCase()) && void 0 !== i ? i : '')
        );
      };
      var o5 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      class o0 extends oR {
        constructor(e, t, n = t.getPoolsData()[e]) {
          super(e, n, t),
            (this._calcTokenApy = (...e) =>
              o5(this, [...e], void 0, function* (e = null) {
                let t, n, a;
                let i = yield this.stats.totalLiquidity();
                if (0 === Number(i)) return [0, 0];
                if (1 !== this.curve.chainId) {
                  let e = this.curve.contracts[this.gauge.address].multicallContract,
                    i = this.curve.contracts[this.lpToken].multicallContract,
                    s = this.curve.contracts[this.curve.constants.ALIASES.crv].contract,
                    u = Math.floor(Date.now() / 1e3 / a1.WEEK);
                  ([t, n, a] = (yield this.curve.multicallProvider.all([
                    e.inflation_rate(u),
                    e.working_supply(),
                    i.totalSupply(),
                  ])).map((e) => ai(e))),
                    t.eq(0) &&
                      (t = ai(
                        yield s.balanceOf(this.gauge.address, this.curve.constantOptions)
                      ).div(a1.WEEK));
                } else {
                  let e;
                  let i = this.curve.contracts[this.gauge.address].multicallContract,
                    s = this.curve.contracts[this.lpToken].multicallContract,
                    u =
                      this.curve.contracts[this.curve.constants.ALIASES.gauge_controller]
                        .multicallContract;
                  ([t, e, n, a] = (yield this.curve.multicallProvider.all([
                    i.inflation_rate(),
                    u.gauge_relative_weight(this.gauge.address),
                    i.working_supply(),
                    s.totalSupply(),
                  ])).map((e) => ai(e))),
                    (t = t.times(e));
                }
                if (t.eq(0)) return [0, 0];
                null !== e && (n = e);
                let s = t.times(31536e3).div(n).times(a).div(Number(i)).times(0.4),
                  u = yield aS.call(this.curve, this.curve.constants.ALIASES.crv),
                  p = s.times(u),
                  o = p.times(2.5);
                return [p.times(100).toNumber(), o.times(100).toNumber()];
              })),
            (this._calcLpTokenAmount = a(
              (e, ...t) =>
                o5(this, [e, ...t], void 0, function* (e, t = !0, n = !0) {
                  if (this.isCrypto)
                    try {
                      return yield this._pureCalcLpTokenAmount(e, t, n);
                    } catch (u) {
                      let t = this.curve.contracts[this.lpToken].contract;
                      if (
                        (yield t.totalSupply(this.curve.constantOptions)) >
                        this.curve.parseUnits('0')
                      )
                        throw u;
                      if (this.isMeta && n)
                        throw Error(
                          'Initial deposit for crypto meta pools must be in wrapped coins'
                        );
                      let a = n ? this.underlyingDecimals : this.wrappedDecimals,
                        i = e.map((e, t) => this.curve.formatUnits(e, a[t])),
                        s = yield this.getSeedAmounts(i[0]);
                      return (
                        i.forEach((e, t) => {
                          if (!aa(e).eq(aa(s[t]))) throw Error(`Amounts must be = ${s}`);
                        }),
                        an(
                          Math.pow(
                            i.map(Number).reduce((e, t) => e * t),
                            1 / i.length
                          )
                        )
                      );
                    }
                  try {
                    if (this.isNg) return yield this._pureCalcLpTokenAmount(e, t, n);
                    if (!this.isMeta)
                      return yield this.curve.contracts[
                        this.curve.constants.ALIASES.stable_calc
                      ].contract.calc_token_amount(
                        this.address,
                        this.lpToken,
                        e.concat(Array(10 - e.length).fill(this.curve.parseUnits('0'))),
                        e.length,
                        t,
                        n && this.isLending
                      );
                    {
                      let a = new o0(this.basePool, this.curve);
                      return yield this.curve.contracts[
                        this.curve.constants.ALIASES.stable_calc
                      ].contract.calc_token_amount_meta(
                        this.address,
                        this.lpToken,
                        e.concat(Array(10 - e.length).fill(this.curve.parseUnits('0'))),
                        e.length,
                        a.address,
                        a.lpToken,
                        t,
                        n
                      );
                    }
                  } catch (p) {
                    if (!t) throw p;
                    let a = this.curve.contracts[this.lpToken].contract;
                    if (
                      (yield a.totalSupply(this.curve.constantOptions)) > this.curve.parseUnits('0')
                    )
                      throw p;
                    let i = n ? this.underlyingDecimals : this.wrappedDecimals,
                      s = e.map((e, t) => this.curve.formatUnits(e, i[t])),
                      u = yield this.getSeedAmounts(s[0]);
                    return (
                      s.forEach((e, t) => {
                        if (!aa(e).eq(aa(u[t]))) throw Error(`Amounts must be = ${u}`);
                      }),
                      s.map((e) => an(e)).reduce((e, t) => e + t)
                    );
                  }
                }),
              { primitive: !0, promise: !0, maxAge: 3e4, length: 3 }
            )),
            (this.crvProfit = (...e) =>
              o5(this, [...e], void 0, function* (e = '') {
                let t, n, a;
                if (this.rewardsOnly())
                  throw Error(`${this.name} has Rewards-Only Gauge. Use rewardsProfit instead`);
                if (!(e = e || this.curve.signerAddress))
                  throw Error('Need to connect wallet or pass address into args');
                if (1 !== this.curve.chainId) {
                  let i = this.curve.contracts[this.gauge.address].multicallContract,
                    s = this.curve.contracts[this.curve.constants.ALIASES.crv].contract,
                    u = Math.floor(Date.now() / 1e3 / a1.WEEK);
                  ([t, a, n] = (yield this.curve.multicallProvider.all([
                    i.inflation_rate(u),
                    i.working_balances(e),
                    i.working_supply(),
                  ])).map((e) => ai(e))),
                    t.eq(0) &&
                      (t = ai(
                        yield s.balanceOf(this.gauge.address, this.curve.constantOptions)
                      ).div(a1.WEEK));
                } else {
                  let i;
                  let s = this.curve.contracts[this.gauge.address].multicallContract,
                    u =
                      this.curve.contracts[this.curve.constants.ALIASES.gauge_controller]
                        .multicallContract;
                  ([t, i, a, n] = (yield this.curve.multicallProvider.all([
                    s.inflation_rate(),
                    u.gauge_relative_weight(this.gauge.address),
                    s.working_balances(e),
                    s.working_supply(),
                  ])).map((e) => ai(e))),
                    (t = t.times(i));
                }
                let i = yield aS.call(this.curve, 'CRV');
                if (n.eq(0))
                  return {
                    day: '0.0',
                    week: '0.0',
                    month: '0.0',
                    year: '0.0',
                    token: this.curve.constants.ALIASES.crv,
                    symbol: 'CRV',
                    price: i,
                  };
                let s = t.times(a1.DAY).times(a).div(n),
                  u = t.times(a1.WEEK).times(a).div(n),
                  p = t.times(a1.MONTH).times(a).div(n),
                  o = t.times(a1.YEAR).times(a).div(n);
                return {
                  day: s.toString(),
                  week: u.toString(),
                  month: p.toString(),
                  year: o.toString(),
                  token: this.curve.constants.ALIASES.crv,
                  symbol: 'CRV',
                  price: i,
                };
              })),
            (this.userBoost = (...e) =>
              o5(this, [...e], void 0, function* (e = '') {
                if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
                  throw Error(`${this.name} doesn't have gauge`);
                if (this.rewardsOnly())
                  throw Error(`${this.name} has Rewards-Only Gauge. Use stats.rewardsApy instead`);
                e = av.call(this.curve, e);
                let t = this.curve.contracts[this.gauge.address].multicallContract,
                  [n, a] = (yield this.curve.multicallProvider.all([
                    t.working_balances(e),
                    t.balanceOf(e),
                  ])).map((e) => ai(e)),
                  i = n.div(0.4).div(a);
                return i.lt(1)
                  ? '1.0'
                  : i.gt(2.5)
                    ? '2.5'
                    : i.toFixed(4).replace(/([0-9])0+$/, '$1');
              })),
            (this._userFutureBoostAndWorkingSupply = (e) =>
              o5(this, void 0, void 0, function* () {
                let t =
                    this.curve.contracts[this.curve.constants.ALIASES.voting_escrow]
                      .multicallContract,
                  n = this.curve.contracts[this.gauge.address].multicallContract,
                  a = [
                    t.balanceOf(e),
                    t.totalSupply(),
                    n.balanceOf(e),
                    n.totalSupply(),
                    n.working_balances(e),
                    n.working_supply(),
                  ],
                  [i, s, u, p, o, y] = yield this.curve.multicallProvider.all(a),
                  d = (u * BigInt(40)) / BigInt(100);
                s > BigInt(0) && (d += (((p * i) / s) * BigInt(60)) / BigInt(100)),
                  d > u && (d = u);
                let m = y - o + d,
                  r = ai(d),
                  l = ai(u);
                return [r.div(0.4).div(l), ai(m)];
              })),
            (this.userFutureBoost = (...e) =>
              o5(this, [...e], void 0, function* (e = '') {
                if (this.rewardsOnly())
                  throw Error(`${this.name} has Rewards-Only Gauge. Use stats.rewardsApy instead`);
                e = av.call(this.curve, e);
                let [t] = yield this._userFutureBoostAndWorkingSupply(e);
                return t.lt(1)
                  ? '1.0'
                  : t.gt(2.5)
                    ? '2.5'
                    : t.toFixed(4).replace(/([0-9])0+$/, '$1');
              })),
            (this.userCrvApy = (...e) =>
              o5(this, [...e], void 0, function* (e = '') {
                if (this.rewardsOnly())
                  throw Error(`${this.name} has Rewards-Only Gauge. Use stats.rewardsApy instead`);
                e = av.call(this.curve, e);
                let [t, n] = yield this.stats.tokenApy(),
                  a = yield this.userBoost(e);
                return '2.5' == a ? n : 'NaN' === a ? NaN : aa(t).times(aa(a)).toNumber();
              })),
            (this.userFutureCrvApy = (...e) =>
              o5(this, [...e], void 0, function* (e = '') {
                if (this.rewardsOnly())
                  throw Error(`${this.name} has Rewards-Only Gauge. Use stats.rewardsApy instead`);
                e = av.call(this.curve, e);
                let [t, n] = yield this._userFutureBoostAndWorkingSupply(e),
                  [a, i] = yield this._calcTokenApy(n);
                return t.lt(1) ? a : t.gt(2.5) ? i : aa(a).times(t).toNumber();
              })),
            (this.maxBoostedStake = (...e) =>
              o5(this, void 0, void 0, function* () {
                if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
                  throw Error(`${this.name} doesn't have gauge`);
                if (
                  (1 == e.length && Array.isArray(e[0]) && (e = e[0]),
                  0 === e.length &&
                    '' !== this.curve.signerAddress &&
                    (e = [this.curve.signerAddress]),
                  0 === e.length)
                )
                  throw Error('Need to connect wallet or pass addresses into args');
                let t =
                    this.curve.contracts[this.curve.constants.ALIASES.voting_escrow]
                      .multicallContract,
                  n = this.curve.contracts[this.gauge.address].multicallContract,
                  a = [t.totalSupply(), n.totalSupply()];
                e.forEach((e) => {
                  a.push(t.balanceOf(e));
                });
                let i = (yield this.curve.multicallProvider.all(a)).map((e) => ai(e)),
                  [s, u] = i.splice(0, 2),
                  p = {};
                e.forEach((e, t) => {
                  p[e] = i[t].div(s).times(u);
                });
                let o = {};
                for (let e of Object.entries(p)) o[e[0]] = as(e[1]);
                return 1 === e.length ? o[e[0]] : o;
              })),
            (this.rewardTokens = a(
              (...e) =>
                o5(this, [...e], void 0, function* (e = !0) {
                  let t = this.curve;
                  if (this.gauge.address === t.constants.ZERO_ADDRESS) return [];
                  if (e) {
                    let e = yield aD.call(t);
                    return e[this.gauge.address]
                      ? (e[this.gauge.address].forEach(
                          (e) => !t.contracts[e.tokenAddress] && aW.call(t, e.tokenAddress, eu)
                        ),
                        e[this.gauge.address].map((e) => ({
                          token: e.tokenAddress,
                          symbol: e.symbol,
                          decimals: Number(e.decimals),
                        })))
                      : [];
                  }
                  let n = t.contracts[this.gauge.address].contract,
                    a = t.contracts[this.gauge.address].multicallContract;
                  if ('reward_tokens(uint256)' in n) {
                    let e = 8;
                    'reward_count()' in n &&
                      (e = Number(t.formatUnits(yield n.reward_count(t.constantOptions), 0)));
                    let i = [];
                    for (let t = 0; t < e; t++) i.push(a.reward_tokens(t));
                    let s = (yield t.multicallProvider.all(i))
                        .filter((e) => e !== t.constants.ZERO_ADDRESS)
                        .map((e) => e.toLowerCase())
                        .filter((e) => 1 === t.chainId || e !== t.constants.COINS.crv),
                      u = [];
                    for (let e of s) {
                      let { multicallContract: n } = t.contracts[e] || aW.call(t, e, eu);
                      u.push(n.symbol(), n.decimals());
                    }
                    let p = yield t.multicallProvider.all(u);
                    for (let e = 0; e < s.length; e++) t.constants.DECIMALS[s[e]] = p[2 * e + 1];
                    return s.map((e, t) => ({
                      token: e,
                      symbol: p[2 * t],
                      decimals: p[2 * t + 1],
                    }));
                  }
                  if ('claimable_reward(address)' in n) {
                    let e = t.contracts[this.sRewardContract].contract,
                      n = 'snx()' in e ? 'snx' : 'rewardsToken',
                      a = (yield e[n](t.constantOptions)).toLowerCase();
                    aW.call(t, a, eu);
                    let i = t.contracts[a].multicallContract,
                      s = yield t.multicallProvider.all([i.symbol(), i.decimals()]);
                    return [{ token: a, symbol: s[0], decimals: s[1] }];
                  }
                  return [];
                }),
              { promise: !0, maxAge: 18e5 }
            )),
            (this.rewardsProfit = (...e) =>
              o5(this, [...e], void 0, function* (e = '') {
                if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
                  throw Error(`${this.name} doesn't have gauge`);
                if (!(e = e || this.curve.signerAddress))
                  throw Error('Need to connect wallet or pass address into args');
                let t = yield this.rewardTokens(),
                  n = this.curve.contracts[this.gauge.address].multicallContract,
                  a = [];
                if ('reward_data(address)' in this.curve.contracts[this.gauge.address].contract) {
                  let i = [n.balanceOf(e), n.totalSupply()];
                  for (let e of t) i.push(n.reward_data(e.token));
                  let s = yield this.curve.multicallProvider.all(i),
                    u = ai(s.shift()),
                    p = ai(s.shift());
                  for (let e of t) {
                    let t = s.shift(),
                      n =
                        1e3 * Number(this.curve.formatUnits(t.period_finish, 0)) > Date.now()
                          ? ai(t.rate, e.decimals)
                          : aa(0),
                      i = yield aS.call(this.curve, e.token);
                    a.push({
                      day: n.times(a1.DAY).times(u).div(p).toString(),
                      week: n.times(a1.WEEK).times(u).div(p).toString(),
                      month: n.times(a1.MONTH).times(u).div(p).toString(),
                      year: n.times(a1.YEAR).times(u).div(p).toString(),
                      token: e.token,
                      symbol: e.symbol,
                      price: i,
                    });
                  }
                } else if (
                  this.sRewardContract &&
                  'rewardRate()' in this.curve.contracts[this.sRewardContract].contract &&
                  1 === t.length
                ) {
                  let i = t[0],
                    s = this.curve.contracts[this.sRewardContract].multicallContract,
                    [u, p, o, y] = yield this.curve.multicallProvider.all([
                      s.rewardRate(),
                      s.periodFinish(),
                      n.balanceOf(e),
                      n.totalSupply(),
                    ]),
                    d = 1e3 * Number(p) > Date.now() ? ai(u, i.decimals) : aa(0),
                    m = ai(o),
                    r = ai(y),
                    l = yield aS.call(this.curve, i.token);
                  a.push({
                    day: d.times(a1.DAY).times(m).div(r).toString(),
                    week: d.times(a1.WEEK).times(m).div(r).toString(),
                    month: d.times(a1.MONTH).times(m).div(r).toString(),
                    year: d.times(a1.YEAR).times(m).div(r).toString(),
                    token: i.token,
                    symbol: i.symbol,
                    price: l,
                  });
                } else if (['aave', 'saave', 'ankreth'].includes(this.id))
                  for (let e of t) {
                    let t = yield aS.call(this.curve, e.token);
                    a.push({
                      day: '0',
                      week: '0',
                      month: '0',
                      year: '0',
                      token: e.token,
                      symbol: e.symbol,
                      price: t,
                    });
                  }
                return a;
              })),
            (this.gaugeOptimalDeposits = (...e) =>
              o5(this, void 0, void 0, function* () {
                if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
                  throw Error(`${this.name} doesn't have gauge`);
                1 == e.length && Array.isArray(e[0]) && (e = e[0]);
                let t =
                    this.curve.contracts[this.curve.constants.ALIASES.voting_escrow]
                      .multicallContract,
                  n = this.curve.contracts[this.lpToken].multicallContract,
                  a = this.curve.contracts[this.gauge.address].multicallContract,
                  i = [t.totalSupply(), a.totalSupply()];
                e.forEach((e) => {
                  i.push(t.balanceOf(e), n.balanceOf(e), a.balanceOf(e));
                });
                let s = (yield this.curve.multicallProvider.all(i)).map((e) => ai(e)),
                  [u, p] = s.splice(0, 2),
                  o = {},
                  y = aa(0);
                for (let t of e) (o[t] = s[0]), (y = y.plus(s[1]).plus(s[2])), s.splice(0, 3);
                let d = Object.values(o).reduce((e, t) => e.plus(t)),
                  m = Object.fromEntries(e.map((e) => [e, aa(0)]));
                if (y.lt(p.times(d).div(u)))
                  for (let t of e) {
                    let e = p.times(o[t]).div(u).lt(y) ? p.times(o[t]).div(u) : y;
                    if (((m[t] = e), (y = y.minus(e)).lte(0))) break;
                  }
                else {
                  if (d.lt(0)) for (let t of e) m[t] = y.times(o[t]).div(d);
                  m[e[0]] = m[e[0]].plus(y.minus(Object.values(m).reduce((e, t) => e.plus(t))));
                }
                let r = {};
                for (let e of Object.entries(m)) r[e[0]] = as(e[1]);
                return r;
              })),
            (this._getCoinIdx = (e, t = !0) => {
              if ('number' == typeof e) {
                let n = t ? this.underlyingCoins.length : this.wrappedCoins.length;
                if (!Number.isInteger(e)) throw Error('Index must be integer');
                if (e < 0) throw Error('Index must be >= 0');
                if (e > n - 1) throw Error(`Index must be < ${n}`);
                return e;
              }
              let [n] = af.call(this.curve, e),
                a = (
                  t
                    ? this.underlyingCoinAddresses.map((e) => e.toLowerCase())
                    : this.wrappedCoinAddresses.map((e) => e.toLowerCase())
                ).indexOf(n.toLowerCase());
              if (-1 === a)
                throw Error(
                  `There is no ${e} among ${this.name} pool ${t ? 'underlying' : 'wrapped'} coins`
                );
              return a;
            }),
            (this._getRates = () =>
              o5(this, void 0, void 0, function* () {
                let e = [];
                for (let t = 0; t < this.wrappedCoinAddresses.length; t++) {
                  let n = this.wrappedCoinAddresses[t];
                  this.useLending[t]
                    ? ['compound', 'usdt', 'ib'].includes(this.id)
                      ? e.push(yield this.curve.contracts[n].contract.exchangeRateStored())
                      : ['y', 'busd', 'pax'].includes(this.id)
                        ? e.push(yield this.curve.contracts[n].contract.getPricePerFullShare())
                        : e.push(this.curve.parseUnits(String(1e18), 0))
                    : e.push(this.curve.parseUnits(String(1e18), 0));
                }
                return e;
              })),
            (this._storedRatesBN = (e) =>
              o5(this, void 0, void 0, function* () {
                if (this.isMeta) {
                  if (e) return this.underlyingCoins.map(() => aa(1));
                  let t =
                    yield this.curve.contracts[
                      this.curve.getPoolsData()[this.basePool].swap_address
                    ].contract.get_virtual_price();
                  return [aa(1), ai(t)];
                }
                return aK(this.curve.contracts[this.address].abi, 'stored_rates').length > 0 &&
                  this.isPlain
                  ? (yield this.curve.contracts[this.address].contract.stored_rates()).map((e, t) =>
                      ai(e, 36 - this.wrappedDecimals[t])
                    )
                  : this.wrappedCoins.map(() => aa(1));
              })),
            (this._underlyingPrices = () =>
              o5(this, void 0, void 0, function* () {
                let e = [];
                for (let t of this.underlyingCoinAddresses) e.push(aS.call(this.curve, t));
                return yield Promise.all(e);
              })),
            (this._wrappedPrices = () =>
              o5(this, void 0, void 0, function* () {
                let e = [];
                for (let t of this.wrappedCoinAddresses) e.push(aS.call(this.curve, t));
                return yield Promise.all(e);
              })),
            (this.stats = new oL(this)),
            (this.wallet = new oP(this)),
            (this.isGaugeKilled = this.getIsGaugeKilled.bind(this)),
            (this.gaugeStatus = this.getGaugeStatus.bind(this)),
            (this.estimateGas = {
              depositApprove: this.depositApproveEstimateGas.bind(this),
              deposit: this.depositEstimateGas.bind(this),
              depositWrappedApprove: this.depositWrappedApproveEstimateGas.bind(this),
              depositWrapped: this.depositWrappedEstimateGas.bind(this),
              stakeApprove: this.stakeApproveEstimateGas.bind(this),
              stake: this.stakeEstimateGas.bind(this),
              unstake: this.unstakeEstimateGas.bind(this),
              claimCrv: this.claimCrvEstimateGas.bind(this),
              claimRewards: this.claimRewardsEstimateGas.bind(this),
              depositAndStakeApprove: this.depositAndStakeApproveEstimateGas.bind(this),
              depositAndStake: this.depositAndStakeEstimateGas.bind(this),
              depositAndStakeWrappedApprove:
                this.depositAndStakeWrappedApproveEstimateGas.bind(this),
              depositAndStakeWrapped: this.depositAndStakeWrappedEstimateGas.bind(this),
              withdrawApprove: this.withdrawApproveEstimateGas.bind(this),
              withdraw: this.withdrawEstimateGas.bind(this),
              withdrawWrapped: this.withdrawWrappedEstimateGas.bind(this),
              withdrawImbalanceApprove: this.withdrawImbalanceApproveEstimateGas.bind(this),
              withdrawImbalance: this.withdrawImbalanceEstimateGas.bind(this),
              withdrawImbalanceWrapped: this.withdrawImbalanceWrappedEstimateGas.bind(this),
              withdrawOneCoinApprove: this.withdrawOneCoinApproveEstimateGas.bind(this),
              withdrawOneCoin: this.withdrawOneCoinEstimateGas.bind(this),
              withdrawOneCoinWrapped: this.withdrawOneCoinWrappedEstimateGas.bind(this),
              swapApprove: this.swapApproveEstimateGas.bind(this),
              swap: this.swapEstimateGas.bind(this),
              swapWrappedApprove: this.swapWrappedApproveEstimateGas.bind(this),
              swapWrapped: this.swapWrappedEstimateGas.bind(this),
            });
        }
        hasVyperVulnerability() {
          return o2(this.curve.chainId, this.id, this.implementation);
        }
        rewardsOnly() {
          if (2222 === this.curve.chainId || 324 === this.curve.chainId) return !0;
          if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
            throw Error(`${this.name} doesn't have gauge`);
          return !aK(this.curve.contracts[this.gauge.address].abi, 'inflation_rate').find((e) =>
            ['', 'uint256'].includes(e.inputs.map((e) => `${e.type}`).join(','))
          );
        }
        _pureCalcLpTokenAmount(e) {
          return o5(this, arguments, void 0, function* (e, t = !0, n = !0) {
            let a = this.isMeta && n ? this.zap : this.address,
              i = n ? this.underlyingCoins.length : this.wrappedCoins.length,
              s = this.curve.contracts[a].contract;
            return this.isMetaFactory && n
              ? `calc_token_amount(address,uint256[${i}],bool)` in s
                ? yield s.calc_token_amount(this.address, e, t, this.curve.constantOptions)
                : yield s.calc_token_amount(this.address, e, this.curve.constantOptions)
              : `calc_token_amount(uint256[${i}],bool)` in s
                ? yield s.calc_token_amount(e, t, this.curve.constantOptions)
                : yield s.calc_token_amount(e, this.curve.constantOptions);
          });
        }
        calcLpTokenAmount(e) {
          return o5(this, arguments, void 0, function* (e, t = !0) {
            if (e.length !== this.underlyingCoinAddresses.length)
              throw Error(
                `${this.name} pool has ${this.underlyingCoinAddresses.length} coins (amounts provided for ${e.length})`
              );
            let n = e.map((e, t) => an(e, this.underlyingDecimals[t])),
              a = yield this._calcLpTokenAmount(n, t, !0);
            return this.curve.formatUnits(a);
          });
        }
        calcLpTokenAmountWrapped(e) {
          return o5(this, arguments, void 0, function* (e, t = !0) {
            if (e.length !== this.wrappedCoinAddresses.length)
              throw Error(
                `${this.name} pool has ${this.wrappedCoinAddresses.length} coins (amounts provided for ${e.length})`
              );
            if (this.isFake) throw Error(`${this.name} pool doesn't have this method`);
            let n = e.map((e, t) => an(e, this.wrappedDecimals[t])),
              a = yield this._calcLpTokenAmount(n, t, !1);
            return this.curve.formatUnits(a);
          });
        }
        getSeedAmounts(e) {
          return o5(this, arguments, void 0, function* (e, t = !1) {
            let n = aa(e);
            if (n.lte(0)) throw Error('Initial deposit amounts must be > 0');
            if (this.isCrypto) {
              let e = this.isMeta ? this.wrappedDecimals : this.underlyingDecimals;
              if (2 === e.length) {
                let t = ai(
                  yield this.curve.contracts[this.address].contract.price_scale(
                    this.curve.constantOptions
                  )
                );
                return [n7(n.toFixed(e[0])), n7(n.div(t).toFixed(e[1]))];
              }
              if (3 === e.length) {
                let t = (yield this.curve.multicallProvider.all([
                  this.curve.contracts[this.address].multicallContract.price_scale(0),
                  this.curve.contracts[this.address].multicallContract.price_scale(1),
                ])).map((e) => ai(e));
                return [
                  n7(n.toFixed(e[0])),
                  n7(n.div(t[0]).toFixed(e[1])),
                  n7(n.div(t[1]).toFixed(e[2])),
                ];
              }
              throw Error("getSeedAmounts method doesn't exist for crypto pools with N coins > 3");
            }
            {
              let e = [n7(n.toFixed(this.wrappedDecimals[0]))];
              if (this.isMeta && t) {
                let t = new o0(this.basePool, this.curve),
                  a = (yield t.stats.underlyingBalances()).map(aa),
                  i = a.reduce((e, t) => e.plus(t));
                for (let t = 1; t < this.underlyingDecimals.length; t++)
                  e.push(
                    n
                      .times(a[t - 1])
                      .div(i)
                      .toFixed(this.underlyingDecimals[t])
                  );
                return e.map(n7);
              }
              let a = yield this._storedRatesBN(!1);
              for (let t = 1; t < this.wrappedDecimals.length; t++)
                e.push(n.times(a[0]).div(a[t]).toFixed(this.wrappedDecimals[t]));
              return e.map(n7);
            }
          });
        }
        depositBalancedAmounts() {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `depositBalancedAmounts method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        depositExpected(e) {
          return o5(this, void 0, void 0, function* () {
            return yield this.calcLpTokenAmount(e);
          });
        }
        _balancedAmountsWithSameValue(e, t, n) {
          let a = e.map((e, n) => e.times(t[n])).reduce((e, t) => e.plus(t)),
            i = n.reduce((e, t) => e.plus(t)),
            s = n.map((e) => e.div(i)),
            u = [];
          for (let n = 0; n < e.length; n++) {
            let e = s.map((e, a) => e.times(t[a]).div(s[n])).reduce((e, t) => e.plus(t));
            u.push(a.div(e));
          }
          return u.map(String);
        }
        depositBonus(e) {
          return o5(this, void 0, void 0, function* () {
            let t;
            let n = e.map(aa),
              a = this.curve.contracts[this.address].multicallContract;
            t =
              this.isCrypto || 'wsteth' === this.id
                ? this.curve.isLiteChain
                  ? (this.id.includes('twocrypto')
                      ? [
                          1,
                          Number(yield this.curve.contracts[this.address].contract.price_oracle()) /
                            1e18,
                        ]
                      : [
                          1,
                          ...(yield this.curve.multicallProvider.all([
                            a.price_oracle(0),
                            a.price_oracle(1),
                          ])).map((e) => Number(e) / 1e18),
                        ]
                    ).map(aa)
                  : (yield this._underlyingPrices()).map(aa)
                : yield this._storedRatesBN(!0);
            let i = (yield this.stats.underlyingBalances()).map(aa),
              s = this._balancedAmountsWithSameValue(n, t, i),
              u = aa(yield this.depositExpected(e)),
              p = aa(yield this.depositExpected(s));
            return u.minus(p).div(p).times(100).toString();
          });
        }
        depositIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            return yield aM.call(
              this.curve,
              this.underlyingCoinAddresses,
              e,
              this.curve.signerAddress,
              this.zap || this.address
            );
          });
        }
        depositApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            return yield aE.call(
              this.curve,
              this.underlyingCoinAddresses,
              e,
              this.zap || this.address
            );
          });
        }
        depositApprove(e) {
          return o5(this, arguments, void 0, function* (e, t = !0) {
            return yield aC.call(
              this.curve,
              this.underlyingCoinAddresses,
              e,
              this.zap || this.address,
              t
            );
          });
        }
        depositEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `depositEstimateGas method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        deposit(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.5) {
            throw Error(`deposit method doesn't exist for pool ${this.name} (id: ${this.name})`);
          });
        }
        depositWrappedBalancedAmounts() {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `depositWrappedBalancedAmounts method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        depositWrappedExpected(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isFake)
              throw Error(
                `depositWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this.calcLpTokenAmountWrapped(e);
          });
        }
        depositWrappedBonus(e) {
          return o5(this, void 0, void 0, function* () {
            let t = e.map(aa),
              n = (yield this._wrappedPrices()).map(aa),
              a = (yield this.stats.wrappedBalances()).map(aa),
              i = this._balancedAmountsWithSameValue(t, n, a),
              s = aa(yield this.depositWrappedExpected(e)),
              u = aa(yield this.depositWrappedExpected(i));
            return String(s.minus(u).div(u).times(100));
          });
        }
        depositWrappedIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isFake)
              throw Error(
                `depositWrappedIsApproved method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield aM.call(
              this.curve,
              this.wrappedCoinAddresses,
              e,
              this.curve.signerAddress,
              this.address
            );
          });
        }
        depositWrappedApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isFake)
              throw Error(
                `depositWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield aE.call(this.curve, this.wrappedCoinAddresses, e, this.address);
          });
        }
        depositWrappedApprove(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isFake)
              throw Error(
                `depositWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield aC.call(this.curve, this.wrappedCoinAddresses, e, this.address);
          });
        }
        depositWrappedEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `depositWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        depositWrapped(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.5) {
            throw Error(
              `depositWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        stakeIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `stakeIsApproved method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield aM.call(
              this.curve,
              [this.lpToken],
              [e],
              this.curve.signerAddress,
              this.gauge.address
            );
          });
        }
        stakeApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `stakeApproveEstimateGas method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield aE.call(this.curve, [this.lpToken], [e], this.gauge.address);
          });
        }
        stakeApprove(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `stakeApprove method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield aC.call(this.curve, [this.lpToken], [e], this.gauge.address);
          });
        }
        stakeEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `stakeEstimateGas method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = an(e);
            return ad(
              yield this.curve.contracts[this.gauge.address].contract.deposit.estimateGas(
                t,
                this.curve.constantOptions
              )
            );
          });
        }
        stake(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `stake method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = an(e);
            yield aA.call(this.curve, [this.lpToken], [t], this.gauge.address),
              yield this.curve.updateFeeData();
            let n = ay(
              am(
                yield this.curve.contracts[this.gauge.address].contract.deposit.estimateGas(
                  t,
                  this.curve.constantOptions
                )
              )
            );
            return (yield this.curve.contracts[this.gauge.address].contract.deposit(
              t,
              Object.assign(Object.assign({}, this.curve.options), { gasLimit: n })
            )).hash;
          });
        }
        unstakeEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `unstakeEstimateGas method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = an(e);
            return ad(
              yield this.curve.contracts[this.gauge.address].contract.withdraw.estimateGas(
                t,
                this.curve.constantOptions
              )
            );
          });
        }
        unstake(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `unstake method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = an(e);
            yield this.curve.updateFeeData();
            let n =
              (am(
                yield this.curve.contracts[this.gauge.address].contract.withdraw.estimateGas(
                  t,
                  this.curve.constantOptions
                )
              ) *
                this.curve.parseUnits('200', 0)) /
              this.curve.parseUnits('100', 0);
            return (yield this.curve.contracts[this.gauge.address].contract.withdraw(
              t,
              Object.assign(Object.assign({}, this.curve.options), { gasLimit: n })
            )).hash;
          });
        }
        claimableCrv() {
          return o5(this, arguments, void 0, function* (e = '') {
            if (this.rewardsOnly())
              throw Error(`${this.name} has Rewards-Only Gauge. Use claimableRewards instead`);
            if (!(e = e || this.curve.signerAddress))
              throw Error('Need to connect wallet or pass address into args');
            return this.curve.formatUnits(
              yield this.curve.contracts[this.gauge.address].contract.claimable_tokens(
                e,
                this.curve.constantOptions
              )
            );
          });
        }
        claimCrvEstimateGas() {
          return o5(this, void 0, void 0, function* () {
            let e;
            if (this.rewardsOnly())
              throw Error(`${this.name} has Rewards-Only Gauge. Use claimRewards instead`);
            let t = !1;
            if (
              1 !== this.curve.chainId &&
              this.curve.constants.ALIASES.child_gauge_factory_old &&
              this.curve.constants.ALIASES.child_gauge_factory_old !==
                this.curve.constants.ZERO_ADDRESS
            ) {
              let n =
                this.curve.contracts[this.curve.constants.ALIASES.child_gauge_factory_old].contract;
              (t =
                (yield n.get_gauge_from_lp_token(this.lpToken)).toLowerCase() ===
                this.gauge.address.toLowerCase()) && (e = n);
            }
            if (
              (t ||
                (e =
                  1 === this.curve.chainId
                    ? this.curve.contracts[this.curve.constants.ALIASES.minter].contract
                    : this.curve.contracts[this.curve.constants.ALIASES.child_gauge_factory]
                        .contract),
              !e)
            )
              throw Error('Failed to find the correct contract for estimating gas');
            return 1 === this.curve.chainId
              ? Number(yield e.mint.estimateGas(this.gauge.address, this.curve.constantOptions))
              : ad(yield e.mint.estimateGas(this.gauge.address, this.curve.constantOptions));
          });
        }
        claimCrv() {
          return o5(this, void 0, void 0, function* () {
            let e;
            if (this.rewardsOnly())
              throw Error(`${this.name} has Rewards-Only Gauge. Use claimRewards instead`);
            let t = !1;
            if (
              1 !== this.curve.chainId &&
              this.curve.constants.ALIASES.child_gauge_factory_old &&
              this.curve.constants.ALIASES.child_gauge_factory_old !==
                this.curve.constants.ZERO_ADDRESS
            ) {
              let n =
                this.curve.contracts[this.curve.constants.ALIASES.child_gauge_factory_old].contract;
              (t =
                (yield n.get_gauge_from_lp_token(this.lpToken)).toLowerCase() ===
                this.gauge.address.toLowerCase()) && (e = n);
            }
            if (
              (t ||
                (e =
                  1 === this.curve.chainId
                    ? this.curve.contracts[this.curve.constants.ALIASES.minter].contract
                    : this.curve.contracts[this.curve.constants.ALIASES.child_gauge_factory]
                        .contract),
              !e)
            )
              throw Error('Failed to find the correct contract for minting');
            yield this.curve.updateFeeData();
            let n = ay(
              am(yield e.mint.estimateGas(this.gauge.address, this.curve.constantOptions))
            );
            return (yield e.mint(
              this.gauge.address,
              Object.assign(Object.assign({}, this.curve.options), { gasLimit: n })
            )).hash;
          });
        }
        claimableRewards() {
          return o5(this, arguments, void 0, function* (e = '') {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `claimableRewards method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (!(e = e || this.curve.signerAddress))
              throw Error('Need to connect wallet or pass address into args');
            let t = this.curve.contracts[this.gauge.address].contract,
              n = yield this.rewardTokens(),
              a = [];
            if ('claimable_reward(address,address)' in t)
              for (let i of n) {
                let n = yield t.claimable_reward(e, i.token, this.curve.constantOptions);
                a.push({
                  token: i.token,
                  symbol: i.symbol,
                  amount: this.curve.formatUnits(n, i.decimals),
                });
              }
            else if ('claimable_reward(address)' in t && n.length > 0) {
              let i = n[0],
                s = yield t.claimable_reward(e, this.curve.constantOptions),
                u = yield t.claimed_rewards_for(e, this.curve.constantOptions);
              a.push({
                token: i.token,
                symbol: i.symbol,
                amount: this.curve.formatUnits(s.sub(u), i.decimals),
              });
            }
            return a;
          });
        }
        claimRewardsEstimateGas() {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `claimRewards method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let e = this.curve.contracts[this.gauge.address].contract;
            if (!('claim_rewards()' in e))
              throw Error(`${this.name} pool doesn't have such method`);
            return ad(yield e.claim_rewards.estimateGas(this.curve.constantOptions));
          });
        }
        claimRewards() {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `claimRewards method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let e = this.curve.contracts[this.gauge.address].contract;
            if (!('claim_rewards()' in e))
              throw Error(`${this.name} pool doesn't have such method`);
            yield this.curve.updateFeeData();
            let t = ay(am(yield e.claim_rewards.estimateGas(this.curve.constantOptions)));
            return (yield e.claim_rewards(
              Object.assign(Object.assign({}, this.curve.options), { gasLimit: t })
            )).hash;
          });
        }
        depositAndStakeExpected(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeExpected method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield this.depositExpected(e);
          });
        }
        depositAndStakeBonus(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeBonus method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield this.depositBonus(e);
          });
        }
        depositAndStakeIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeIsApproved method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = yield aM.call(
                this.curve,
                this.underlyingCoinAddresses,
                e,
                this.curve.signerAddress,
                this.curve.constants.ALIASES.deposit_and_stake
              ),
              n = this.curve.contracts[this.gauge.address].contract;
            if ('approved_to_deposit' in n) {
              let e = yield n.approved_to_deposit(
                this.curve.constants.ALIASES.deposit_and_stake,
                this.curve.signerAddress,
                this.curve.constantOptions
              );
              return t && e;
            }
            return t;
          });
        }
        depositAndStakeApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeApprove method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = yield aE.call(
                this.curve,
                this.underlyingCoinAddresses,
                e,
                this.curve.constants.ALIASES.deposit_and_stake
              ),
              n = this.curve.contracts[this.gauge.address].contract;
            if (
              'approved_to_deposit' in n &&
              !(yield n.approved_to_deposit(
                this.curve.constants.ALIASES.deposit_and_stake,
                this.curve.signerAddress,
                this.curve.constantOptions
              ))
            ) {
              let e = ad(
                yield n.set_approve_deposit.estimateGas(
                  this.curve.constants.ALIASES.deposit_and_stake,
                  !0,
                  this.curve.constantOptions
                )
              );
              if (Array.isArray(t) && Array.isArray(e)) return [t[0] + e[0], t[1] + e[1]];
              if (!Array.isArray(t) && !Array.isArray(e)) return t + e;
            }
            return t;
          });
        }
        depositAndStakeApprove(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeApprove method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            let t = yield aC.call(
                this.curve,
                this.underlyingCoinAddresses,
                e,
                this.curve.constants.ALIASES.deposit_and_stake
              ),
              n = this.curve.contracts[this.gauge.address].contract;
            if (
              'approved_to_deposit' in n &&
              !(yield n.approved_to_deposit(
                this.curve.constants.ALIASES.deposit_and_stake,
                this.curve.signerAddress,
                this.curve.constantOptions
              ))
            ) {
              let e = ay(
                yield n.set_approve_deposit.estimateGas(
                  this.curve.constants.ALIASES.deposit_and_stake,
                  !0,
                  this.curve.constantOptions
                )
              );
              return [
                ...t,
                (yield n.set_approve_deposit(
                  this.curve.constants.ALIASES.deposit_and_stake,
                  !0,
                  Object.assign(Object.assign({}, this.curve.options), { gasLimit: e })
                )).hash,
              ];
            }
            return t;
          });
        }
        depositAndStakeEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStake method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield this._depositAndStake(e, 1, !0, !0);
          });
        }
        depositAndStake(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.1) {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStake method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            return yield this._depositAndStake(e, t, !0, !1);
          });
        }
        depositAndStakeWrappedExpected(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this.depositWrappedExpected(e);
          });
        }
        depositAndStakeWrappedBonus(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrappedBonus method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrappedBonus method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this.depositWrappedBonus(e);
          });
        }
        depositAndStakeWrappedIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrappedIsApproved method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrappedIsApproved method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            let t = yield aM.call(
                this.curve,
                this.wrappedCoinAddresses,
                e,
                this.curve.signerAddress,
                this.curve.constants.ALIASES.deposit_and_stake
              ),
              n = this.curve.contracts[this.gauge.address].contract;
            if ('approved_to_deposit' in n) {
              let e = yield n.approved_to_deposit(
                this.curve.constants.ALIASES.deposit_and_stake,
                this.curve.signerAddress,
                this.curve.constantOptions
              );
              return t && e;
            }
            return t;
          });
        }
        depositAndStakeWrappedApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            let t = yield aE.call(
                this.curve,
                this.wrappedCoinAddresses,
                e,
                this.curve.constants.ALIASES.deposit_and_stake
              ),
              n = this.curve.contracts[this.gauge.address].contract;
            if (
              'approved_to_deposit' in n &&
              !(yield n.approved_to_deposit(
                this.curve.constants.ALIASES.deposit_and_stake,
                this.curve.signerAddress,
                this.curve.constantOptions
              ))
            ) {
              let e = Number(
                yield n.set_approve_deposit.estimateGas(
                  this.curve.constants.ALIASES.deposit_and_stake,
                  !0,
                  this.curve.constantOptions
                )
              );
              if (Array.isArray(t) && Array.isArray(e)) return [t[0] + e[0], t[1] + e[1]];
              if (!Array.isArray(t) && !Array.isArray(e)) return t + e;
            }
            return t;
          });
        }
        depositAndStakeWrappedApprove(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            let t = yield aC.call(
                this.curve,
                this.wrappedCoinAddresses,
                e,
                this.curve.constants.ALIASES.deposit_and_stake
              ),
              n = this.curve.contracts[this.gauge.address].contract;
            if (
              'approved_to_deposit' in n &&
              !(yield n.approved_to_deposit(
                this.curve.constants.ALIASES.deposit_and_stake,
                this.curve.signerAddress,
                this.curve.constantOptions
              ))
            ) {
              let e = ay(
                yield n.set_approve_deposit.estimateGas(
                  this.curve.constants.ALIASES.deposit_and_stake,
                  !0,
                  this.curve.constantOptions
                )
              );
              return [
                ...t,
                (yield n.set_approve_deposit(
                  this.curve.constants.ALIASES.deposit_and_stake,
                  !0,
                  Object.assign(Object.assign({}, this.curve.options), { gasLimit: e })
                )).hash,
              ];
            }
            return t;
          });
        }
        depositAndStakeWrappedEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrapped method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this._depositAndStake(e, 1, !1, !0);
          });
        }
        depositAndStakeWrapped(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.1) {
            if (this.gauge.address === this.curve.constants.ZERO_ADDRESS)
              throw Error(
                `depositAndStakeWrapped method doesn't exist for pool ${this.name} (id: ${this.name}). There is no gauge`
              );
            if (this.isPlain || this.isFake)
              throw Error(
                `depositAndStakeWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this._depositAndStake(e, t, !1, !1);
          });
        }
        _depositAndStake(e, t, n, a) {
          return o5(this, void 0, void 0, function* () {
            let i = n ? [...this.underlyingCoinAddresses] : [...this.wrappedCoinAddresses],
              s = n ? this.underlyingCoins : this.wrappedCoinAddresses,
              u = n ? this.underlyingDecimals : this.wrappedDecimals,
              p = (n && this.zap) || this.address;
            if (e.length !== i.length)
              throw Error(
                `${this.name} pool has ${i.length} coins (amounts provided for ${e.length})`
              );
            let o = n
              ? Object.values(yield this.wallet.underlyingCoinBalances())
              : Object.values(yield this.wallet.wrappedCoinBalances());
            for (let t = 0; t < o.length; t++)
              if (Number(o[t]) < Number(e[t]))
                throw Error(`Not enough ${s[t]}. Actual: ${o[t]}, required: ${e[t]}`);
            let y = n
              ? yield this.depositAndStakeIsApproved(e)
              : yield this.depositAndStakeWrappedIsApproved(e);
            if (a && !y) throw Error('Token allowance is needed to estimate gas');
            a ||
              (n
                ? yield this.depositAndStakeApprove(e)
                : yield this.depositAndStakeWrappedApprove(e));
            let d = e.map((e, t) => an(e, u[t])),
              m = this.curve.contracts[this.curve.constants.ALIASES.deposit_and_stake].contract,
              r =
                n &&
                (this.isLending || (this.isCrypto && !this.isPlain)) &&
                (!this.zap || 'avaxcrypto' == this.id),
              l =
                (!this.isCrypto && this.isNg && this.isPlain) ||
                (n && this.isMeta && new o0(this.basePool, this.curve).isNg),
              c = au(
                ai(
                  n
                    ? this.curve.parseUnits(yield this.depositAndStakeExpected(e))
                    : this.curve.parseUnits(yield this.depositAndStakeWrappedExpected(e))
                )
                  .times(100 - t)
                  .div(100)
              ),
              f = d[ao(i)] || this.curve.parseUnits('0'),
              _ = oD.includes(this.curve.chainId)
                ? yield m.deposit_and_stake.estimateGas(
                    p,
                    this.lpToken,
                    this.gauge.address,
                    s.length,
                    i,
                    d,
                    c,
                    r,
                    l,
                    this.isMetaFactory && n ? this.address : this.curve.constants.ZERO_ADDRESS,
                    Object.assign(Object.assign({}, this.curve.constantOptions), { value: f })
                  )
                : yield m.deposit_and_stake.estimateGas(
                    p,
                    this.lpToken,
                    this.gauge.address,
                    s.length,
                    i,
                    d,
                    c,
                    l,
                    this.isMetaFactory && n ? this.address : this.curve.constants.ZERO_ADDRESS,
                    Object.assign(Object.assign({}, this.curve.constantOptions), { value: f })
                  );
            if (a) return ad(_);
            yield this.curve.updateFeeData();
            let b = (am(_) * this.curve.parseUnits('200', 0)) / this.curve.parseUnits('100', 0);
            return oD.includes(this.curve.chainId)
              ? (yield m.deposit_and_stake(
                  p,
                  this.lpToken,
                  this.gauge.address,
                  s.length,
                  i,
                  d,
                  c,
                  r,
                  l,
                  this.isMetaFactory && n ? this.address : this.curve.constants.ZERO_ADDRESS,
                  Object.assign(Object.assign({}, this.curve.options), { gasLimit: b, value: f })
                )).hash
              : (yield m.deposit_and_stake(
                  p,
                  this.lpToken,
                  this.gauge.address,
                  s.length,
                  i,
                  d,
                  c,
                  l,
                  this.isMetaFactory && n ? this.address : this.curve.constants.ZERO_ADDRESS,
                  Object.assign(Object.assign({}, this.curve.options), { gasLimit: b, value: f })
                )).hash;
          });
        }
        withdrawExpected(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            return (
              !this.zap ||
              (yield aM.call(this.curve, [this.lpToken], [e], this.curve.signerAddress, this.zap))
            );
          });
        }
        withdrawApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            return this.zap ? yield aE.call(this.curve, [this.lpToken], [e], this.zap) : 0;
          });
        }
        withdrawApprove(e) {
          return o5(this, void 0, void 0, function* () {
            return this.zap ? yield aC.call(this.curve, [this.lpToken], [e], this.zap) : [];
          });
        }
        withdrawEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(`withdraw method doesn't exist for pool ${this.name} (id: ${this.name})`);
          });
        }
        withdraw(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.5) {
            throw Error(`withdraw method doesn't exist for pool ${this.name} (id: ${this.name})`);
          });
        }
        withdrawWrappedExpected(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawWrappedEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawWrapped(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.5) {
            throw Error(
              `withdrawWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawImbalanceExpected(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isCrypto)
              throw Error(
                `withdrawImbalanceExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this.calcLpTokenAmount(e, !1);
          });
        }
        withdrawImbalanceBonus(e) {
          return o5(this, void 0, void 0, function* () {
            let t = [],
              n = this.curve.contracts[this.address].multicallContract;
            t =
              this.isCrypto || 'wsteth' === this.id
                ? this.curve.isLiteChain
                  ? (this.id.includes('twocrypto')
                      ? [
                          1,
                          Number(yield this.curve.contracts[this.address].contract.price_oracle()) /
                            1e18,
                        ]
                      : [
                          1,
                          ...(yield this.curve.multicallProvider.all([
                            n.price_oracle(0),
                            n.price_oracle(1),
                          ])).map((e) => Number(e) / 1e18),
                        ]
                    ).map(aa)
                  : (yield this._underlyingPrices()).map(aa)
                : yield this._storedRatesBN(!0);
            let a = e.map(aa).reduce((e, n, a) => t[a].times(n).plus(e), aa(0)),
              i = yield this.withdrawImbalanceExpected(e),
              s = (yield this.withdrawExpected(i))
                .map(aa)
                .reduce((e, n, a) => t[a].times(n).plus(e), aa(0));
            return a.minus(s).div(s).times(100).toString();
          });
        }
        withdrawImbalanceIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isCrypto)
              throw Error(
                `withdrawImbalanceIsApproved method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            if (this.zap) {
              let t = e.map((e, t) => an(e, this.underlyingDecimals[t])),
                n =
                  ((yield this._calcLpTokenAmount(t, !1)) * this.curve.parseUnits('101', 0)) /
                  this.curve.parseUnits('100', 0);
              return yield aM.call(
                this.curve,
                [this.lpToken],
                [this.curve.formatUnits(n, 18)],
                this.curve.signerAddress,
                this.zap
              );
            }
            return !0;
          });
        }
        withdrawImbalanceApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isCrypto)
              throw Error(
                `withdrawImbalanceApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            if (this.zap) {
              let t = e.map((e, t) => an(e, this.underlyingDecimals[t])),
                n =
                  ((yield this._calcLpTokenAmount(t, !1)) * this.curve.parseUnits('101', 0)) /
                  this.curve.parseUnits('100', 0);
              return yield aE.call(
                this.curve,
                [this.lpToken],
                [this.curve.formatUnits(n, 18)],
                this.zap
              );
            }
            return 0;
          });
        }
        withdrawImbalanceApprove(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isCrypto)
              throw Error(
                `withdrawImbalanceApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            if (this.zap) {
              let t = e.map((e, t) => an(e, this.underlyingDecimals[t])),
                n =
                  ((yield this._calcLpTokenAmount(t, !1)) * this.curve.parseUnits('101', 0)) /
                  this.curve.parseUnits('100', 0);
              return yield aC.call(
                this.curve,
                [this.lpToken],
                [this.curve.formatUnits(n, 18)],
                this.zap
              );
            }
            return [];
          });
        }
        withdrawImbalanceEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawImbalance method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawImbalance(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.5) {
            throw Error(
              `withdrawImbalance method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawImbalanceWrappedExpected(e) {
          return o5(this, void 0, void 0, function* () {
            if (this.isCrypto || this.isPlain || this.isFake)
              throw Error(
                `withdrawImbalanceWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            return yield this.calcLpTokenAmountWrapped(e, !1);
          });
        }
        withdrawImbalanceWrappedBonus(e) {
          return o5(this, void 0, void 0, function* () {
            let t = yield this._wrappedPrices(),
              n = e
                .map(ae)
                .map(Number)
                .reduce((e, n, a) => e + n * t[a], 0),
              a = Number(yield this.withdrawImbalanceWrappedExpected(e)),
              i = (yield this.withdrawWrappedExpected(a))
                .map(Number)
                .reduce((e, n, a) => e + n * t[a], 0);
            return String(((n - i) / i) * 100);
          });
        }
        withdrawImbalanceWrappedEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawImbalanceWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawImbalanceWrapped(e) {
          return o5(this, arguments, void 0, function* (e, t = 0.5) {
            throw Error(
              `withdrawImbalanceWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        _withdrawOneCoinExpected(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawOneCoinExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawOneCoinExpected(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = this._getCoinIdx(t),
              a = an(e),
              i = yield this._withdrawOneCoinExpected(a, n);
            return this.curve.formatUnits(i, this.underlyingDecimals[n]);
          });
        }
        withdrawOneCoinBonus(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = [],
              a = this.curve.contracts[this.address].multicallContract,
              i = (n =
                this.isCrypto || 'wsteth' === this.id
                  ? this.curve.isLiteChain
                    ? (this.id.includes('twocrypto')
                        ? [
                            1,
                            Number(
                              yield this.curve.contracts[this.address].contract.price_oracle()
                            ) / 1e18,
                          ]
                        : [
                            1,
                            ...(yield this.curve.multicallProvider.all([
                              a.price_oracle(0),
                              a.price_oracle(1),
                            ])).map((e) => Number(e) / 1e18),
                          ]
                      ).map(aa)
                    : (yield this._underlyingPrices()).map(aa)
                  : yield this._storedRatesBN(!0))[this._getCoinIdx(t)],
              s = aa(yield this.withdrawOneCoinExpected(e, t)).times(i),
              u = (yield this.withdrawExpected(e))
                .map(aa)
                .reduce((e, t, a) => n[a].times(t).plus(e), aa(0));
            return s.minus(u).div(u).times(100).toString();
          });
        }
        withdrawOneCoinIsApproved(e) {
          return o5(this, void 0, void 0, function* () {
            return (
              !this.zap ||
              (yield aM.call(this.curve, [this.lpToken], [e], this.curve.signerAddress, this.zap))
            );
          });
        }
        withdrawOneCoinApproveEstimateGas(e) {
          return o5(this, void 0, void 0, function* () {
            return this.zap ? yield aE.call(this.curve, [this.lpToken], [e], this.zap) : 0;
          });
        }
        withdrawOneCoinApprove(e) {
          return o5(this, void 0, void 0, function* () {
            return this.zap ? yield aC.call(this.curve, [this.lpToken], [e], this.zap) : [];
          });
        }
        withdrawOneCoinEstimateGas(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawOneCoin method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawOneCoin(e, t) {
          return o5(this, arguments, void 0, function* (e, t, n = 0.5) {
            throw Error(
              `withdrawOneCoin method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        _withdrawOneCoinWrappedExpected(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawOneCoinWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawOneCoinWrappedExpected(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = this._getCoinIdx(t, !1),
              a = an(e),
              i = yield this._withdrawOneCoinWrappedExpected(a, n);
            return this.curve.formatUnits(i, this.wrappedDecimals[n]);
          });
        }
        withdrawOneCoinWrappedBonus(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = yield this._wrappedPrices(),
              a = n[this._getCoinIdx(t, !1)],
              i = Number(yield this.withdrawOneCoinWrappedExpected(e, t)),
              s = (yield this.withdrawWrappedExpected(e))
                .map(Number)
                .reduce((e, t, a) => e + t * n[a], 0);
            return String(((i * a - s) / s) * 100);
          });
        }
        withdrawOneCoinWrappedEstimateGas(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `withdrawOneCoinWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        withdrawOneCoinWrapped(e, t) {
          return o5(this, arguments, void 0, function* (e, t, n = 0.5) {
            throw Error(
              `withdrawOneCoinWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        _userLpTotalBalance(e) {
          return o5(this, void 0, void 0, function* () {
            let t = yield this.wallet.lpTokenBalances(e),
              n = aa(t.lpToken);
            return 'gauge' in t && (n = n.plus(aa(t.gauge))), n;
          });
        }
        userBalances() {
          return o5(this, arguments, void 0, function* (e = '') {
            if (!(e = e || this.curve.signerAddress))
              throw Error('Need to connect wallet or pass address into args');
            let t = yield this._userLpTotalBalance(e);
            return t.eq(0)
              ? this.underlyingCoins.map(() => '0')
              : yield this.withdrawExpected(t.toFixed(18));
          });
        }
        userWrappedBalances() {
          return o5(this, arguments, void 0, function* (e = '') {
            if (!(e = e || this.curve.signerAddress))
              throw Error('Need to connect wallet or pass address into args');
            let t = yield this._userLpTotalBalance(e);
            return t.eq(0)
              ? this.wrappedCoins.map(() => '0')
              : yield this.withdrawWrappedExpected(t.toFixed(18));
          });
        }
        userLiquidityUSD() {
          return o5(this, arguments, void 0, function* (e = '') {
            let t = yield this._userLpTotalBalance(e),
              n = yield aS.call(this.curve, this.lpToken);
            return t.times(n).toFixed(8);
          });
        }
        baseProfit() {
          return o5(this, arguments, void 0, function* (e = '') {
            let t = yield this.stats.baseApy();
            if (!('week' in t)) return { day: '0', week: '0', month: '0', year: '0' };
            let n = aa(t.week).div(100),
              a = aa(yield this.userLiquidityUSD(e)),
              i = n.times(a),
              s = i.div(12),
              u = i.div(52);
            return {
              day: i.div(365).toString(),
              week: u.toString(),
              month: s.toString(),
              year: i.toString(),
            };
          });
        }
        userShare() {
          return o5(this, arguments, void 0, function* (e = '') {
            let t, n;
            let a = this.gauge.address !== this.curve.constants.ZERO_ADDRESS;
            if (!(e = e || this.curve.signerAddress))
              throw Error('Need to connect wallet or pass address into args');
            let i = yield this.wallet.lpTokenBalances(e),
              s = aa(i.lpToken);
            return (
              a && (s = s.plus(aa(i.gauge))),
              a
                ? ([t, n] = (yield this.curve.multicallProvider.all([
                    this.curve.contracts[this.lpToken].multicallContract.totalSupply(),
                    this.curve.contracts[this.gauge.address].multicallContract.totalSupply(),
                  ])).map((e) => this.curve.formatUnits(e)))
                : (t = this.curve.formatUnits(
                    yield this.curve.contracts[this.lpToken].contract.totalSupply(
                      this.curve.constantOptions
                    )
                  )),
              {
                lpUser: s.toString(),
                lpTotal: t,
                lpShare: aa(t).gt(0) ? s.div(t).times(100).toString() : '0',
                gaugeUser: i.gauge,
                gaugeTotal: n,
                gaugeShare: a
                  ? aa(n).gt(0)
                    ? aa(i.gauge).div(n).times(100).toString()
                    : '0'
                  : void 0,
              }
            );
          });
        }
        _swapExpected(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            let a = this.isCrypto && this.isMeta ? this.zap : this.address,
              i = this.curve.contracts[a].contract;
            return 'get_dy_underlying' in i
              ? yield i.get_dy_underlying(e, t, n, this.curve.constantOptions)
              : 'get_dy(address,uint256,uint256,uint256)' in i
                ? yield i.get_dy(this.address, e, t, n, this.curve.constantOptions)
                : yield i.get_dy(e, t, n, this.curve.constantOptions);
          });
        }
        swapExpected(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            let a = this._getCoinIdx(e),
              i = this._getCoinIdx(t),
              s = an(n, this.underlyingDecimals[a]),
              u = yield this._swapExpected(a, i, s);
            return this.curve.formatUnits(u, this.underlyingDecimals[i]);
          });
        }
        _swapRequired(e, t, n, a) {
          return o5(this, void 0, void 0, function* () {
            if (this.isCrypto) {
              if (this.isNg)
                return yield this.curve.contracts[this.address].contract.get_dx(
                  e,
                  t,
                  n,
                  this.curve.constantOptions
                );
              let i = this.curve.contracts[this.curve.constants.ALIASES.crypto_calc].contract;
              if (!this.isMeta || !a)
                return yield i.get_dx(
                  this.address,
                  e,
                  t,
                  n,
                  this.wrappedCoins.length,
                  this.curve.constantOptions
                );
              {
                let a = new o0(this.basePool, this.curve);
                if (3 === this.wrappedCoins.length)
                  return yield i.get_dx_tricrypto_meta_underlying(
                    this.address,
                    e,
                    t,
                    n,
                    this.wrappedCoins.length,
                    a.address,
                    a.lpToken,
                    this.curve.constantOptions
                  );
                if (a.isFake) {
                  let s = new o0(a.basePool, this.curve);
                  return yield i.get_dx_double_meta_underlying(
                    this.address,
                    e,
                    t,
                    n,
                    a.address,
                    a.zap,
                    s.address,
                    s.lpToken,
                    this.curve.constantOptions
                  );
                }
                return yield i.get_dx_meta_underlying(
                  this.address,
                  e,
                  t,
                  n,
                  this.underlyingCoins.length,
                  a.address,
                  a.lpToken,
                  this.curve.constantOptions
                );
              }
            }
            {
              if (this.isNg) {
                let i = this.curve.contracts[this.address].contract;
                return this.isMeta && a
                  ? yield i.get_dx_underlying(e, t, n, this.curve.constantOptions)
                  : yield i.get_dx(e, t, n, this.curve.constantOptions);
              }
              let i = this.curve.contracts[this.curve.constants.ALIASES.stable_calc].contract;
              if (this.isMeta) {
                let s = new o0(this.basePool, this.curve);
                return a
                  ? yield i.get_dx_meta_underlying(
                      this.address,
                      e,
                      t,
                      n,
                      this.underlyingCoins.length,
                      s.address,
                      s.lpToken,
                      this.curve.constantOptions
                    )
                  : yield i.get_dx_meta(
                      this.address,
                      e,
                      t,
                      n,
                      this.wrappedCoins.length,
                      s.address,
                      this.curve.constantOptions
                    );
              }
              return a && this.isLending
                ? yield i.get_dx_underlying(
                    this.address,
                    e,
                    t,
                    n,
                    this.underlyingCoins.length,
                    this.curve.constantOptions
                  )
                : yield i.get_dx(
                    this.address,
                    e,
                    t,
                    n,
                    this.wrappedCoins.length,
                    this.curve.constantOptions
                  );
            }
          });
        }
        swapRequired(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            let a = this._getCoinIdx(e),
              i = this._getCoinIdx(t),
              s = an(n, this.underlyingDecimals[i]),
              u = yield this._swapRequired(a, i, s, !0);
            return this.curve.formatUnits(u, this.underlyingDecimals[a]);
          });
        }
        swapWrappedRequired(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `swapWrappedRequired method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        swapPriceImpact(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            let a = this._getCoinIdx(e),
              i = this._getCoinIdx(t),
              [s, u] = [this.underlyingDecimals[a], this.underlyingDecimals[i]],
              p = an(n, s),
              o = yield this._swapExpected(a, i, p),
              y = aY(p, o, s, u),
              d = ai(p, 0);
            if (y.gte(d)) return 0;
            let m = au(y.div(Math.pow(10, s)), s),
              r = yield this._swapExpected(a, i, m);
            return Number(n7(aZ(p, o, m, r, s, u).toFixed(4)));
          });
        }
        _swapContractAddress() {
          return (this.isCrypto && this.isMeta) ||
            (this.isMetaFactory && new o0(this.basePool, this.curve).isLending)
            ? this.zap
            : this.address;
        }
        swapIsApproved(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = this._swapContractAddress(),
              a = this._getCoinIdx(e);
            return yield aM.call(
              this.curve,
              [this.underlyingCoinAddresses[a]],
              [t],
              this.curve.signerAddress,
              n
            );
          });
        }
        swapApproveEstimateGas(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = this._swapContractAddress(),
              a = this._getCoinIdx(e);
            return yield aE.call(this.curve, [this.underlyingCoinAddresses[a]], [t], n);
          });
        }
        swapApprove(e, t) {
          return o5(this, void 0, void 0, function* () {
            let n = this._swapContractAddress(),
              a = this._getCoinIdx(e);
            return yield aC.call(this.curve, [this.underlyingCoinAddresses[a]], [t], n);
          });
        }
        swapEstimateGas(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            throw Error(`swap method doesn't exist for pool ${this.name} (id: ${this.name})`);
          });
        }
        swap(e, t, n) {
          return o5(this, arguments, void 0, function* (e, t, n, a = 0.5) {
            throw Error(`swap method doesn't exist for pool ${this.name} (id: ${this.name})`);
          });
        }
        _swapWrappedExpected(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            return yield this.curve.contracts[this.address].contract.get_dy(
              e,
              t,
              n,
              this.curve.constantOptions
            );
          });
        }
        swapWrappedExpected(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `swapWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        swapWrappedPriceImpact(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            if (this.isPlain || this.isFake)
              throw Error(
                `swapWrappedPriceImpact method doesn't exist for pool ${this.name} (id: ${this.name})`
              );
            let a = this._getCoinIdx(e, !1),
              i = this._getCoinIdx(t, !1),
              [s, u] = [this.wrappedDecimals[a], this.wrappedDecimals[i]],
              p = an(n, s),
              o = yield this._swapWrappedExpected(a, i, p),
              y = aY(p, o, s, u),
              d = ai(p, 0);
            if (y.gte(d)) return 0;
            let m = au(y.div(Math.pow(10, s)), s),
              r = yield this._swapWrappedExpected(a, i, m);
            return Number(n7(aZ(p, o, m, r, s, u).toFixed(4)));
          });
        }
        swapWrappedIsApproved(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `swapWrappedIsApproved method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        swapWrappedApproveEstimateGas(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `swapWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        swapWrappedApprove(e, t) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `swapWrappedApprove method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        swapWrappedEstimateGas(e, t, n) {
          return o5(this, void 0, void 0, function* () {
            throw Error(
              `swapWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        swapWrapped(e, t, n) {
          return o5(this, arguments, void 0, function* (e, t, n, a = 0.5) {
            throw Error(
              `swapWrapped method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          });
        }
        getGaugeStatus() {
          return o5(this, void 0, void 0, function* () {
            let e = yield c();
            return e[this.gauge.address] ? e[this.gauge.address].gaugeStatus : null;
          });
        }
        getIsGaugeKilled() {
          return o5(this, void 0, void 0, function* () {
            let e = yield c();
            return !!e[this.gauge.address] && e[this.gauge.address].is_killed;
          });
        }
      }
      var o6 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function o1(e) {
        return o6(this, void 0, void 0, function* () {
          let { curve: t } = this,
            n = [];
          for (let e = 0; e < this.wrappedCoinAddresses.length; e++) {
            let a = yield t.contracts[this.address].contract.balances(e, t.constantOptions);
            n.push(ai(a, this.wrappedDecimals[e]));
          }
          let a = ai(yield t.contracts[this.lpToken].contract.totalSupply(t.constantOptions)),
            i = [];
          for (let t of n) i.push(t.times(ai(e)).div(a));
          return i.map((e, t) => au(e, this.wrappedDecimals[t]));
        });
      }
      function o8(e) {
        return o6(this, void 0, void 0, function* () {
          let t = yield o1.call(this, e),
            [n] = t.splice(this.metaCoinIdx, 1),
            a = new o0(this.basePool, this.curve),
            i = a.isMeta ? yield o8.call(a, n) : yield o1.call(a, n);
          return t.splice(this.metaCoinIdx, 0, ...i), t;
        });
      }
      var o3 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let o4 = {
          underlyingBalances() {
            return o3(this, void 0, void 0, function* () {
              let e = this.pool.curve,
                t = e.contracts[this.pool.address].multicallContract,
                n = this.pool.wrappedCoins.map((e, n) => t.balances(n)),
                a = yield e.multicallProvider.all(n),
                [i] = a.splice(this.pool.metaCoinIdx, 1),
                s = new o0(this.pool.basePool, e),
                u = s.isMeta ? yield o8.call(s, i) : yield o1.call(s, i);
              return (
                a.splice(this.pool.metaCoinIdx, 0, ...u),
                a.map((t, n) => e.formatUnits(t, this.pool.underlyingDecimals[n]))
              );
            });
          },
        },
        o9 = {
          underlyingBalances() {
            return o3(this, void 0, void 0, function* () {
              let e = this.pool.curve,
                t = e.contracts[this.pool.address].multicallContract,
                n = this.pool.wrappedCoins.map((e, n) => t.balances(n)),
                a = yield e.multicallProvider.all(n),
                i = yield this.pool._getRates();
              return a
                .map((t, n) => (t * i[n]) / e.parseUnits(String(1e18), 0))
                .map((t, n) => e.formatUnits(t, this.pool.underlyingDecimals[n]));
            });
          },
        };
      var o7 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function ye(e, t, n) {
        let a = e.map(aa),
          i = t.map(aa),
          s = a.reduce((e, t) => e.plus(t)),
          u = a.map((e) => e.div(s)),
          p = i.map((e, t) => i.map((e, n) => u[n].times(i[t]).div(u[t]))),
          o = p.map(([e]) => e),
          y = o.filter((e) => !e.isZero());
        if (0 === y.length) return e.map(() => '0');
        let d = z.A.min(...y);
        return p[o.map(String).indexOf(d.toString())].map((e, t) =>
          i[t].isZero() ? '0' : e.toFixed(n[t])
        );
      }
      let yt = {
          depositBalancedAmounts() {
            return o7(this, void 0, void 0, function* () {
              let e = yield this.stats.underlyingBalances(),
                t = Object.values(yield this.wallet.underlyingCoinBalances());
              return ye(e, t, this.underlyingDecimals).map((e, n) =>
                z.A.min(aa(e), aa(t[n])).toString()
              );
            });
          },
        },
        yn = {
          depositBalancedAmounts() {
            return o7(this, void 0, void 0, function* () {
              let e = yield this.stats.underlyingBalances(),
                t = Object.values(yield this.wallet.underlyingCoinBalances()),
                n = yield this._underlyingPrices();
              return ye(
                e.map((e, t) => aa(e).times(n[t]).toString()),
                t.map((e, t) => aa(e).times(n[t]).toString()),
                this.underlyingDecimals
              ).map((e, a) =>
                z.A.min(
                  aa(aa(e).div(n[a]).toFixed(this.underlyingDecimals[a])),
                  aa(t[a])
                ).toString()
              );
            });
          },
        },
        ya = {
          depositWrappedBalancedAmounts() {
            return o7(this, void 0, void 0, function* () {
              let e = yield this.stats.wrappedBalances(),
                t = Object.values(yield this.wallet.wrappedCoinBalances());
              return ye(e, t, this.underlyingDecimals).map((e, n) =>
                z.A.min(aa(e), aa(t[n])).toString()
              );
            });
          },
        },
        yi = {
          depositWrappedBalancedAmounts() {
            return o7(this, void 0, void 0, function* () {
              let e = (yield this.stats.wrappedBalances()).map(Number),
                t = Object.values(yield this.wallet.wrappedCoinBalances()).map(Number),
                n = yield this._wrappedPrices();
              return ye(
                e.map((e, t) => aa(e).times(n[t]).toString()),
                t.map((e, t) => aa(e).times(n[t]).toString()),
                this.wrappedDecimals
              ).map((e, a) =>
                z.A.min(aa(aa(e).div(n[a]).toFixed(this.wrappedDecimals[a])), aa(t[a])).toString()
              );
            });
          },
        };
      var ys = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function yu(e) {
        return ys(this, arguments, void 0, function* (e, t = !1) {
          if (e.length !== this.underlyingCoinAddresses.length)
            throw Error(
              `${this.name} pool has ${this.underlyingCoinAddresses.length} coins (amounts provided for ${e.length})`
            );
          let n = Object.values(yield this.wallet.underlyingCoinBalances());
          for (let t = 0; t < n.length; t++)
            if (Number(n[t]) < Number(e[t]))
              throw Error(
                `Not enough ${this.underlyingCoins[t]}. Actual: ${n[t]}, required: ${e[t]}`
              );
          if (
            t &&
            !(yield aM.call(
              this.curve,
              this.underlyingCoinAddresses,
              e,
              this.curve.signerAddress,
              this.zap || this.address
            ))
          )
            throw Error('Token allowance is needed to estimate gas');
          return (
            t || (yield this.curve.updateFeeData()),
            e.map((e, t) => an(e, this.underlyingDecimals[t]))
          );
        });
      }
      function yp(e) {
        return ys(this, arguments, void 0, function* (e, t = 0.5) {
          return au(
            ai(yield this._calcLpTokenAmount(e))
              .times(100 - t)
              .div(100)
          );
        });
      }
      let yo = {
          _deposit(e, t) {
            return ys(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.underlyingCoinAddresses, e, this.zap));
              let a = yield yp.call(this, e, t),
                i = e[ao(this.underlyingCoinAddresses)] || an('0'),
                s = this.curve.contracts[this.zap].contract,
                u = yield s.add_liquidity.estimateGas(
                  this.address,
                  e,
                  a,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
                );
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield s.add_liquidity(
                this.address,
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p, value: i })
              )).hash;
            });
          },
          depositEstimateGas(e) {
            return ys(this, void 0, void 0, function* () {
              let t = yield yu.call(this, e, !0);
              return yield yo._deposit.call(this, t, 0.1, !0);
            });
          },
          deposit(e, t) {
            return ys(this, void 0, void 0, function* () {
              let n = yield yu.call(this, e);
              return yield yo._deposit.call(this, n, t);
            });
          },
        },
        yy = {
          _deposit(e, t) {
            return ys(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.underlyingCoinAddresses, e, this.zap));
              let a = yield yp.call(this, e, t),
                i = e[ao(this.underlyingCoinAddresses)] || this.curve.parseUnits('0'),
                s = this.curve.contracts[this.zap].contract,
                u = yield s.add_liquidity.estimateGas(
                  this.address,
                  e,
                  a,
                  !0,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
                );
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield s.add_liquidity(
                this.address,
                e,
                a,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p, value: i })
              )).hash;
            });
          },
          depositEstimateGas(e) {
            return ys(this, void 0, void 0, function* () {
              let t = yield yu.call(this, e, !0);
              return yield yy._deposit.call(this, t, 0.1, !0);
            });
          },
          deposit(e, t) {
            return ys(this, void 0, void 0, function* () {
              let n = yield yu.call(this, e);
              return yield yy._deposit.call(this, n, t);
            });
          },
        },
        yd = {
          _deposit(e, t) {
            return ys(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.underlyingCoinAddresses, e, this.zap));
              let a = yield yp.call(this, e, t),
                i = e[ao(this.underlyingCoinAddresses)] || this.curve.parseUnits('0'),
                s = this.curve.contracts[this.zap].contract,
                u = [e, a];
              `add_liquidity(uint256[${this.underlyingCoinAddresses.length}],uint256,bool)` in s &&
                u.push(!0);
              let p = yield s.add_liquidity.estimateGas(
                ...u,
                Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
              );
              if (n) return ad(p);
              let o = ay(am(p));
              return (yield s.add_liquidity(
                ...u,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: o, value: i })
              )).hash;
            });
          },
          depositEstimateGas(e) {
            return ys(this, void 0, void 0, function* () {
              let t = yield yu.call(this, e, !0);
              return yield yd._deposit.call(this, t, 0.1, !0);
            });
          },
          deposit(e, t) {
            return ys(this, void 0, void 0, function* () {
              let n = yield yu.call(this, e);
              return yield yd._deposit.call(this, n, t);
            });
          },
        },
        ym = {
          _deposit(e, t) {
            return ys(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.underlyingCoinAddresses, e, this.address));
              let a = yield yp.call(this, e, t),
                i = e[ao(this.underlyingCoinAddresses)] || this.curve.parseUnits('0'),
                s = this.curve.contracts[this.address].contract,
                u = yield s.add_liquidity.estimateGas(
                  e,
                  a,
                  !0,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
                );
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield s.add_liquidity(
                e,
                a,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p, value: i })
              )).hash;
            });
          },
          depositEstimateGas(e) {
            return ys(this, void 0, void 0, function* () {
              let t = yield yu.call(this, e, !0);
              return yield ym._deposit.call(this, t, 0.1, !0);
            });
          },
          deposit(e, t) {
            return ys(this, void 0, void 0, function* () {
              let n = yield yu.call(this, e);
              return yield ym._deposit.call(this, n, t);
            });
          },
        },
        yr = {
          _deposit(e, t) {
            return ys(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.wrappedCoinAddresses, e, this.address));
              let a = yield yp.call(this, e, t),
                i = e[ao(this.wrappedCoinAddresses)] || this.curve.parseUnits('0'),
                s = this.curve.contracts[this.address].contract,
                u = yield s.add_liquidity.estimateGas(
                  e,
                  a,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
                );
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield s.add_liquidity(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p, value: i })
              )).hash;
            });
          },
          depositEstimateGas(e) {
            return ys(this, void 0, void 0, function* () {
              let t = yield yu.call(this, e, !0);
              return yield yr._deposit.call(this, t, 0.1, !0);
            });
          },
          deposit(e, t) {
            return ys(this, void 0, void 0, function* () {
              let n = yield yu.call(this, e);
              return yield yr._deposit.call(this, n, t);
            });
          },
        };
      var yl = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function yc(e) {
        return yl(this, arguments, void 0, function* (e, t = !1) {
          if (this.isFake)
            throw Error(
              `depositWrappedExpected method doesn't exist for pool ${this.name} (id: ${this.name})`
            );
          if (e.length !== this.wrappedCoinAddresses.length)
            throw Error(
              `${this.name} pool has ${this.wrappedCoinAddresses.length} coins (amounts provided for ${e.length})`
            );
          let n = Object.values(yield this.wallet.wrappedCoinBalances());
          for (let t = 0; t < n.length; t++)
            if (Number(n[t]) < Number(e[t]))
              throw Error(`Not enough ${this.wrappedCoins[t]}. Actual: ${n[t]}, required: ${e[t]}`);
          if (
            t &&
            !(yield aM.call(
              this.curve,
              this.wrappedCoinAddresses,
              e,
              this.curve.signerAddress,
              this.address
            ))
          )
            throw Error('Token allowance is needed to estimate gas');
          return (
            t || (yield this.curve.updateFeeData()), e.map((e, t) => an(e, this.wrappedDecimals[t]))
          );
        });
      }
      function yf(e) {
        return yl(this, arguments, void 0, function* (e, t = 0.5) {
          return au(
            ai(yield this._calcLpTokenAmount(e, !0, !1))
              .times(100 - t)
              .div(100)
          );
        });
      }
      let y_ = {
          _depositWrapped(e, t) {
            return yl(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.wrappedCoinAddresses, e, this.address));
              let a = yield yf.call(this, e, t),
                i = e[ao(this.wrappedCoinAddresses)] || this.curve.parseUnits('0'),
                s = this.curve.contracts[this.address].contract,
                u = yield s.add_liquidity.estimateGas(
                  e,
                  a,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
                );
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield s.add_liquidity(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p, value: i })
              )).hash;
            });
          },
          depositWrappedEstimateGas(e) {
            return yl(this, void 0, void 0, function* () {
              let t = yield yc.call(this, e, !0);
              return yield y_._depositWrapped.call(this, t, 0.1, !0);
            });
          },
          depositWrapped(e, t) {
            return yl(this, void 0, void 0, function* () {
              let n = yield yc.call(this, e);
              return yield y_._depositWrapped.call(this, n, t);
            });
          },
        },
        yb = {
          _depositWrapped(e, t) {
            return yl(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.call(this.curve, this.wrappedCoinAddresses, e, this.address));
              let a = yield yf.call(this, e, t),
                i = e[ao(this.wrappedCoinAddresses)] || this.curve.parseUnits('0'),
                s = this.curve.contracts[this.address].contract,
                u = yield s.add_liquidity.estimateGas(
                  e,
                  a,
                  !1,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: i })
                );
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield s.add_liquidity(
                e,
                a,
                !1,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p, value: i })
              )).hash;
            });
          },
          depositWrappedEstimateGas(e) {
            return yl(this, void 0, void 0, function* () {
              let t = yield yc.call(this, e, !0);
              return yield yb._depositWrapped.call(this, t, 0.1, !0);
            });
          },
          depositWrapped(e, t) {
            return yl(this, void 0, void 0, function* () {
              let n = yield yc.call(this, e);
              return yield yb._depositWrapped.call(this, n, t);
            });
          },
        };
      var yg = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let yv = {
          withdrawExpected(e) {
            return yg(this, void 0, void 0, function* () {
              let t = an(e);
              return (yield o1.call(this, t)).map((e, t) => ey(e, this.underlyingDecimals[t]));
            });
          },
        },
        yw = {
          withdrawExpected(e) {
            return yg(this, void 0, void 0, function* () {
              let t = an(e),
                n = yield o1.call(this, t),
                a = yield this._getRates();
              return n
                .map((e, t) => (e * a[t]) / an(String(1e18), 0))
                .map((e, t) => ey(e, this.underlyingDecimals[t]));
            });
          },
        },
        yh = {
          withdrawExpected(e) {
            return yg(this, void 0, void 0, function* () {
              let t = an(e);
              return (yield o8.call(this, t)).map((e, t) => ey(e, this.underlyingDecimals[t]));
            });
          },
        },
        yx = {
          withdrawWrappedExpected(e) {
            return yg(this, void 0, void 0, function* () {
              let t = an(e);
              return (yield o1.call(this, t)).map((e, t) => ey(e, this.wrappedDecimals[t]));
            });
          },
        };
      var yM = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function yA(e) {
        return yM(this, arguments, void 0, function* (e, t = !1) {
          let n = (yield this.wallet.lpTokenBalances()).lpToken;
          if (Number(n) < Number(e))
            throw Error(`Not enough LP tokens. Actual: ${n}, required: ${e}`);
          if (
            t &&
            this.zap &&
            !(yield aM.call(this.curve, [this.lpToken], [e], this.curve.signerAddress, this.zap))
          )
            throw Error('Token allowance is needed to estimate gas');
          return t || (yield this.curve.updateFeeData()), an(e);
        });
      }
      function yE(e) {
        return yM(this, arguments, void 0, function* (e, t = 0.5) {
          return (yield this.withdrawExpected(this.curve.formatUnits(e)))
            .map((e, t) => this.curve.parseUnits(e, this.underlyingDecimals[t]))
            .map((e, n) =>
              ai(e, this.underlyingDecimals[n])
                .times(100 - t)
                .div(100)
            )
            .map((e, t) => au(e, this.underlyingDecimals[t]));
        });
      }
      let yC = {
          _withdraw(e, t) {
            return yM(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.bind(this.curve, [this.lpToken], [e], this.zap));
              let a = yield yE.call(this, e, t),
                i = this.curve.contracts[this.zap].contract,
                s = yield i.remove_liquidity.estimateGas(
                  this.address,
                  e,
                  a,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity(
                this.address,
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawEstimateGas(e) {
            return yM(this, void 0, void 0, function* () {
              let t = yield yA.call(this, e, !0);
              return yield yC._withdraw.call(this, t, 0.1, !0);
            });
          },
          withdraw(e, t) {
            return yM(this, void 0, void 0, function* () {
              let n = yield yA.call(this, e);
              return yield yC._withdraw.call(this, n, t);
            });
          },
        },
        yk = {
          _withdraw(e, t) {
            return yM(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.bind(this.curve, [this.lpToken], [e], this.zap));
              let a = yield yE.call(this, e, t),
                i = this.curve.contracts[this.zap].contract,
                s = yield i.remove_liquidity.estimateGas(
                  this.address,
                  e,
                  a,
                  !0,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity(
                this.address,
                e,
                a,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawEstimateGas(e) {
            return yM(this, void 0, void 0, function* () {
              let t = yield yA.call(this, e, !0);
              return yield yk._withdraw.call(this, t, 0.1, !0);
            });
          },
          withdraw(e, t) {
            return yM(this, void 0, void 0, function* () {
              let n = yield yA.call(this, e);
              return yield yk._withdraw.call(this, n, t);
            });
          },
        },
        yD = {
          _withdraw(e, t) {
            return yM(this, arguments, void 0, function* (e, t, n = !1) {
              n || (yield aA.bind(this.curve, [this.lpToken], [e], this.zap));
              let a = yield yE.call(this, e, t),
                i = this.curve.contracts[this.zap].contract,
                s = [e, a];
              `remove_liquidity(uint256,uint256[${this.underlyingCoinAddresses.length}],bool)` in
                i && s.push(!0);
              let u = yield i.remove_liquidity.estimateGas(...s, this.curve.constantOptions);
              if (n) return ad(u);
              let p = ay(am(u));
              return (yield i.remove_liquidity(
                ...s,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawEstimateGas(e) {
            return yM(this, void 0, void 0, function* () {
              let t = yield yA.call(this, e, !0);
              return yield yD._withdraw.call(this, t, 0.1, !0);
            });
          },
          withdraw(e, t) {
            return yM(this, void 0, void 0, function* () {
              let n = yield yA.call(this, e);
              return yield yD._withdraw.call(this, n, t);
            });
          },
        },
        yT = {
          _withdraw(e, t) {
            return yM(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yE.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity.estimateGas(e, a, !0, this.curve.constantOptions);
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity(
                e,
                a,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawEstimateGas(e) {
            return yM(this, void 0, void 0, function* () {
              let t = yield yA.call(this, e, !0);
              return yield yT._withdraw.call(this, t, 0.1, !0);
            });
          },
          withdraw(e, t) {
            return yM(this, void 0, void 0, function* () {
              let n = yield yA.call(this, e);
              return yield yT._withdraw.call(this, n, t);
            });
          },
        },
        yS = {
          _withdraw(e, t) {
            return yM(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yE.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity.estimateGas(e, a, this.curve.constantOptions);
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawEstimateGas(e) {
            return yM(this, void 0, void 0, function* () {
              let t = yield yA.call(this, e, !0);
              return yield yS._withdraw.call(this, t, 0.1, !0);
            });
          },
          withdraw(e, t) {
            return yM(this, void 0, void 0, function* () {
              let n = yield yA.call(this, e);
              return yield yS._withdraw.call(this, n, t);
            });
          },
        };
      var yO = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function yF(e) {
        return yO(this, void 0, void 0, function* () {
          let t = (yield this.wallet.lpTokenBalances()).lpToken;
          if (Number(t) < Number(e))
            throw Error(`Not enough LP tokens. Actual: ${t}, required: ${e}`);
          return yield this.curve.updateFeeData(), an(e);
        });
      }
      function yB(e) {
        return yO(this, arguments, void 0, function* (e, t = 0.5) {
          return (yield this.withdrawWrappedExpected(this.curve.formatUnits(e)))
            .map((e, t) => this.curve.parseUnits(e, this.wrappedDecimals[t]))
            .map((e, n) =>
              ai(e, this.wrappedDecimals[n])
                .times(100 - t)
                .div(100)
            )
            .map((e, t) => au(e, this.wrappedDecimals[t]));
        });
      }
      let yR = {
          _withdrawWrapped(e, t) {
            return yO(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yB.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity.estimateGas(e, a, this.curve.constantOptions);
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawWrappedEstimateGas(e) {
            return yO(this, void 0, void 0, function* () {
              let t = yield yF.call(this, e);
              return yield yR._withdrawWrapped.call(this, t, 0.1, !0);
            });
          },
          withdrawWrapped(e, t) {
            return yO(this, void 0, void 0, function* () {
              let n = yield yF.call(this, e);
              return yield yR._withdrawWrapped.call(this, n, t);
            });
          },
        },
        yI = {
          _withdrawWrapped(e, t) {
            return yO(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yB.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity.estimateGas(e, a, !1, this.curve.constantOptions);
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity(
                e,
                a,
                !1,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawWrappedEstimateGas(e) {
            return yO(this, void 0, void 0, function* () {
              let t = yield yF.call(this, e);
              return yield yI._withdrawWrapped.call(this, t, 0.1, !0);
            });
          },
          withdrawWrapped(e, t) {
            return yO(this, void 0, void 0, function* () {
              let n = yield yF.call(this, e);
              return yield yI._withdrawWrapped.call(this, n, t);
            });
          },
        };
      var yL = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function yN(e) {
        return yL(this, arguments, void 0, function* (e, t = !1) {
          let n = yield this.withdrawImbalanceExpected(e),
            a = (yield this.wallet.lpTokenBalances()).lpToken;
          if (Number(a) < Number(n))
            throw Error(`Not enough LP tokens. Actual: ${a}, required: ${n}`);
          if (
            t &&
            this.zap &&
            !(yield aM.call(this.curve, [this.lpToken], [n], this.curve.signerAddress, this.zap))
          )
            throw Error('Token allowance is needed to estimate gas');
          return (
            t || (yield this.curve.updateFeeData()),
            e.map((e, t) => an(e, this.underlyingDecimals[t]))
          );
        });
      }
      function yP(e) {
        return yL(this, arguments, void 0, function* (e, t = 0.5) {
          return au(
            ai(yield this._calcLpTokenAmount(e, !1))
              .times(100 + t)
              .div(100)
          );
        });
      }
      let yq = {
          _withdrawImbalance(e, t) {
            return yL(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yP.call(this, e, t);
              n || (yield aA.call(this.curve, [this.lpToken], [a], this.zap));
              let i = this.curve.contracts[this.zap].contract,
                s = yield i.remove_liquidity_imbalance.estimateGas(
                  this.address,
                  e,
                  a,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity_imbalance(
                this.address,
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawImbalanceEstimateGas(e) {
            return yL(this, void 0, void 0, function* () {
              let t = yield yN.call(this, e, !0);
              return yield yq._withdrawImbalance.call(this, t, 0.1, !0);
            });
          },
          withdrawImbalance(e, t) {
            return yL(this, void 0, void 0, function* () {
              let n = yield yN.call(this, e);
              return yield yq._withdrawImbalance.call(this, n, t);
            });
          },
        },
        yj = {
          _withdrawImbalance(e, t) {
            return yL(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yP.call(this, e, t);
              n || (yield aA.call(this.curve, [this.lpToken], [a], this.zap));
              let i = this.curve.contracts[this.zap].contract,
                s = yield i.remove_liquidity_imbalance.estimateGas(
                  e,
                  a,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity_imbalance(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawImbalanceEstimateGas(e) {
            return yL(this, void 0, void 0, function* () {
              let t = yield yN.call(this, e, !0);
              return yield yj._withdrawImbalance.call(this, t, 0.1, !0);
            });
          },
          withdrawImbalance(e, t) {
            return yL(this, void 0, void 0, function* () {
              let n = yield yN.call(this, e);
              return yield yj._withdrawImbalance.call(this, n, t);
            });
          },
        },
        yU = {
          _withdrawImbalance(e, t) {
            return yL(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yP.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity_imbalance.estimateGas(
                  e,
                  a,
                  !0,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u =
                137 === this.curve.chainId && 'ren' === this.id
                  ? (s * this.curve.parseUnits('140', 0)) / this.curve.parseUnits('100', 0)
                  : ay(am(s));
              return (yield i.remove_liquidity_imbalance(
                e,
                a,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawImbalanceEstimateGas(e) {
            return yL(this, void 0, void 0, function* () {
              let t = yield yN.call(this, e, !0);
              return yield yU._withdrawImbalance.call(this, t, 0.1, !0);
            });
          },
          withdrawImbalance(e, t) {
            return yL(this, void 0, void 0, function* () {
              let n = yield yN.call(this, e);
              return yield yU._withdrawImbalance.call(this, n, t);
            });
          },
        },
        y$ = {
          _withdrawImbalance(e, t) {
            return yL(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yP.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity_imbalance.estimateGas(
                  e,
                  a,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity_imbalance(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawImbalanceEstimateGas(e) {
            return yL(this, void 0, void 0, function* () {
              let t = yield yN.call(this, e, !0);
              return yield y$._withdrawImbalance.call(this, t, 0.1, !0);
            });
          },
          withdrawImbalance(e, t) {
            return yL(this, void 0, void 0, function* () {
              let n = yield yN.call(this, e);
              return yield y$._withdrawImbalance.call(this, n, t);
            });
          },
        };
      var yG = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function yW(e) {
        return yG(this, void 0, void 0, function* () {
          let t = yield this.withdrawImbalanceWrappedExpected(e),
            n = (yield this.wallet.lpTokenBalances()).lpToken;
          if (Number(n) < Number(t))
            throw Error(`Not enough LP tokens. Actual: ${n}, required: ${t}`);
          return yield this.curve.updateFeeData(), e.map((e, t) => an(e, this.wrappedDecimals[t]));
        });
      }
      function yY(e) {
        return yG(this, arguments, void 0, function* (e, t = 0.5) {
          return au(
            ai(yield this._calcLpTokenAmount(e, !1, !1))
              .times(100 + t)
              .div(100)
          );
        });
      }
      let yZ = {
          _withdrawImbalanceWrapped(e, t) {
            return yG(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yY.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity_imbalance.estimateGas(
                  e,
                  a,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u = ay(am(s));
              return (yield i.remove_liquidity_imbalance(
                e,
                a,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawImbalanceWrappedEstimateGas(e) {
            return yG(this, void 0, void 0, function* () {
              let t = yield yW.call(this, e);
              return yield yZ._withdrawImbalanceWrapped.call(this, t, 0.1, !0);
            });
          },
          withdrawImbalanceWrapped(e, t) {
            return yG(this, void 0, void 0, function* () {
              let n = yield yW.call(this, e);
              return yield yZ._withdrawImbalanceWrapped.call(this, n, t);
            });
          },
        },
        yV = {
          _withdrawImbalanceWrapped(e, t) {
            return yG(this, arguments, void 0, function* (e, t, n = !1) {
              let a = yield yY.call(this, e, t),
                i = this.curve.contracts[this.address].contract,
                s = yield i.remove_liquidity_imbalance.estimateGas(
                  e,
                  a,
                  !1,
                  this.curve.constantOptions
                );
              if (n) return ad(s);
              let u =
                137 === this.curve.chainId && 'ren' === this.id
                  ? (am(s) * this.curve.parseUnits('140', 0)) / this.curve.parseUnits('100', 0)
                  : ay(am(s));
              return (yield i.remove_liquidity_imbalance(
                e,
                a,
                !1,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: u })
              )).hash;
            });
          },
          withdrawImbalanceWrappedEstimateGas(e) {
            return yG(this, void 0, void 0, function* () {
              let t = yield yW.call(this, e);
              return yield yV._withdrawImbalanceWrapped.call(this, t, 0.1, !0);
            });
          },
          withdrawImbalanceWrapped(e, t) {
            return yG(this, void 0, void 0, function* () {
              let n = yield yW.call(this, e);
              return yield yV._withdrawImbalanceWrapped.call(this, n, t);
            });
          },
        };
      var yJ = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let yH = {
          _withdrawOneCoinExpected(e, t) {
            return yJ(this, void 0, void 0, function* () {
              let n = this.curve.contracts[this.zap].contract;
              return yield n.calc_withdraw_one_coin(this.address, e, t, this.curve.constantOptions);
            });
          },
        },
        yK = {
          _withdrawOneCoinExpected(e, t) {
            return yJ(this, void 0, void 0, function* () {
              let n = this.curve.contracts[this.zap].contract;
              return yield n.calc_withdraw_one_coin(e, t, this.curve.constantOptions);
            });
          },
        },
        yz = {
          _withdrawOneCoinExpected(e, t) {
            return yJ(this, void 0, void 0, function* () {
              let n = this.curve.contracts[this.address].contract;
              return yield n.calc_withdraw_one_coin(e, t, !0, this.curve.constantOptions);
            });
          },
        },
        yX = {
          _withdrawOneCoinExpected(e, t) {
            return yJ(this, void 0, void 0, function* () {
              let n = this.curve.contracts[this.address].contract;
              return yield n.calc_withdraw_one_coin(e, t, this.curve.constantOptions);
            });
          },
        };
      var yQ = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function y2(e, t) {
        return yQ(this, arguments, void 0, function* (e, t, n = !1) {
          let a = (yield this.wallet.lpTokenBalances()).lpToken;
          if (Number(a) < Number(e))
            throw Error(`Not enough LP tokens. Actual: ${a}, required: ${e}`);
          if (
            n &&
            this.zap &&
            !(yield aM.call(this.curve, [this.lpToken], [e], this.curve.signerAddress, this.zap))
          )
            throw Error('Token allowance is needed to estimate gas');
          n || (yield this.curve.updateFeeData());
          let i = this._getCoinIdx(t);
          return [an(e), i];
        });
      }
      function y5(e, t) {
        return yQ(this, arguments, void 0, function* (e, t, n = 0.5) {
          return au(
            ai(yield this._withdrawOneCoinExpected(e, t))
              .times(100 - n)
              .div(100)
          );
        });
      }
      let y0 = {
          _withdrawOneCoin(e, t, n) {
            return yQ(this, arguments, void 0, function* (e, t, n, a = !1) {
              a || (yield aA.bind(this.curve, [this.lpToken], [e], this.zap));
              let i = yield y5.call(this, e, t, n),
                s = this.curve.contracts[this.zap].contract,
                u = yield s.remove_liquidity_one_coin.estimateGas(
                  this.address,
                  e,
                  t,
                  i,
                  this.curve.constantOptions
                );
              if (a) return ad(u);
              let p = ay(am(u));
              return (yield s.remove_liquidity_one_coin(
                this.address,
                e,
                t,
                i,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawOneCoinEstimateGas(e, t) {
            return yQ(this, void 0, void 0, function* () {
              let [n, a] = yield y2.call(this, e, t, !0);
              return yield y0._withdrawOneCoin.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoin(e, t, n) {
            return yQ(this, void 0, void 0, function* () {
              let [a, i] = yield y2.call(this, e, t);
              return yield y0._withdrawOneCoin.call(this, a, i, n);
            });
          },
        },
        y6 = {
          _withdrawOneCoin(e, t, n) {
            return yQ(this, arguments, void 0, function* (e, t, n, a = !1) {
              a || (yield aA.bind(this.curve, [this.lpToken], [e], this.zap));
              let i = yield y5.call(this, e, t, n),
                s = this.curve.contracts[this.zap].contract,
                u = yield s.remove_liquidity_one_coin.estimateGas(
                  this.address,
                  e,
                  t,
                  i,
                  !0,
                  this.curve.constantOptions
                );
              if (a) return ad(u);
              let p = ay(am(u));
              return (yield s.remove_liquidity_one_coin(
                this.address,
                e,
                t,
                i,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawOneCoinEstimateGas(e, t) {
            return yQ(this, void 0, void 0, function* () {
              let [n, a] = yield y2.call(this, e, t, !0);
              return yield y6._withdrawOneCoin.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoin(e, t, n) {
            return yQ(this, void 0, void 0, function* () {
              let [a, i] = yield y2.call(this, e, t);
              return yield y6._withdrawOneCoin.call(this, a, i, n);
            });
          },
        },
        y1 = {
          _withdrawOneCoin(e, t, n) {
            return yQ(this, arguments, void 0, function* (e, t, n, a = !1) {
              a || (yield aA.bind(this.curve, [this.lpToken], [e], this.zap));
              let i = yield y5.call(this, e, t, n),
                s = this.curve.contracts[this.zap].contract,
                u = [e, t, i];
              'remove_liquidity_one_coin(uint256,uint256,uint256,bool)' in s && u.push(!0);
              let p = yield s.remove_liquidity_one_coin.estimateGas(
                ...u,
                this.curve.constantOptions
              );
              if (a) return ad(p);
              let o = ay(am(p));
              return (yield s.remove_liquidity_one_coin(
                ...u,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: o })
              )).hash;
            });
          },
          withdrawOneCoinEstimateGas(e, t) {
            return yQ(this, void 0, void 0, function* () {
              let [n, a] = yield y2.call(this, e, t, !0);
              return yield y1._withdrawOneCoin.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoin(e, t, n) {
            return yQ(this, void 0, void 0, function* () {
              let [a, i] = yield y2.call(this, e, t);
              return yield y1._withdrawOneCoin.call(this, a, i, n);
            });
          },
        },
        y8 = {
          _withdrawOneCoin(e, t, n) {
            return yQ(this, arguments, void 0, function* (e, t, n, a = !1) {
              let i = yield y5.call(this, e, t, n),
                s = this.curve.contracts[this.address].contract,
                u = yield s.remove_liquidity_one_coin.estimateGas(
                  e,
                  t,
                  i,
                  !0,
                  this.curve.constantOptions
                );
              if (a) return ad(u);
              let p =
                137 === this.curve.chainId && 'ren' === this.id
                  ? (am(u) * this.curve.parseUnits('160', 0)) / this.curve.parseUnits('100', 0)
                  : ay(am(u));
              return (yield s.remove_liquidity_one_coin(
                e,
                t,
                i,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawOneCoinEstimateGas(e, t) {
            return yQ(this, void 0, void 0, function* () {
              let [n, a] = yield y2.call(this, e, t, !0);
              return yield y8._withdrawOneCoin.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoin(e, t, n) {
            return yQ(this, void 0, void 0, function* () {
              let [a, i] = yield y2.call(this, e, t);
              return yield y8._withdrawOneCoin.call(this, a, i, n);
            });
          },
        },
        y3 = {
          _withdrawOneCoin(e, t, n) {
            return yQ(this, arguments, void 0, function* (e, t, n, a = !1) {
              let i = yield y5.call(this, e, t, n),
                s = this.curve.contracts[this.address].contract,
                u = yield s.remove_liquidity_one_coin.estimateGas(
                  e,
                  t,
                  i,
                  this.curve.constantOptions
                );
              if (a) return ad(u);
              let p = ay(am(u));
              return (yield s.remove_liquidity_one_coin(
                e,
                t,
                i,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawOneCoinEstimateGas(e, t) {
            return yQ(this, void 0, void 0, function* () {
              let [n, a] = yield y2.call(this, e, t, !0);
              return yield y3._withdrawOneCoin.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoin(e, t, n) {
            return yQ(this, void 0, void 0, function* () {
              let [a, i] = yield y2.call(this, e, t);
              return yield y3._withdrawOneCoin.call(this, a, i, n);
            });
          },
        };
      var y4 = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let y9 = {
          _withdrawOneCoinWrappedExpected(e, t) {
            return y4(this, void 0, void 0, function* () {
              let n = this.curve.contracts[this.address].contract;
              return yield n.calc_withdraw_one_coin(e, t, this.curve.constantOptions);
            });
          },
        },
        y7 = {
          _withdrawOneCoinWrappedExpected(e, t) {
            return y4(this, void 0, void 0, function* () {
              let n = this.curve.contracts[this.address].contract;
              return yield n.calc_withdraw_one_coin(e, t, !1, this.curve.constantOptions);
            });
          },
        };
      var de = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function dt(e, t) {
        return de(this, void 0, void 0, function* () {
          let n = (yield this.wallet.lpTokenBalances()).lpToken;
          if (Number(n) < Number(e))
            throw Error(`Not enough LP tokens. Actual: ${n}, required: ${e}`);
          yield this.curve.updateFeeData();
          let a = this._getCoinIdx(t, !1);
          return [an(e), a];
        });
      }
      function dn(e, t) {
        return de(this, arguments, void 0, function* (e, t, n = 0.5) {
          return au(
            ai(yield this._withdrawOneCoinWrappedExpected(e, t))
              .times(100 - n)
              .div(100)
          );
        });
      }
      let da = {
          _withdrawOneCoinWrapped(e, t, n) {
            return de(this, arguments, void 0, function* (e, t, n, a = !1) {
              let i = yield dn.call(this, e, t, n),
                s = this.curve.contracts[this.address].contract,
                u = yield s.remove_liquidity_one_coin.estimateGas(
                  e,
                  t,
                  i,
                  !1,
                  this.curve.constantOptions
                );
              if (a) return ad(u);
              let p =
                137 === this.curve.chainId && 'ren' === this.id
                  ? (am(u) * this.curve.parseUnits('160', 0)) / this.curve.parseUnits('100', 0)
                  : ay(am(u));
              return (yield s.remove_liquidity_one_coin(
                e,
                t,
                i,
                !1,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawOneCoinWrappedEstimateGas(e, t) {
            return de(this, void 0, void 0, function* () {
              let [n, a] = yield dt.call(this, e, t);
              return yield da._withdrawOneCoinWrapped.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoinWrapped(e, t, n) {
            return de(this, void 0, void 0, function* () {
              let [a, i] = yield dt.call(this, e, t);
              return yield da._withdrawOneCoinWrapped.call(this, a, i, n);
            });
          },
        },
        di = {
          _withdrawOneCoinWrapped(e, t, n) {
            return de(this, arguments, void 0, function* (e, t, n, a = !1) {
              let i = yield dn.call(this, e, t, n),
                s = this.curve.contracts[this.address].contract,
                u = yield s.remove_liquidity_one_coin.estimateGas(
                  e,
                  t,
                  i,
                  this.curve.constantOptions
                );
              if (a) return ad(u);
              let p = ay(am(u));
              return (yield s.remove_liquidity_one_coin(
                e,
                t,
                i,
                Object.assign(Object.assign({}, this.curve.options), { gasLimit: p })
              )).hash;
            });
          },
          withdrawOneCoinWrappedEstimateGas(e, t) {
            return de(this, void 0, void 0, function* () {
              let [n, a] = yield dt.call(this, e, t);
              return yield di._withdrawOneCoinWrapped.call(this, n, a, 0.1, !0);
            });
          },
          withdrawOneCoinWrapped(e, t, n) {
            return de(this, void 0, void 0, function* () {
              let [a, i] = yield dt.call(this, e, t);
              return yield di._withdrawOneCoinWrapped.call(this, a, i, n);
            });
          },
        };
      var ds = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function du(e, t, n) {
        return ds(this, arguments, void 0, function* (e, t, n, a = !1) {
          let i = this._swapContractAddress(),
            s = this._getCoinIdx(e),
            u = this._getCoinIdx(t),
            p = Object.values(yield this.wallet.underlyingCoinBalances())[s];
          if (Number(p) < Number(n))
            throw Error(`Not enough ${this.underlyingCoins[s]}. Actual: ${p}, required: ${n}`);
          if (
            a &&
            !(yield aM.call(
              this.curve,
              [this.underlyingCoinAddresses[s]],
              [n],
              this.curve.signerAddress,
              i
            ))
          )
            throw Error('Token allowance is needed to estimate gas');
          a || (yield this.curve.updateFeeData());
          let o = an(n, this.underlyingDecimals[s]);
          return [s, u, o];
        });
      }
      function dp(e, t, n) {
        return ds(this, arguments, void 0, function* (e, t, n, a = 0.5) {
          let i = yield this._swapExpected(e, t, n),
            [s] = a_.call(this.curve, this.underlyingCoinAddresses[t]);
          return au(
            ai(i, s)
              .times(100 - a)
              .div(100),
            s
          );
        });
      }
      let dy = {
          _swap(e, t, n, a) {
            return ds(this, arguments, void 0, function* (e, t, n, a, i = !1) {
              let s = this._swapContractAddress();
              i || (yield aA.call(this.curve, [this.underlyingCoinAddresses[e]], [n], s));
              let u = yield dp.call(this, e, t, n, a),
                p = this.curve.contracts[s].contract,
                o = 'exchange_underlying' in p ? 'exchange_underlying' : 'exchange',
                y = ap(this.underlyingCoinAddresses[e]) ? n : this.curve.parseUnits('0'),
                d = yield p[o].estimateGas(
                  e,
                  t,
                  n,
                  u,
                  !0,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: y })
                );
              if (i) return ad(d);
              let m = ay(am(d));
              return (yield p[o](
                e,
                t,
                n,
                u,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { value: y, gasLimit: m })
              )).hash;
            });
          },
          swapEstimateGas(e, t, n) {
            return ds(this, void 0, void 0, function* () {
              let [a, i, s] = yield du.call(this, e, t, n, !0);
              return yield dy._swap.call(this, a, i, s, 0.1, !0);
            });
          },
          swap(e, t, n, a) {
            return ds(this, void 0, void 0, function* () {
              let [i, s, u] = yield du.call(this, e, t, n);
              return yield dy._swap.call(this, i, s, u, a);
            });
          },
        },
        dd = {
          _swap(e, t, n, a) {
            return ds(this, arguments, void 0, function* (e, t, n, a, i = !1) {
              let s = this._swapContractAddress();
              i || (yield aA.call(this.curve, [this.underlyingCoinAddresses[e]], [n], s));
              let u = yield dp.call(this, e, t, n, a),
                p = this.curve.contracts[s].contract,
                o = 'exchange_underlying' in p ? 'exchange_underlying' : 'exchange',
                y = ap(this.underlyingCoinAddresses[e]) ? n : this.curve.parseUnits('0'),
                d = yield p[o].estimateGas(
                  this.address,
                  e,
                  t,
                  n,
                  u,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: y })
                );
              if (i) return ad(d);
              let m = (am(d) * this.curve.parseUnits('140', 0)) / this.curve.parseUnits('100', 0);
              return (yield p[o](
                this.address,
                e,
                t,
                n,
                u,
                Object.assign(Object.assign({}, this.curve.options), { value: y, gasLimit: m })
              )).hash;
            });
          },
          swapEstimateGas(e, t, n) {
            return ds(this, void 0, void 0, function* () {
              let [a, i, s] = yield du.call(this, e, t, n, !0);
              return yield dd._swap.call(this, a, i, s, 0.1, !0);
            });
          },
          swap(e, t, n, a) {
            return ds(this, void 0, void 0, function* () {
              let [i, s, u] = yield du.call(this, e, t, n);
              return yield dd._swap.call(this, i, s, u, a);
            });
          },
        },
        dm = {
          _swap(e, t, n, a) {
            return ds(this, arguments, void 0, function* (e, t, n, a, i = !1) {
              let s = this._swapContractAddress();
              i || (yield aA.call(this.curve, [this.underlyingCoinAddresses[e]], [n], s));
              let u = yield dp.call(this, e, t, n, a),
                p = this.curve.contracts[s].contract,
                o = 'exchange_underlying' in p ? 'exchange_underlying' : 'exchange',
                y = ap(this.underlyingCoinAddresses[e]) ? n : this.curve.parseUnits('0'),
                d = yield p[o].estimateGas(
                  this.address,
                  e,
                  t,
                  n,
                  u,
                  !0,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: y })
                );
              if (i) return ad(d);
              let m = (am(d) * this.curve.parseUnits('140', 0)) / this.curve.parseUnits('100', 0);
              return (yield p[o](
                this.address,
                e,
                t,
                n,
                u,
                !0,
                Object.assign(Object.assign({}, this.curve.options), { value: y, gasLimit: m })
              )).hash;
            });
          },
          swapEstimateGas(e, t, n) {
            return ds(this, void 0, void 0, function* () {
              let [a, i, s] = yield du.call(this, e, t, n, !0);
              return yield dm._swap.call(this, a, i, s, 0.1, !0);
            });
          },
          swap(e, t, n, a) {
            return ds(this, void 0, void 0, function* () {
              let [i, s, u] = yield du.call(this, e, t, n);
              return yield dm._swap.call(this, i, s, u, a);
            });
          },
        },
        dr = {
          _swap(e, t, n, a) {
            return ds(this, arguments, void 0, function* (e, t, n, a, i = !1) {
              let s = this._swapContractAddress();
              i || (yield aA.call(this.curve, [this.underlyingCoinAddresses[e]], [n], s));
              let u = yield dp.call(this, e, t, n, a),
                p = this.curve.contracts[s].contract,
                o = 'exchange_underlying' in p ? 'exchange_underlying' : 'exchange',
                y = ap(this.underlyingCoinAddresses[e]) ? n : this.curve.parseUnits('0'),
                d = yield p[o].estimateGas(
                  e,
                  t,
                  n,
                  u,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: y })
                );
              if (i) return ad(d);
              yield this.curve.updateFeeData();
              let m =
                137 === this.curve.chainId && 'ren' === this.id
                  ? (am(d) * this.curve.parseUnits('160', 0)) / this.curve.parseUnits('100', 0)
                  : ay(am(d));
              return (yield p[o](
                e,
                t,
                n,
                u,
                Object.assign(Object.assign({}, this.curve.options), { value: y, gasLimit: m })
              )).hash;
            });
          },
          swapEstimateGas(e, t, n) {
            return ds(this, void 0, void 0, function* () {
              let [a, i, s] = yield du.call(this, e, t, n, !0);
              return yield dr._swap.call(this, a, i, s, 0.1, !0);
            });
          },
          swap(e, t, n, a) {
            return ds(this, void 0, void 0, function* () {
              let [i, s, u] = yield du.call(this, e, t, n);
              return yield dr._swap.call(this, i, s, u, a);
            });
          },
        };
      var dl = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function dc(e, t, n) {
        return dl(this, arguments, void 0, function* (e, t, n, a = !1) {
          let i = this._getCoinIdx(e, !1),
            s = this._getCoinIdx(t, !1),
            u = Object.values(yield this.wallet.wrappedCoinBalances())[i];
          if (Number(u) < Number(n))
            throw Error(`Not enough ${this.wrappedCoins[i]}. Actual: ${u}, required: ${n}`);
          if (
            a &&
            !(yield aM.call(
              this.curve,
              [this.wrappedCoinAddresses[i]],
              [n],
              this.curve.signerAddress,
              this.address
            ))
          )
            throw Error('Token allowance is needed to estimate gas');
          a || (yield this.curve.updateFeeData());
          let p = an(n, this.wrappedDecimals[i]);
          return [i, s, p];
        });
      }
      function df(e, t, n) {
        return dl(this, arguments, void 0, function* (e, t, n, a = 0.5) {
          let i = yield this._swapWrappedExpected.call(this, e, t, n),
            [s] = a_.call(this.curve, this.wrappedCoinAddresses[t]);
          return au(
            ai(i, s)
              .times(100 - a)
              .div(100),
            s
          );
        });
      }
      let d_ = {
          _swapWrapped(e, t, n, a) {
            return dl(this, arguments, void 0, function* (e, t, n, a, i = !1) {
              i || (yield aA.call(this.curve, [this.wrappedCoinAddresses[e]], [n], this.address));
              let s = yield df.call(this, e, t, n, a),
                u = this.curve.contracts[this.address].contract,
                p = ap(this.wrappedCoinAddresses[e]) ? n : this.curve.parseUnits('0'),
                o = yield u.exchange.estimateGas(
                  e,
                  t,
                  n,
                  s,
                  !1,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: p })
                );
              if (i) return ad(o);
              let y = ay(am(o));
              return (yield u.exchange(
                e,
                t,
                n,
                s,
                !1,
                Object.assign(Object.assign({}, this.curve.options), { value: p, gasLimit: y })
              )).hash;
            });
          },
          swapWrappedEstimateGas(e, t, n) {
            return dl(this, void 0, void 0, function* () {
              let [a, i, s] = yield dc.call(this, e, t, n, !0);
              return yield d_._swapWrapped.call(this, a, i, s, 0.1, !0);
            });
          },
          swapWrapped(e, t, n, a) {
            return dl(this, void 0, void 0, function* () {
              let [i, s, u] = yield dc.call(this, e, t, n);
              return yield d_._swapWrapped.call(this, i, s, u, a);
            });
          },
        },
        db = {
          _swapWrapped(e, t, n, a) {
            return dl(this, arguments, void 0, function* (e, t, n, a, i = !1) {
              i || (yield aA.call(this.curve, [this.wrappedCoinAddresses[e]], [n], this.address));
              let s = yield df.call(this, e, t, n, a),
                u = this.curve.contracts[this.address].contract,
                p = ap(this.wrappedCoinAddresses[e]) ? n : this.curve.parseUnits('0'),
                o = yield u.exchange.estimateGas(
                  e,
                  t,
                  n,
                  s,
                  Object.assign(Object.assign({}, this.curve.constantOptions), { value: p })
                );
              if (i) return ad(o);
              let y =
                137 === this.curve.chainId && 'ren' === this.id
                  ? (am(o) * this.curve.parseUnits('140', 0)) / this.curve.parseUnits('100', 0)
                  : ay(am(o));
              return (yield u.exchange(
                e,
                t,
                n,
                s,
                Object.assign(Object.assign({}, this.curve.options), { value: p, gasLimit: y })
              )).hash;
            });
          },
          swapWrappedEstimateGas(e, t, n) {
            return dl(this, void 0, void 0, function* () {
              let [a, i, s] = yield dc.call(this, e, t, n, !0);
              return yield db._swapWrapped.call(this, a, i, s, 0.1, !0);
            });
          },
          swapWrapped(e, t, n, a) {
            return dl(this, void 0, void 0, function* () {
              let [i, s, u] = yield dc.call(this, e, t, n);
              return yield db._swapWrapped.call(this, i, s, u, a);
            });
          },
        },
        dg = {
          swapWrappedExpected(e, t, n) {
            return dl(this, void 0, void 0, function* () {
              let a = this._getCoinIdx(e, !1),
                i = this._getCoinIdx(t, !1),
                s = an(n, this.wrappedDecimals[a]),
                u = yield this._swapWrappedExpected.call(this, a, i, s);
              return this.curve.formatUnits(u, this.wrappedDecimals[i]);
            });
          },
          swapWrappedIsApproved(e, t) {
            return dl(this, void 0, void 0, function* () {
              let n = this._getCoinIdx.call(this, e, !1);
              return yield aM.call(
                this.curve,
                [this.wrappedCoinAddresses[n]],
                [t],
                this.curve.signerAddress,
                this.address
              );
            });
          },
          swapWrappedApproveEstimateGas(e, t) {
            return dl(this, void 0, void 0, function* () {
              let n = this._getCoinIdx.call(this, e, !1);
              return yield aE.call(this.curve, [this.wrappedCoinAddresses[n]], [t], this.address);
            });
          },
          swapWrappedApprove(e, t) {
            return dl(this, void 0, void 0, function* () {
              let n = this._getCoinIdx.call(this, e, !1);
              return yield aC.call(this.curve, [this.wrappedCoinAddresses[n]], [t], this.address);
            });
          },
        },
        dv = {
          swapWrappedRequired(e, t, n) {
            return dl(this, void 0, void 0, function* () {
              let a = this._getCoinIdx.call(this, e, !1),
                i = this._getCoinIdx.call(this, t, !1),
                s = an(n, this.wrappedDecimals[i]),
                u = yield this._swapRequired.call(this, a, i, s, !1);
              return this.curve.formatUnits(u, this.wrappedDecimals[a]);
            });
          },
        };
      function dw(e) {
        let t = new o0(e, this);
        class n extends o0 {
          constructor(e, n) {
            super(e, n), (this.stats = new oL(this)), this.configureStats(t);
          }
          configureStats(e) {
            e.isMeta
              ? Object.assign(this.stats, o4)
              : e.useLending.reduce((e, t) => e || t) && Object.assign(this.stats, o9);
          }
        }
        return (
          t.isCrypto ? Object.assign(n.prototype, yn) : Object.assign(n.prototype, yt),
          t.isPlain ||
            t.isFake ||
            (t.isCrypto ? Object.assign(n.prototype, yi) : Object.assign(n.prototype, ya)),
          t.isMetaFactory
            ? t.isCrypto
              ? Object.assign(n.prototype, yy)
              : Object.assign(n.prototype, yo)
            : t.zap && 'susd' !== e
              ? Object.assign(n.prototype, yd)
              : az(this.contracts[t.address].abi, 'add_liquidity') > 2
                ? Object.assign(n.prototype, ym)
                : Object.assign(n.prototype, yr),
          t.isPlain ||
            t.isFake ||
            (((t.isLending || t.isCrypto) && !t.zap) || (t.isCrypto && t.isMetaFactory)
              ? Object.assign(n.prototype, yb)
              : Object.assign(n.prototype, y_)),
          t.isMeta
            ? Object.assign(n.prototype, yh)
            : t.isLending || (t.isCrypto && !t.isPlain)
              ? Object.assign(n.prototype, yw)
              : Object.assign(n.prototype, yv),
          t.isMetaFactory
            ? t.isCrypto
              ? Object.assign(n.prototype, yk)
              : Object.assign(n.prototype, yC)
            : t.zap && 'susd' !== e
              ? Object.assign(n.prototype, yD)
              : az(this.contracts[t.address].abi, 'remove_liquidity') > 2
                ? Object.assign(n.prototype, yT)
                : Object.assign(n.prototype, yS),
          t.isPlain ||
            t.isFake ||
            (((t.isLending || t.isCrypto) && !t.zap) || (t.isCrypto && t.isMetaFactory)
              ? Object.assign(n.prototype, yI)
              : Object.assign(n.prototype, yR),
            Object.assign(n.prototype, yx)),
          t.isCrypto ||
            (t.isMetaFactory
              ? Object.assign(n.prototype, yq)
              : t.zap && 'susd' !== e
                ? Object.assign(n.prototype, yj)
                : t.isLending
                  ? Object.assign(n.prototype, yU)
                  : Object.assign(n.prototype, y$)),
          t.isCrypto ||
            (t.isLending && !t.zap
              ? Object.assign(n.prototype, yV)
              : t.isPlain || t.isFake || Object.assign(n.prototype, yZ)),
          t.isMetaFactory
            ? Object.assign(n.prototype, yH)
            : (!t.isCrypto && t.zap) || t.isMeta
              ? Object.assign(n.prototype, yK)
              : 'ib' === e
                ? Object.assign(n.prototype, yz)
                : Object.assign(n.prototype, yX),
          t.isMetaFactory
            ? t.isCrypto
              ? Object.assign(n.prototype, y6)
              : Object.assign(n.prototype, y0)
            : t.zap
              ? Object.assign(n.prototype, y1)
              : az(this.contracts[t.address].abi, 'remove_liquidity_one_coin') > 3
                ? Object.assign(n.prototype, y8)
                : Object.assign(n.prototype, y3),
          t.isPlain ||
            t.isFake ||
            (t.isLending && t.zap) ||
            ('ib' === e ? Object.assign(n.prototype, y7) : Object.assign(n.prototype, y9)),
          t.isPlain ||
            t.isFake ||
            (t.isLending && t.zap) ||
            (((t.isLending || t.isCrypto) && !t.zap) || (t.isCrypto && t.isMetaFactory)
              ? Object.assign(n.prototype, da)
              : Object.assign(n.prototype, di)),
          aX(this.contracts[t.address].abi, 'exchange', 'uint256,uint256,uint256,uint256,bool') &&
          (100 !== this.chainId || 'tricrypto' !== t.id)
            ? Object.assign(n.prototype, dy)
            : t.isMetaFactory &&
                (dw.call(this, t.basePool).isLending ||
                  dw.call(this, t.basePool).isFake ||
                  t.isCrypto)
              ? t.isCrypto
                ? Object.assign(n.prototype, dm)
                : Object.assign(n.prototype, dd)
              : Object.assign(n.prototype, dr),
          t.isPlain ||
            t.isFake ||
            (Object.assign(n.prototype, dg),
            Object.assign(n.prototype, dv),
            aX(this.contracts[t.address].abi, 'exchange', 'uint256,uint256,uint256,uint256,bool')
              ? Object.assign(n.prototype, d_)
              : Object.assign(n.prototype, db)),
          new n(e, this)
        );
      }
      function dh() {
        let e = (e, t) => {
            let n = (e) => e.route.map((e) => e.poolId).toString(),
              a = new Set(e.map(n));
            return e.concat(t.filter((e) => !a.has(n(e))));
          },
          t = (e, t) =>
            t.minTvl - e.minTvl || t.totalTvl - e.totalTvl || e.route.length - t.route.length,
          n = (e, t) =>
            e.route.length - t.route.length || t.minTvl - e.minTvl || t.totalTvl - e.totalTvl,
          a = (e) => (6 === e ? '4' : 7 === e ? '5' : e.toString()),
          i = (e, t) => ({
            route: e.route.concat(t),
            minTvl: Math.min(t.tvl, e.minTvl),
            totalTvl: e.totalTvl + t.tvl,
          });
        function s(e, t, n, a) {
          return e.length < a || 0 > n(t, e[e.length - 1]);
        }
        function u(e, t, n, a) {
          if (!s(e, t, n, a)) return;
          e.length === a && e.pop();
          let i = e.findIndex((e) => 0 > n(t, e));
          -1 === i ? e.push(t) : e.splice(i, 0, t);
        }
        let p = (e, t) => void 0 !== t.route.find((t) => t.inputCoinAddress === e),
          o = (e, t) => e.route.find((e) => e.poolId === t),
          y = ({ inputCoinAddress: y, outputCoinAddress: d, routerGraph: m, poolData: r }) => {
            (y = y.toLowerCase()), (d = d.toLowerCase());
            let l = [{ route: [], minTvl: 1 / 0, totalTvl: 0 }],
              c = [],
              f = [];
            for (; l.length; ) {
              let e = l.pop();
              Object.entries(
                m[e.route.length > 0 ? e.route[e.route.length - 1].outputCoinAddress : y]
              ).forEach((y) => {
                let m = y[0],
                  _ = y[1];
                p(m, e) ||
                  _.forEach((p) => {
                    let y = r[p.poolId],
                      _ = o(e, p.poolId);
                    if (
                      !_ ||
                      ((null == y ? void 0 : y.is_lending) &&
                        a(p.swapParams[2]) !== a(_.swapParams[2]))
                    ) {
                      if (p.outputCoinAddress === d) {
                        let a = i(e, p);
                        u(c, a, t, 5), u(f, a, n, 5);
                        return;
                      }
                      if (
                        (!(
                          (null == y ? void 0 : y.wrapped_coin_addresses.includes(d)) ||
                          (null == y ? void 0 : y.underlying_coin_addresses.includes(d))
                        ) ||
                          ((null == y ? void 0 : y.is_lending) &&
                            m === (null == y ? void 0 : y.token_address))) &&
                        e.route.length < 4
                      ) {
                        let a = i(e, p);
                        (s(c, a, t, 5) || s(f, a, n, 5)) && l.push(a);
                      }
                    }
                  });
              });
            }
            return e(c, f).map((e) => e.route);
          };
        if ('undefined' == typeof addEventListener) return y;
        addEventListener('message', (e) => {
          let { type: t } = e.data;
          'findRoutes' === t && postMessage({ type: t, result: y(e.data) });
        });
      }
      let dx = `${dh.toString()}; ${dh.name}();`;
      function dM() {
        let e = {
            10: {
              swap: '0x8700daec35af8ff88c16bdf0418774cb3d7599b4',
              coins: [
                '0x8c6f28f2f1a3c87f0f938b96d27520d9751ec8d9',
                '0xFBc4198702E81aE77c06D58f81b629BDf36f0a71',
                '0xe405de8f52ba7559f9df3c368500b6e6ae6cee49',
                '0x298b9b95708152ff6968aafd889c6586e9169f1d',
              ].map((e) => e.toLowerCase()),
            },
          },
          t = ({
            constants: t,
            chainId: n,
            isLiteChain: a,
            allPools: i,
            amplificationCoefficientDict: s,
            poolTvlDict: u,
          }) => {
            var p, o, y;
            let d = {};
            if (
              (42220 !== n &&
                ((d[t.NATIVE_TOKEN.address] = {}),
                (d[t.NATIVE_TOKEN.address][t.NATIVE_TOKEN.wrappedAddress] = [
                  {
                    poolId: 'WETH wrapper',
                    swapAddress: t.NATIVE_TOKEN.wrappedAddress,
                    inputCoinAddress: t.NATIVE_TOKEN.address,
                    outputCoinAddress: t.NATIVE_TOKEN.wrappedAddress,
                    swapParams: [0, 0, 8, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ]),
                (d[t.NATIVE_TOKEN.wrappedAddress] = {}),
                (d[t.NATIVE_TOKEN.wrappedAddress][t.NATIVE_TOKEN.address] = [
                  {
                    poolId: 'WETH wrapper',
                    swapAddress: t.NATIVE_TOKEN.wrappedAddress,
                    inputCoinAddress: t.NATIVE_TOKEN.wrappedAddress,
                    outputCoinAddress: t.NATIVE_TOKEN.address,
                    swapParams: [0, 0, 8, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ])),
              1 == n)
            )
              for (let e of ['stETH', 'frxETH', 'wBETH'])
                d[t.NATIVE_TOKEN.address][t.COINS[e.toLowerCase()]] = [
                  {
                    poolId: e + ' minter',
                    swapAddress:
                      'frxETH' === e
                        ? '0xbafa44efe7901e04e39dad13167d089c559c1138'
                        : t.COINS[e.toLowerCase()],
                    inputCoinAddress: t.NATIVE_TOKEN.address,
                    outputCoinAddress: t.COINS[e.toLowerCase()],
                    swapParams: [0, 0, 8, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ];
            if (
              (1 === n &&
                ((d[t.COINS.steth] = {}),
                (d[t.COINS.steth][t.COINS.wsteth] = [
                  {
                    poolId: 'wstETH wrapper',
                    swapAddress: t.COINS.wsteth,
                    inputCoinAddress: t.COINS.steth,
                    outputCoinAddress: t.COINS.wsteth,
                    swapParams: [0, 0, 8, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ]),
                (d[t.COINS.wsteth] = {}),
                (d[t.COINS.wsteth][t.COINS.steth] = [
                  {
                    poolId: 'wstETH wrapper',
                    swapAddress: t.COINS.wsteth,
                    inputCoinAddress: t.COINS.wsteth,
                    outputCoinAddress: t.COINS.steth,
                    swapParams: [0, 0, 8, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ])),
              1 === n &&
                ((d[t.COINS.frxeth] = {}),
                (d[t.COINS.frxeth][t.COINS.sfrxeth] = [
                  {
                    poolId: 'sfrxETH wrapper',
                    swapAddress: t.COINS.sfrxeth,
                    inputCoinAddress: t.COINS.frxeth,
                    outputCoinAddress: t.COINS.sfrxeth,
                    swapParams: [0, 1, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ]),
                (d[t.COINS.sfrxeth] = {}),
                (d[t.COINS.sfrxeth][t.COINS.frxeth] = [
                  {
                    poolId: 'sfrxETH wrapper',
                    swapAddress: t.COINS.sfrxeth,
                    inputCoinAddress: t.COINS.sfrxeth,
                    outputCoinAddress: t.COINS.frxeth,
                    swapParams: [1, 0, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ])),
              1 === n &&
                ((d[t.COINS.crvusd] = {}),
                (d[t.COINS.crvusd][t.COINS.scrvusd] = [
                  {
                    poolId: 'scrvUSD wrapper',
                    swapAddress: t.COINS.scrvusd,
                    inputCoinAddress: t.COINS.crvusd,
                    outputCoinAddress: t.COINS.scrvusd,
                    swapParams: [0, 1, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ]),
                (d[t.COINS.scrvusd] = {}),
                (d[t.COINS.scrvusd][t.COINS.crvusd] = [
                  {
                    poolId: 'scrvUSD wrapper',
                    swapAddress: t.COINS.scrvusd,
                    inputCoinAddress: t.COINS.scrvusd,
                    outputCoinAddress: t.COINS.crvusd,
                    swapParams: [1, 0, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ])),
              1 === n &&
                ((d[t.COINS.usds] = {}),
                (d[t.COINS.usds][t.COINS.susds] = [
                  {
                    poolId: 'sUSDS wrapper',
                    swapAddress: t.COINS.susds,
                    inputCoinAddress: t.COINS.usds,
                    outputCoinAddress: t.COINS.susds,
                    swapParams: [0, 1, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ]),
                (d[t.COINS.susds] = {}),
                (d[t.COINS.susds][t.COINS.usds] = [
                  {
                    poolId: 'sUSDS wrapper',
                    swapAddress: t.COINS.susds,
                    inputCoinAddress: t.COINS.susds,
                    outputCoinAddress: t.COINS.usds,
                    swapParams: [1, 0, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ])),
              1 === n &&
                ((d[t.COINS.usde] = {}),
                (d[t.COINS.usde][t.COINS.susde] = [
                  {
                    poolId: 'sUSDe wrapper',
                    swapAddress: t.COINS.susde,
                    inputCoinAddress: t.COINS.usde,
                    outputCoinAddress: t.COINS.susde,
                    swapParams: [0, 1, 9, 0, 0],
                    poolAddress: t.ZERO_ADDRESS,
                    basePool: t.ZERO_ADDRESS,
                    baseToken: t.ZERO_ADDRESS,
                    secondBasePool: t.ZERO_ADDRESS,
                    secondBaseToken: t.ZERO_ADDRESS,
                    tvl: 1 / 0,
                  },
                ])),
              n in e)
            )
              for (let a of e[n].coins)
                for (let i of e[n].coins)
                  a !== i &&
                    (d[a] || (d[a] = {}),
                    (d[a][i] = [
                      {
                        poolId: 'SNX exchanger',
                        swapAddress: e[n].swap,
                        inputCoinAddress: a,
                        outputCoinAddress: i,
                        swapParams: [0, 0, 9, 0, 0],
                        poolAddress: t.ZERO_ADDRESS,
                        basePool: t.ZERO_ADDRESS,
                        baseToken: t.ZERO_ADDRESS,
                        secondBasePool: t.ZERO_ADDRESS,
                        secondBaseToken: t.ZERO_ADDRESS,
                        tvl: 1 / 0,
                      },
                    ]));
            let m = Date.now();
            for (let e of i) {
              let i = e[0],
                m = e[1],
                r = m.wrapped_coin_addresses.map((e) => e.toLowerCase()),
                l = m.underlying_coin_addresses.map((e) => e.toLowerCase()),
                c = m.swap_address.toLowerCase(),
                f = m.token_address.toLowerCase(),
                _ = m.is_lending && 3 === r.length && !m.deposit_address,
                b = m.is_llamma ? 4 : m.is_crypto ? Math.min(m.wrapped_coins.length, 3) : 1;
              m.is_ng && (b *= 10);
              let g = m.is_crypto ? 1 : null !== (p = s[m.swap_address]) && void 0 !== p ? p : 1,
                v = m.is_meta
                  ? Object.assign(Object.assign({}, t.POOLS_DATA), t.FACTORY_POOLS_DATA)[
                      m.base_pool
                    ]
                  : null,
                w = v ? v.swap_address.toLowerCase() : t.ZERO_ADDRESS,
                h = v ? v.token_address.toLowerCase() : t.ZERO_ADDRESS,
                x =
                  v && v.base_pool
                    ? Object.assign(
                        Object.assign(Object.assign({}, t.POOLS_DATA), t.FACTORY_POOLS_DATA),
                        t.CRVUSD_FACTORY_POOLS_DATA
                      )[v.base_pool]
                    : null,
                M = x ? x.swap_address.toLowerCase() : t.ZERO_ADDRESS;
              v &&
                M !== t.ZERO_ADDRESS &&
                (h = null === (o = v.deposit_address) || void 0 === o ? void 0 : o.toLowerCase());
              let A = x ? x.token_address.toLowerCase() : t.ZERO_ADDRESS,
                E = v ? v.underlying_coin_addresses.map((e) => e.toLowerCase()) : [],
                C = m.is_fake
                  ? null === (y = m.deposit_address) || void 0 === y
                    ? void 0
                    : y.toLowerCase()
                  : c,
                k = u[i] * g;
              if ((1 === n && k < 1e3) || (1 !== n && !a && k < 100)) continue;
              let D =
                ('ib' === i && 1 === n) ||
                ('geist' === i && 250 === n) ||
                ('saave' === i && 1 === n);
              if (!m.is_fake && !m.is_llamma && r.length < 6) {
                let e = [f].concat(r);
                for (let n = 0; n < e.length; n++)
                  for (let a = 0; a < e.length; a++) {
                    if ((n > 0 && a > 0) || (0 == n && 0 == a)) continue;
                    let s = Math.max(n - 1, 0),
                      u = Math.max(a - 1, 0),
                      p = 0 == n ? 6 : 4;
                    d[e[n]] || (d[e[n]] = {}),
                      d[e[n]][e[a]] || (d[e[n]][e[a]] = []),
                      d[e[n]][e[a]].push({
                        poolId: i,
                        swapAddress: C,
                        inputCoinAddress: e[n],
                        outputCoinAddress: e[a],
                        swapParams: [s, u, p, b, r.length],
                        poolAddress: t.ZERO_ADDRESS,
                        basePool: t.ZERO_ADDRESS,
                        baseToken: t.ZERO_ADDRESS,
                        secondBasePool: t.ZERO_ADDRESS,
                        secondBaseToken: t.ZERO_ADDRESS,
                        tvl: k,
                      });
                  }
              }
              if ((m.is_fake || _) && l.length < 6 && !D) {
                let e = [f].concat(l);
                for (let n = 0; n < e.length; n++)
                  for (let a = 0; a < e.length; a++) {
                    if ((n > 0 && a > 0) || (0 == n && 0 == a)) continue;
                    let s = Math.max(n - 1, 0),
                      u = Math.max(a - 1, 0),
                      p = _ ? 7 : 6;
                    n > 0 && (p = _ ? 5 : 4),
                      d[e[n]] || (d[e[n]] = {}),
                      d[e[n]][e[a]] || (d[e[n]][e[a]] = []),
                      d[e[n]][e[a]].push({
                        poolId: i,
                        swapAddress: C,
                        inputCoinAddress: e[n],
                        outputCoinAddress: e[a],
                        swapParams: [s, u, p, b, l.length],
                        poolAddress: t.ZERO_ADDRESS,
                        basePool: t.ZERO_ADDRESS,
                        baseToken: t.ZERO_ADDRESS,
                        secondBasePool: t.ZERO_ADDRESS,
                        secondBaseToken: t.ZERO_ADDRESS,
                        tvl: k,
                      });
                  }
              }
              if (!m.is_fake)
                for (let e = 0; e < r.length; e++)
                  for (let t = 0; t < r.length; t++)
                    e != t &&
                      (d[r[e]] || (d[r[e]] = {}),
                      d[r[e]][r[t]] || (d[r[e]][r[t]] = []),
                      (d[r[e]][r[t]] = d[r[e]][r[t]]
                        .concat({
                          poolId: i,
                          swapAddress: C,
                          inputCoinAddress: r[e],
                          outputCoinAddress: r[t],
                          swapParams: [e, t, 1, b, r.length],
                          poolAddress: c,
                          basePool: w,
                          baseToken: h,
                          secondBasePool: M,
                          secondBaseToken: A,
                          tvl: k,
                        })
                        .sort((e, t) => t.tvl - e.tvl)
                        .slice(0, 3)));
              if (
                ((C =
                  (m.is_crypto && m.is_meta) ||
                  ((null == v ? void 0 : v.is_lending) && m.is_factory)
                    ? m.deposit_address
                    : m.swap_address),
                !m.is_plain && !D)
              )
                for (let e = 0; e < l.length; e++)
                  for (let a = 0; a < l.length; a++) {
                    if (
                      e === a ||
                      (E.includes(l[e]) && E.includes(l[a])) ||
                      (43114 === n && 'atricrypto' === i && 3 === e)
                    )
                      continue;
                    let s = l.includes(t.NATIVE_TOKEN.address),
                      u =
                        (m.is_crypto && m.is_meta && m.is_factory) ||
                        ((null == v ? void 0 : v.is_lending) && m.is_factory)
                          ? 3
                          : s && 'avaxcrypto' !== i
                            ? 1
                            : 2;
                    d[l[e]] || (d[l[e]] = {}),
                      d[l[e]][l[a]] || (d[l[e]][l[a]] = []),
                      (d[l[e]][l[a]] = d[l[e]][l[a]]
                        .concat({
                          poolId: i,
                          swapAddress: C,
                          inputCoinAddress: l[e],
                          outputCoinAddress: l[a],
                          swapParams: [e, a, u, b, l.length],
                          poolAddress: c,
                          basePool: w,
                          baseToken: h,
                          secondBasePool: M,
                          secondBaseToken: A,
                          tvl: k,
                        })
                        .sort((e, t) => t.tvl - e.tvl)
                        .slice(0, 3));
                  }
            }
            return (
              console.log(
                `Read ${i.length} pools`,
                `${Date.now() - m}ms, routerGraph: ${Object.keys(d).length} items`
              ),
              d
            );
          };
        if ('undefined' == typeof addEventListener) return t;
        addEventListener('message', (e) => {
          let { type: n } = e.data;
          'createRouteGraph' === n && postMessage({ type: n, result: t(e.data) });
        });
      }
      let dA = `${dM.toString()}; ${dM.name}();`;
      var dE = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function dC(e) {
        return dE(this, void 0, void 0, function* () {
          return Number(yield dw.call(this, e).stats.totalLiquidityMemoized());
        });
      }
      function dk(e, t) {
        return dE(this, void 0, void 0, function* () {
          let n = this.constants,
            a = Object.entries(this.getPoolsData()).filter(
              ([e]) => !['crveth', 'y', 'busd', 'pax'].includes(e)
            ),
            i = yield oQ.call(this),
            s = yield (function (e, t) {
              return dE(this, void 0, void 0, function* () {
                let n = {};
                return (
                  yield Promise.all(
                    e.map((e) =>
                      dE(this, [e], void 0, function* ([e, a]) {
                        return (n[e] = yield t(e, a));
                      })
                    )
                  ),
                  n
                );
              });
            })(a, dC.bind(this));
          return a6(
            dA,
            dM,
            Object.assign(
              { type: 'createRouteGraph' },
              {
                constants: n,
                chainId: e,
                isLiteChain: t,
                allPools: a,
                amplificationCoefficientDict: i,
                poolTvlDict: s,
              }
            )
          );
        });
      }
      function dD(e, t) {
        return dE(this, void 0, void 0, function* () {
          let n = e_(this, '_buildRouteGraph', dk),
            a = yield n.call(this, this.chainId, this.isLiteChain);
          return a6(
            dx,
            dh,
            Object.assign(
              { type: 'findRoutes' },
              {
                inputCoinAddress: e,
                outputCoinAddress: t,
                routerGraph: a,
                poolData: (function (e, t) {
                  let n = {};
                  return Object.entries(e).forEach(([e, a]) => (n[e] = t(e, a))), n;
                })(
                  this.getPoolsData(),
                  (
                    e,
                    {
                      is_lending: t,
                      wrapped_coin_addresses: n,
                      underlying_coin_addresses: a,
                      token_address: i,
                    }
                  ) => ({
                    is_lending: t,
                    wrapped_coin_addresses: n,
                    underlying_coin_addresses: a,
                    token_address: i,
                  })
                ),
              }
            )
          );
        });
      }
      let dT = (e, t, n) => {
        let a = [t, n].sort(),
          i = `${a[0]}-->`;
        for (let t of e) i += `${t.poolId}-->`;
        return i + a[1];
      };
      function dS(e) {
        if (oD.includes(this.chainId)) {
          let t = [];
          e.length > 0 && t.push(e[0].inputCoinAddress);
          let n = [],
            a = [],
            i = [],
            s = [],
            u = [],
            p = [];
          for (let o of e)
            t.push(o.swapAddress, o.outputCoinAddress),
              n.push(o.swapParams),
              a.push(o.poolAddress),
              i.push(o.basePool),
              s.push(o.baseToken),
              u.push(o.secondBasePool),
              p.push(o.secondBaseToken);
          return (
            (t = t.concat(Array(11 - t.length).fill(this.constants.ZERO_ADDRESS))),
            (n = n.concat(Array(5 - n.length).fill([0, 0, 0, 0, 0]))),
            (a = a.concat(Array(5 - a.length).fill(this.constants.ZERO_ADDRESS))),
            (i = i.concat(Array(5 - i.length).fill(this.constants.ZERO_ADDRESS))),
            (s = s.concat(Array(5 - s.length).fill(this.constants.ZERO_ADDRESS))),
            {
              _route: t,
              _swapParams: n,
              _pools: a,
              _basePools: i,
              _baseTokens: s,
              _secondBasePools: (u = u.concat(
                Array(5 - u.length).fill(this.constants.ZERO_ADDRESS)
              )),
              _secondBaseTokens: (p = p.concat(
                Array(5 - p.length).fill(this.constants.ZERO_ADDRESS)
              )),
            }
          );
        }
        {
          let t = [];
          e.length > 0 && t.push(e[0].inputCoinAddress);
          let n = [];
          for (let a of e)
            t.push(a.swapAddress, a.outputCoinAddress), n.push(a.swapParams.slice(0, 4));
          return {
            _route: (t = t.concat(Array(11 - t.length).fill(this.constants.ZERO_ADDRESS))),
            _swapParams: (n = n.concat(Array(5 - n.length).fill([0, 0, 0, 0]))),
          };
        }
      }
      let dO = {};
      function dF(e, t, n, a) {
        return dE(this, void 0, void 0, function* () {
          var i;
          (t = t.toLowerCase()), (n = n.toLowerCase());
          let s = this.contracts[this.constants.ALIASES.router].contract,
            u = [],
            p = ap(t) ? a : this.parseUnits('0');
          for (let o of e) {
            let e;
            let y = dT(o, t, n),
              { _route: d, _swapParams: m, _pools: r } = dS.call(this, o);
            (e =
              ((null === (i = dO[y]) || void 0 === i ? void 0 : i.time) || 0) + 36e5 < Date.now()
                ? r
                  ? s.exchange.estimateGas(
                      d,
                      m,
                      a,
                      0,
                      r,
                      Object.assign(Object.assign({}, this.constantOptions), { value: p })
                    )
                  : s.exchange.estimateGas(
                      d,
                      m,
                      a,
                      0,
                      Object.assign(Object.assign({}, this.constantOptions), { value: p })
                    )
                : Promise.resolve(dO[y].gas)),
              u.push(e);
          }
          try {
            let a = yield Promise.all(u);
            return (
              e.forEach((e, i) => {
                dO[dT(e, t, n)] = { gas: a[i], time: Date.now() };
              }),
              a.map((e) => ad(e))
            );
          } catch (t) {
            return e.map(() => 0);
          }
        });
      }
      function dB(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          let [a, i] = a_.call(this, e, t),
            s = an(n, a);
          if (s === this.parseUnits('0')) return [];
          let u = (yield dD.call(this, e, t)).map((e) => ({
              route: e,
              _output: this.parseUnits('0'),
              outputUsd: 0,
              txCostUsd: 0,
            })),
            p = [];
          try {
            let e = [],
              t = this.contracts[this.constants.ALIASES.router].multicallContract;
            for (let n of u) {
              let { _route: a, _swapParams: i, _pools: u } = dS.call(this, n.route);
              u ? e.push(t.get_dy(a, i, s, u)) : e.push(t.get_dy(a, i, s));
            }
            let n = yield this.multicallProvider.all(e);
            for (let e = 0; e < n.length; e++) (u[e]._output = n[e]), p.push(u[e]);
          } catch (n) {
            let e = this.contracts[this.constants.ALIASES.router].contract,
              t = [];
            for (let n of u) {
              let { _route: a, _swapParams: i, _pools: u } = dS.call(this, n.route);
              try {
                u
                  ? t.push(yield e.get_dy(a, i, s, u, this.constantOptions))
                  : t.push(yield e.get_dy(a, i, s, this.constantOptions));
              } catch (e) {
                t.push(this.parseUnits('-1', 0));
              }
            }
            for (let e = 0; e < t.length; e++) {
              if (t[e] < 0) {
                console.log(
                  `Route ${u[e].route.map((e) => e.poolId).join(' --\x3e ')} is unavailable`
                );
                continue;
              }
              (u[e]._output = t[e]), p.push(u[e]);
            }
          }
          if (0 === p.length) return [];
          if (1 === p.length) return p[0].route;
          let [o, y, d, m] = yield Promise.all([
              dF.call(
                this,
                p.map((e) => e.route),
                e,
                t,
                s
              ),
              aS.call(this, t),
              fetch('https://api.curve.finance/api/getGas').then((e) => e.json()),
              aS.call(this, n4),
            ]),
            r = d.data.gas.standard,
            l = p.map((e) => Number(this.formatUnits(e._output, i))).map((e) => e * y),
            c = ep.includes(this.chainId) ? yield aR.call(this) : 0,
            f = o.map((e) => aN(m, r, e, c));
          return (
            p.forEach((e, t) => {
              (e.outputUsd = l[t]), (e.txCostUsd = f[t]);
            }),
            p.reduce((e, t) => {
              let n = e.outputUsd - e.txCostUsd - (t.outputUsd - t.txCostUsd);
              return n > 0 || (0 === n && e.route.length < t.route.length) ? e : t;
            }).route
          );
        });
      }
      function dR(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          return e_(this, '_getBestRoute', dB).call(this, e, t, n);
        });
      }
      function dI(e, t) {
        return dE(this, void 0, void 0, function* () {
          let n = this.contracts[this.constants.ALIASES.router].contract,
            { _route: a, _swapParams: i, _pools: s } = dS.call(this, e);
          return s
            ? yield n.get_dy(a, i, t, s, this.constantOptions)
            : yield n.get_dy(a, i, t, this.constantOptions);
        });
      }
      function dL(e, t) {
        return dE(this, void 0, void 0, function* () {
          return e_(this, '_getOutputForRoute', dI).call(this, e, t);
        });
      }
      let dN = {};
      function dP(e, t, n) {
        let [a, i] = af.call(this, e, t),
          s = `${a}-${i}-${n}`;
        if (!(s in dN)) throw Error('You must call getBestRouteAndOutput first');
        return dN[s];
      }
      function dq(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          let [a, i] = af.call(this, e, t),
            [s, u] = a_.call(this, a, i),
            p = yield dR.call(this, a, i, n);
          if (0 === p.length) return { route: p, output: '0.0' };
          let o = yield dL.call(this, p, an(n, s));
          return (
            (dN[`${a}-${i}-${n}`] = {
              route: p,
              output: this.formatUnits(o + BigInt(1), u),
              timestamp: Date.now(),
            }),
            { route: p, output: this.formatUnits(o + BigInt(1), u) }
          );
        });
      }
      function dj(e) {
        return dS.call(this, e);
      }
      function dU(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          return (yield dq.call(this, e, t, n)).output;
        });
      }
      function d$(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          let a;
          let [i, s] = af.call(this, e, t),
            [u, p] = a_.call(this, i, s),
            o = an(n, p),
            y = (yield aS.call(this, i)) || 1,
            d = (yield aS.call(this, s)) || 1,
            m = (Number(n) * d) / y,
            r = yield dR.call(this, i, s, m),
            l = this.contracts[this.constants.ALIASES.router].contract,
            {
              _route: c,
              _swapParams: f,
              _pools: _,
              _basePools: b,
              _baseTokens: g,
              _secondBasePools: v,
              _secondBaseTokens: w,
            } = dS.call(this, r);
          return (
            (a =
              'get_dx(address[11],uint256[5][5],uint256,address[5],address[5],address[5],address[5],address[5])' in
              l
                ? yield l.get_dx(c, f, o, _, b, g, v, w, this.constantOptions)
                : _
                  ? yield l.get_dx(c, f, o, _, b, g, this.constantOptions)
                  : yield l.get_dx(c, f, o, this.constantOptions)),
            this.formatUnits(a, u)
          );
        });
      }
      function dG(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          let a;
          let [i, s] = af.call(this, e, t),
            [u, p] = a_.call(this, i, s),
            { route: o, output: y } = dP.call(this, i, s, n),
            d = an(n, u),
            m = an(y, p),
            r = aY(d, m, u, p),
            l = ai(d, 0);
          if (r.gte(l)) return 0;
          let c = this.contracts[this.constants.ALIASES.router].contract,
            f = au(r.div(Math.pow(10, u)), u),
            { _route: _, _swapParams: b, _pools: g } = dS.call(this, o);
          try {
            a = g
              ? yield c.get_dy(_, b, f, g, this.constantOptions)
              : yield c.get_dy(_, b, f, this.constantOptions);
          } catch (e) {
            (f = this.parseUnits('1', u)),
              (a = g
                ? yield c.get_dy(_, b, f, g, this.constantOptions)
                : yield c.get_dy(_, b, f, this.constantOptions));
          }
          return Number(n7(aZ(d, m, f, a, u, p).toFixed(4)));
        });
      }
      function dW(e, t) {
        return dE(this, void 0, void 0, function* () {
          return yield aM.call(this, [e], [t], this.signerAddress, this.constants.ALIASES.router);
        });
      }
      function dY(e, t) {
        return dE(this, void 0, void 0, function* () {
          return yield aE.call(this, [e], [t], this.constants.ALIASES.router);
        });
      }
      function dZ(e, t) {
        return dE(this, void 0, void 0, function* () {
          return yield aC.call(this, [e], [t], this.constants.ALIASES.router);
        });
      }
      function dV(e, t, n) {
        return dE(this, void 0, void 0, function* () {
          let [a, i] = af.call(this, e, t),
            [s] = a_.call(this, a, i),
            { route: u } = dP.call(this, a, i, n);
          if (0 === u.length) return 0;
          let p = an(n, s),
            [o] = yield dF.call(this, [u], a, i, p);
          return o;
        });
      }
      function dJ(e, t, n) {
        return dE(this, arguments, void 0, function* (e, t, n, a = 0.5) {
          let [i, s] = af.call(this, e, t),
            [u, p] = a_.call(this, i, s);
          yield dZ.call(this, e, n);
          let { route: o, output: y } = dP.call(this, i, s, n);
          if (0 === o.length) throw Error("This pair can't be exchanged");
          let { _route: d, _swapParams: m, _pools: r } = dS.call(this, o),
            l = an(n, u),
            c = au(
              aa(y)
                .times(100 - a)
                .div(100),
              p
            ),
            f = this.contracts[this.constants.ALIASES.router].contract,
            _ = ap(i) ? l : this.parseUnits('0');
          if ((yield this.updateFeeData(), r)) {
            let e =
              (am(
                yield f.exchange.estimateGas(
                  d,
                  m,
                  l,
                  c,
                  r,
                  Object.assign(Object.assign({}, this.constantOptions), { value: _ })
                )
              ) *
                (1 === this.chainId ? this.parseUnits('130', 0) : this.parseUnits('160', 0))) /
              this.parseUnits('100', 0);
            return yield f.exchange(
              d,
              m,
              l,
              c,
              r,
              Object.assign(Object.assign({}, this.options), { value: _, gasLimit: e })
            );
          }
          {
            let e =
              (am(
                yield f.exchange.estimateGas(
                  d,
                  m,
                  l,
                  c,
                  Object.assign(Object.assign({}, this.constantOptions), { value: _ })
                )
              ) *
                this.parseUnits('160', 0)) /
              this.parseUnits('100', 0);
            return yield f.exchange(
              d,
              m,
              l,
              c,
              Object.assign(Object.assign({}, this.options), { value: _, gasLimit: e })
            );
          }
        });
      }
      function dH(e, t) {
        return dE(this, void 0, void 0, function* () {
          let n;
          let [a] = af.call(this, t),
            [i] = a_.call(this, a),
            s = yield e.wait();
          if (null === s) return '0.0';
          for (let e = 1; e <= s.logs.length; e++)
            try {
              n = R.y
                .defaultAbiCoder()
                .decode(
                  ['address[11]', 'uint256[5][5]', 'address[5]', 'uint256', 'uint256'],
                  C.ZG(s.logs[s.logs.length - e].data, 0)
                );
              break;
            } catch (e) {}
          return void 0 === n ? '0.0' : this.formatUnits(n[n.length - 1], i);
        });
      }
      let dK = JSON.parse(
          '[{"name":"CommitAdmin","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyAdmin","inputs":[{"type":"address","name":"admin","indexed":false}],"anonymous":false,"type":"event"},{"name":"ToggleAllowCheckpointToken","inputs":[{"type":"bool","name":"toggle_flag","indexed":false}],"anonymous":false,"type":"event"},{"name":"CheckpointToken","inputs":[{"type":"uint256","name":"time","indexed":false},{"type":"uint256","name":"tokens","indexed":false}],"anonymous":false,"type":"event"},{"name":"Claimed","inputs":[{"type":"address","name":"recipient","indexed":true},{"type":"uint256","name":"amount","indexed":false},{"type":"uint256","name":"claim_epoch","indexed":false},{"type":"uint256","name":"max_epoch","indexed":false}],"anonymous":false,"type":"event"},{"outputs":[],"inputs":[{"type":"address","name":"_voting_escrow"},{"type":"uint256","name":"_start_time"},{"type":"address","name":"_token"},{"type":"address","name":"_admin"},{"type":"address","name":"_emergency_return"}],"stateMutability":"nonpayable","type":"constructor"},{"name":"checkpoint_token","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"820723"},{"name":"ve_for_at","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_user"},{"type":"uint256","name":"_timestamp"}],"stateMutability":"view","type":"function","gas":"249417"},{"name":"checkpoint_total_supply","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"10592405"},{"name":"claim","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"view","type":"function"},{"name":"claim_many","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address[20]","name":"_receivers"}],"stateMutability":"nonpayable","type":"function","gas":"26281905"},{"name":"burn","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_coin"}],"stateMutability":"nonpayable","type":"function","gas":"823450"},{"name":"commit_admin","outputs":[],"inputs":[{"type":"address","name":"_addr"}],"stateMutability":"nonpayable","type":"function","gas":"37898"},{"name":"apply_admin","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"39534"},{"name":"toggle_allow_checkpoint_token","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"38673"},{"name":"kill_me","outputs":[],"inputs":[],"stateMutability":"nonpayable","type":"function","gas":"39587"},{"name":"recover_balance","outputs":[{"type":"bool","name":""}],"inputs":[{"type":"address","name":"_coin"}],"stateMutability":"nonpayable","type":"function","gas":"7778"},{"name":"start_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1541"},{"name":"time_cursor","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1571"},{"name":"time_cursor_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1816"},{"name":"user_epoch_of","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"address","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1846"},{"name":"last_token_time","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1661"},{"name":"tokens_per_week","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1800"},{"name":"voting_escrow","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1721"},{"name":"token","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1751"},{"name":"total_received","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1781"},{"name":"token_last_balance","outputs":[{"type":"uint256","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1811"},{"name":"ve_supply","outputs":[{"type":"uint256","name":""}],"inputs":[{"type":"uint256","name":"arg0"}],"stateMutability":"view","type":"function","gas":"1950"},{"name":"admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1871"},{"name":"future_admin","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1901"},{"name":"can_checkpoint_token","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1931"},{"name":"emergency_return","outputs":[{"type":"address","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1961"},{"name":"is_killed","outputs":[{"type":"bool","name":""}],"inputs":[],"stateMutability":"view","type":"function","gas":"1991"}]'
        ),
        dz = JSON.parse(
          '[{"name":"CommitAdmin","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ApplyAdmin","inputs":[{"name":"admin","type":"address","indexed":false}],"anonymous":false,"type":"event"},{"name":"ToggleAllowCheckpointToken","inputs":[{"name":"toggle_flag","type":"bool","indexed":false}],"anonymous":false,"type":"event"},{"name":"CheckpointToken","inputs":[{"name":"time","type":"uint256","indexed":false},{"name":"tokens","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Claimed","inputs":[{"name":"recipient","type":"address","indexed":true},{"name":"amount","type":"uint256","indexed":false},{"name":"claim_epoch","type":"uint256","indexed":false},{"name":"max_epoch","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[{"name":"_voting_escrow","type":"address"},{"name":"_start_time","type":"uint256"},{"name":"_token","type":"address"},{"name":"_admin","type":"address"},{"name":"_emergency_return","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"checkpoint_token","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"ve_for_at","inputs":[{"name":"_user","type":"address"},{"name":"_timestamp","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"checkpoint_total_supply","inputs":[],"outputs":[]},{"stateMutability":"view","type":"function","name":"claim","inputs":[{"name":"_addr","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"nonpayable","type":"function","name":"claim_many","inputs":[{"name":"_receivers","type":"address[20]"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"burn","inputs":[{"name":"_coin","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"nonpayable","type":"function","name":"commit_admin","inputs":[{"name":"_addr","type":"address"}],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"apply_admin","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"toggle_allow_checkpoint_token","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"kill_me","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"recover_balance","inputs":[{"name":"_coin","type":"address"}],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"start_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"time_cursor","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"time_cursor_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"user_epoch_of","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"last_token_time","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"tokens_per_week","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"voting_escrow","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"total_received","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"token_last_balance","inputs":[],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"ve_supply","inputs":[{"name":"arg0","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}]},{"stateMutability":"view","type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"future_admin","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"can_checkpoint_token","inputs":[],"outputs":[{"name":"","type":"bool"}]},{"stateMutability":"view","type":"function","name":"emergency_return","inputs":[],"outputs":[{"name":"","type":"address"}]},{"stateMutability":"view","type":"function","name":"is_killed","inputs":[],"outputs":[{"name":"","type":"bool"}]}]'
        );
      var dX = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function dQ(...e) {
        return dX(this, void 0, void 0, function* () {
          e = ag.call(this, e);
          let t = yield ab.call(this, [this.constants.ALIASES.crv], e),
            n = {};
          for (let a of e) n[a] = t[a].shift();
          return 1 === e.length ? n[e[0]] : n;
        });
      }
      function d2(...e) {
        return dX(this, void 0, void 0, function* () {
          e = ag.call(this, e);
          let t = this.contracts[this.constants.ALIASES.voting_escrow].multicallContract,
            n = e.map((e) => t.locked(e)),
            a = (yield this.multicallProvider.all(n)).map((e) => [
              this.formatUnits(e[0]),
              1e3 * Number(this.formatUnits(e[1], 0)),
            ]),
            i = {};
          return (
            e.forEach((e, t) => {
              i[e] = { lockedAmount: a[t][0], unlockTime: a[t][1] };
            }),
            1 === e.length ? i[e[0]] : i
          );
        });
      }
      function d5(...e) {
        return dX(this, void 0, void 0, function* () {
          e = ag.call(this, e);
          let t = this.contracts[this.constants.ALIASES.voting_escrow].multicallContract,
            n = e.map((e) => t.balanceOf(e)),
            a = (yield this.multicallProvider.all(n)).map((e) => this.formatUnits(e)),
            i = {};
          return (
            e.forEach((e, t) => {
              i[e] = a[t];
            }),
            1 === e.length ? i[e[0]] : i
          );
        });
      }
      function d0(...e) {
        return dX(this, void 0, void 0, function* () {
          e = ag.call(this, e);
          let t = this.contracts[this.constants.ALIASES.voting_escrow].multicallContract,
            n = [t.totalSupply()];
          e.forEach((e) => {
            n.push(t.balanceOf(e));
          });
          let a = (yield this.multicallProvider.all(n)).map((e) => ai(e)),
            [i] = a.splice(0, 1),
            s = {};
          e.forEach((e, t) => {
            s[e] = a[t].div(i).times(100);
          });
          let u = {};
          for (let e of Object.entries(s)) u[e[0]] = as(e[1]);
          return 1 === e.length ? u[e[0]] : u;
        });
      }
      function d6(e) {
        return dX(this, void 0, void 0, function* () {
          return yield aM.call(
            this,
            [this.constants.ALIASES.crv],
            [e],
            this.signerAddress,
            this.constants.ALIASES.voting_escrow
          );
        });
      }
      function d1(e) {
        return dX(this, void 0, void 0, function* () {
          return yield aE.call(
            this,
            [this.constants.ALIASES.crv],
            [e],
            this.constants.ALIASES.voting_escrow,
            !1
          );
        });
      }
      function d8(e) {
        return dX(this, void 0, void 0, function* () {
          return yield aC.call(
            this,
            [this.constants.ALIASES.crv],
            [e],
            this.constants.ALIASES.voting_escrow,
            !1
          );
        });
      }
      function d3(e, t) {
        return dX(this, void 0, void 0, function* () {
          let n = yield dQ.call(this);
          if (Number(n) < Number(e)) throw Error(`Not enough . Actual: ${n}, required: ${e}`);
          if (
            !(yield aM.call(
              this,
              [this.constants.ALIASES.crv],
              [e],
              this.signerAddress,
              this.constants.ALIASES.voting_escrow
            ))
          )
            throw Error('Token allowance is needed to estimate gas');
          let a = an(e),
            i = Math.floor(Date.now() / 1e3) + 86400 * t;
          return Number(
            yield this.contracts[
              this.constants.ALIASES.voting_escrow
            ].contract.create_lock.estimateGas(a, i, this.constantOptions)
          );
        });
      }
      let d4 = (e, t = Date.now()) => 6048e5 * Math.floor((t / 1e3 + 86400 * e) / 604800),
        d9 = (e, t) => {
          let n = aa(604800),
            a = aa(126144e3),
            i = aa(Math.floor(Date.now() / 1e3)),
            s = aa(t).div(n).integerValue(z.A.ROUND_FLOOR).times(n).minus(i);
          return (
            s.isNegative() ? (s = aa(0)) : s.gt(a) && (s = a), aa(e).times(s).div(a).toNumber()
          );
        };
      function d7(e, t) {
        return dX(this, void 0, void 0, function* () {
          let n = an(e),
            a = Math.floor(Date.now() / 1e3) + 86400 * t;
          yield aA.call(
            this,
            [this.constants.ALIASES.crv],
            [n],
            this.constants.ALIASES.voting_escrow,
            !1
          );
          let i = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          yield this.updateFeeData();
          let s = ay(am(yield i.create_lock.estimateGas(n, a, this.constantOptions)));
          return (yield i.create_lock(
            n,
            a,
            Object.assign(Object.assign({}, this.options), { gasLimit: s })
          )).hash;
        });
      }
      function me(e) {
        return dX(this, void 0, void 0, function* () {
          let t = yield dQ.call(this);
          if (Number(t) < Number(e)) throw Error(`Not enough. Actual: ${t}, required: ${e}`);
          if (
            !(yield aM.call(
              this,
              [this.constants.ALIASES.crv],
              [e],
              this.signerAddress,
              this.constants.ALIASES.voting_escrow
            ))
          )
            throw Error('Token allowance is needed to estimate gas');
          let n = an(e),
            a = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          return Number(yield a.increase_amount.estimateGas(n, this.constantOptions));
        });
      }
      function mt(e) {
        return dX(this, void 0, void 0, function* () {
          let t = an(e);
          yield aA.call(
            this,
            [this.constants.ALIASES.crv],
            [t],
            this.constants.ALIASES.voting_escrow,
            !1
          );
          let n = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          yield this.updateFeeData();
          let a = ay(am(yield n.increase_amount.estimateGas(t, this.constantOptions)));
          return (yield n.increase_amount(
            t,
            Object.assign(Object.assign({}, this.options), { gasLimit: a })
          )).hash;
        });
      }
      function mn(e) {
        return dX(this, void 0, void 0, function* () {
          let { unlockTime: t } = yield d2.call(this),
            n = Math.floor(t / 1e3) + 86400 * e,
            a = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          return Number(am(yield a.increase_unlock_time.estimateGas(n, this.constantOptions)));
        });
      }
      function ma(e) {
        return dX(this, void 0, void 0, function* () {
          let { unlockTime: t } = yield d2.call(this),
            n = Math.floor(t / 1e3) + 86400 * e,
            a = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          yield this.updateFeeData();
          let i = ay(am(yield a.increase_unlock_time.estimateGas(n, this.constantOptions)));
          return (yield a.increase_unlock_time(
            n,
            Object.assign(Object.assign({}, this.options), { gasLimit: i })
          )).hash;
        });
      }
      function mi() {
        return dX(this, void 0, void 0, function* () {
          let e = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          return Number(am(yield e.withdraw.estimateGas(this.constantOptions)));
        });
      }
      function ms() {
        return dX(this, void 0, void 0, function* () {
          let e = this.contracts[this.constants.ALIASES.voting_escrow].contract;
          yield this.updateFeeData();
          let t = ay(am(yield e.withdraw.estimateGas(this.constantOptions)));
          return (yield e.withdraw(Object.assign(Object.assign({}, this.options), { gasLimit: t })))
            .hash;
        });
      }
      function mu() {
        return dX(this, arguments, void 0, function* (e = '') {
          e = e || this.signerAddress;
          let t = new A.NZ(this.constants.ALIASES.fee_distributor, dK, this.provider);
          return this.formatUnits(yield t.claim(e, this.constantOptions));
        });
      }
      function mp() {
        return dX(this, arguments, void 0, function* (e = '') {
          e = e || this.signerAddress;
          let t = this.contracts[this.constants.ALIASES.fee_distributor].contract;
          return Number(am(yield t.claim.estimateGas(e, this.constantOptions)));
        });
      }
      function mo() {
        return dX(this, arguments, void 0, function* (e = '') {
          if (1 !== this.chainId)
            throw Error('This method is only available for the network with chainId 1');
          e = e || this.signerAddress;
          let t = this.contracts[this.constants.ALIASES.fee_distributor].contract;
          yield this.updateFeeData();
          let n = ay(am(yield t.claim.estimateGas(e, this.constantOptions)));
          return (yield t.claim(e, Object.assign(Object.assign({}, this.options), { gasLimit: n })))
            .hash;
        });
      }
      function my() {
        return dX(this, arguments, void 0, function* (e = '') {
          if (1 !== this.chainId)
            throw Error('This method is only available for the network with chainId 1');
          e = e || this.signerAddress;
          let t = new A.NZ(this.constants.ALIASES.fee_distributor_crvusd, dz, this.provider);
          return this.formatUnits(yield t.claim(e, this.constantOptions));
        });
      }
      function md() {
        return dX(this, arguments, void 0, function* (e = '') {
          if (1 !== this.chainId)
            throw Error('This method is only available for the network with chainId 1');
          e = e || this.signerAddress;
          let t = this.contracts[this.constants.ALIASES.fee_distributor_crvusd].contract;
          return Number(am(yield t.claim.estimateGas(e, this.constantOptions)));
        });
      }
      function mm() {
        return dX(this, arguments, void 0, function* (e = '') {
          e = e || this.signerAddress;
          let t = this.contracts[this.constants.ALIASES.fee_distributor_crvusd].contract;
          yield this.updateFeeData();
          let n = ay(am(yield t.claim.estimateGas(e, this.constantOptions)));
          return (yield t.claim(e, Object.assign(Object.assign({}, this.options), { gasLimit: n })))
            .hash;
        });
      }
      function mr() {
        return dX(this, void 0, void 0, function* () {
          if (1 === this.chainId) throw Error('There is no lastBlock method on ethereum network');
          let e = this.contracts[this.constants.ALIASES.voting_escrow_oracle].contract;
          return Number(yield e.last_eth_block_number(this.constantOptions));
        });
      }
      function ml() {
        return dX(this, void 0, void 0, function* () {
          if (1 === this.chainId)
            throw Error('There is no getAnycallBalance method on ethereum network');
          let e = this.contracts[this.constants.ALIASES.anycall].contract,
            t = yield e.executionBudget(
              this.constants.ALIASES.voting_escrow_oracle,
              this.constantOptions
            );
          return this.formatUnits(t);
        });
      }
      function mc() {
        return 42161 === this.chainId || 10 === this.chainId ? 1e-5 : 0.1;
      }
      function mf(e, t) {
        return dX(this, void 0, void 0, function* () {
          if (1 === this.chainId)
            throw Error('There is no topUpAnycall method on ethereum network');
          let n = this.contracts[this.constants.ALIASES.anycall].contract,
            a = this.parseUnits(String(e)),
            i = yield n.deposit.estimateGas(
              this.constants.ALIASES.voting_escrow_oracle,
              Object.assign(Object.assign({}, this.constantOptions), { value: a })
            );
          if (t) return ad(i);
          yield this.updateFeeData();
          let s = ay(am(i));
          return (yield n.deposit(
            this.constants.ALIASES.voting_escrow_oracle,
            Object.assign(Object.assign({}, this.options), { gasLimit: s, value: a })
          )).hash;
        });
      }
      function m_() {
        return dX(this, arguments, void 0, function* (e = mc.call(this)) {
          return yield mf.call(this, e, !0);
        });
      }
      function mb() {
        return dX(this, arguments, void 0, function* (e = mc.call(this)) {
          return yield mf.call(this, e, !1);
        });
      }
      function mg(e) {
        return dX(this, void 0, void 0, function* () {
          if (1 !== this.chainId)
            throw Error('lastBlockNumberSent method is on ethereum network only');
          let t = this.contracts[this.constants.ALIASES.voting_escrow_oracle].contract;
          return Number(yield t.get_last_block_number_sent(e, this.constantOptions));
        });
      }
      function mv() {
        return dX(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('blockToSend method is on ethereum network only');
          return (yield this.provider.getBlockNumber()) - 128;
        });
      }
      function mw(e, t, n) {
        return dX(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('sendBlockhash method is on ethereum network only');
          let a = this.contracts[this.constants.ALIASES.voting_escrow_oracle].contract,
            i = yield a.send_blockhash.estimateGas(e, t, this.constantOptions);
          if (n) return ad(i);
          yield this.updateFeeData();
          let s = ay(am(i));
          return (yield a.send_blockhash(
            e,
            t,
            Object.assign(Object.assign({}, this.options), { gasLimit: s })
          )).hash;
        });
      }
      function mh(e, t) {
        return dX(this, void 0, void 0, function* () {
          return yield mw.call(this, e, t, !0);
        });
      }
      function mx(e, t) {
        return dX(this, void 0, void 0, function* () {
          return yield mw.call(this, e, t, !1);
        });
      }
      function mM(e) {
        return dX(this, arguments, void 0, function* (e, t = this.signerAddress, n) {
          if (1 === this.chainId) throw Error('submitProof method is on ethereum network only');
          if ('' === t) throw Error('Pass address you want to submit proof for');
          let a = yield _(e, t),
            i = this.contracts[this.constants.ALIASES.voting_escrow_oracle].contract,
            s = yield i.submit_state.estimateGas(
              t,
              '0x' + a.block_header_rlp,
              '0x' + a.proof_rlp,
              this.constantOptions
            );
          if (n) return ad(s);
          yield this.updateFeeData();
          let u = ay(am(s));
          return (yield i.submit_state(
            t,
            '0x' + a.block_header_rlp,
            '0x' + a.proof_rlp,
            Object.assign(Object.assign({}, this.options), { gasLimit: u })
          )).hash;
        });
      }
      function mA(e) {
        return dX(this, arguments, void 0, function* (e, t = this.signerAddress) {
          return yield mM.call(this, e, t, !0);
        });
      }
      function mE(e) {
        return dX(this, arguments, void 0, function* (e, t = this.signerAddress) {
          return yield mM.call(this, e, t, !1);
        });
      }
      function mC(e) {
        let t = (0, N.YW)(e);
        if (t.length > 31) throw Error('bytes32 string must be less than 32 bytes');
        return (0, C.X_)(t, 32);
      }
      var mk = n(74733);
      let mD = JSON.parse(
        '[{"name":"Approval","inputs":[{"name":"_owner","type":"address","indexed":true},{"name":"_spender","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"name":"Transfer","inputs":[{"name":"_from","type":"address","indexed":true},{"name":"_to","type":"address","indexed":true},{"name":"_value","type":"uint256","indexed":false}],"anonymous":false,"type":"event"},{"stateMutability":"nonpayable","type":"constructor","inputs":[],"outputs":[]},{"stateMutability":"nonpayable","type":"function","name":"transfer","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"78632"},{"stateMutability":"nonpayable","type":"function","name":"transferFrom","inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"116616"},{"stateMutability":"nonpayable","type":"function","name":"approve","inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"39151"},{"stateMutability":"nonpayable","type":"function","name":"permit","inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_deadline","type":"uint256"},{"name":"_v","type":"uint8"},{"name":"_r","type":"bytes32"},{"name":"_s","type":"bytes32"}],"outputs":[{"name":"","type":"bool"}],"gas":"102221"},{"stateMutability":"nonpayable","type":"function","name":"increaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_added_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"41711"},{"stateMutability":"nonpayable","type":"function","name":"decreaseAllowance","inputs":[{"name":"_spender","type":"address"},{"name":"_subtracted_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"41737"},{"stateMutability":"nonpayable","type":"function","name":"mint","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"80902"},{"stateMutability":"nonpayable","type":"function","name":"mint_relative","inputs":[{"name":"_to","type":"address"},{"name":"frac","type":"uint256"}],"outputs":[{"name":"","type":"uint256"}],"gas":"81224"},{"stateMutability":"nonpayable","type":"function","name":"burnFrom","inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"gas":"80954"},{"stateMutability":"view","type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8"}],"gas":"630"},{"stateMutability":"view","type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"6287"},{"stateMutability":"nonpayable","type":"function","name":"initialize","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_pool","type":"address"}],"outputs":[],"gas":"259459"},{"stateMutability":"view","type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"13109"},{"stateMutability":"view","type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string"}],"gas":"10868"},{"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32"}],"gas":"2880"},{"stateMutability":"view","type":"function","name":"balanceOf","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3176"},{"stateMutability":"view","type":"function","name":"allowance","inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3472"},{"stateMutability":"view","type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256"}],"gas":"2970"},{"stateMutability":"view","type":"function","name":"minter","inputs":[],"outputs":[{"name":"","type":"address"}],"gas":"3000"},{"stateMutability":"view","type":"function","name":"nonces","inputs":[{"name":"arg0","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"gas":"3296"}]'
      );
      var mT = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function mS(e, t, n, a, i, s, u, p, o, y, d) {
        return mT(this, void 0, void 0, function* () {
          if (e.length > 32) throw Error('Max name length = 32');
          if (t.length > 10) throw Error('Max symbol length = 10');
          if (![2, 3, 4].includes(n.length))
            throw Error('Invalid number of coins. Must be 2, 3 or 4');
          if (aa(i).lt(0.04)) throw Error(`fee must be >= 0.04%. Passed fee = ${i}`);
          if (aa(i).gt(1)) throw Error(`fee must be <= 1%. Passed fee = ${i}`);
          if (![0, 1, 2, 3].includes(s))
            throw Error('Invalid assetType. Must be one of: 0 = USD, 1 = ETH, 2 = BTC, 3 = Other');
          if (1 !== this.chainId || n.length > 2) {
            if (![0, 1, 2, 3].includes(u))
              throw Error('Invalid implementationIdx. Must be one 0, 1, 2 or 3');
          } else if (![0, 1, 2, 3, 4, 5].includes(u))
            throw Error('Invalid implementationIdx. Must be one 0, 1, 2, 3, 4 or 5');
          if (p <= 0) throw Error(`emaTime must be > 0. Passed emaTime = ${p}`);
          let m = an(a, 0),
            r = an(i, 8),
            l = n.concat(Array(4 - n.length).fill(this.constants.ZERO_ADDRESS)),
            c =
              (1 === this.chainId && 2 === n.length && 4 === u && 600 !== p) ||
              (1 === this.chainId && 2 === n.length && 5 === u && 600 !== p) ||
              ((42161 === this.chainId || 10 == this.chainId) &&
                2 === n.length &&
                0 === u &&
                600 !== p),
            f = (42161 === this.chainId || 10 == this.chainId) && 2 === n.length && 2 === u,
            _ = c || f ? this.constants.ALIASES.factory_admin : this.constants.ALIASES.factory,
            b = this.contracts[_].contract,
            g = [e, t, l, m, r, s, u];
          if (((c || f) && g.push(an(Math.floor(p / Math.log(2)), 0)), f)) {
            let e = '0x00000000' === y ? '0x00000000' : iW.id(y).substring(0, 10);
            g.push(e, o);
          }
          let v = f ? 'deploy_plain_pool_and_set_oracle' : 'deploy_plain_pool',
            w = yield b[v].estimateGas(...g, this.constantOptions);
          if (d) return ad(w);
          let h = ay(am(w));
          return (
            yield this.updateFeeData(),
            yield b[v](...g, Object.assign(Object.assign({}, this.options), { gasLimit: h }))
          );
        });
      }
      function mO(e, t, n, a, i, s, u) {
        return mT(
          this,
          arguments,
          void 0,
          function* (
            e,
            t,
            n,
            a,
            i,
            s,
            u,
            p = 600,
            o = this.constants.ZERO_ADDRESS,
            y = '0x00000000'
          ) {
            return yield mS.call(this, e, t, n, a, i, s, u, p, o, y, !0);
          }
        );
      }
      function mF(e, t, n, a, i, s, u) {
        return mT(
          this,
          arguments,
          void 0,
          function* (
            e,
            t,
            n,
            a,
            i,
            s,
            u,
            p = 600,
            o = this.constants.ZERO_ADDRESS,
            y = '0x00000000'
          ) {
            return yield mS.call(this, e, t, n, a, i, s, u, p, o, y, !1);
          }
        );
      }
      function mB(e, t, n, a, i, s, u, p) {
        return mT(this, arguments, void 0, function* (e, t, n, a, i, s, u, p, o = 600, y, d, m) {
          let r, l;
          if (e.length > 32) throw Error('Max name length = 32');
          if (t.length > 10) throw Error('Max symbol length = 10');
          if (n.length < 1) throw Error('Invalid number of coins. Must be more than 1');
          if (n.length > 9) throw Error('Invalid number of coins. Must be less than 9');
          if (aa(i).gt(1)) throw Error(`fee must be <= 1%. Passed fee = ${i}`);
          if (
            ((r = 0 === y.length ? Array(n.length).fill(this.constants.ZERO_ADDRESS) : y),
            (l = 0 === d.length ? Array(n.length).fill('0x00000000') : d),
            n.length !== u.length)
          )
            throw Error('Invalid length of assetTypes. Must be same coins length');
          if (n.length !== r.length)
            throw Error('Invalid length of oracleAddresses. Must be same coins length');
          if (n.length !== l.length)
            throw Error('Invalid length of methodNames. Must be same coins length');
          if (
            (u.forEach((e, t) => {
              if (![0, 1, 2, 3].includes(e))
                throw Error(
                  `Invalid assetType. Must be one of: 0 = Standard, 1 = Oracle, 2 = Rebasing, 3 = ERC4626 for assetTypes[${t}]`
                );
            }),
            ![0].includes(p))
          )
            throw Error('Invalid implementationIdx. Must be 0');
          if (o <= 0) throw Error(`emaTime must be > 0. Passed emaTime = ${o}`);
          let c = an(a, 0),
            f = an(i, 8),
            _ = an(s, 10),
            b = this.constants.ALIASES.stable_ng_factory,
            g = this.contracts[b].contract,
            v = [];
          l.forEach((e) => {
            '0x00000000' === e || '' === e
              ? v.push('0x00000000')
              : v.push(iW.id(e).substring(0, 10));
          });
          let w = [e, t, n, c, f, _, o, p, u, v, r],
            h = yield g.deploy_plain_pool.estimateGas(...w, this.constantOptions);
          if (m) return ad(h);
          let x = ay(am(h));
          return (
            yield this.updateFeeData(),
            yield g.deploy_plain_pool(
              ...w,
              Object.assign(Object.assign({}, this.options), { gasLimit: x })
            )
          );
        });
      }
      function mR(e, t, n, a, i, s, u, p, o, y, d) {
        return mT(this, void 0, void 0, function* () {
          return yield mB.call(this, e, t, n, a, i, s, u, p, o, y, d, !0);
        });
      }
      function mI(e, t, n, a, i, s, u, p, o, y, d) {
        return mT(this, void 0, void 0, function* () {
          return yield mB.call(this, e, t, n, a, i, s, u, p, o, y, d, !1);
        });
      }
      function mL(e) {
        return mT(this, void 0, void 0, function* () {
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          return t.logs[0].address.toLowerCase();
        });
      }
      function mN(e, t, n, a) {
        return mT(this, void 0, void 0, function* () {
          this.setContract(e, ul);
          let i = this.contracts[e].contract,
            s = '0x00000000' === n ? '0x00000000' : iW.id(n).substring(0, 10),
            u = yield i.set_oracle.estimateGas(s, t, this.constantOptions);
          if (a) return Number(u);
          let p = ay(u);
          return (
            yield this.updateFeeData(),
            yield i.set_oracle(
              s,
              t,
              Object.assign(Object.assign({}, this.options), { gasLimit: p })
            )
          );
        });
      }
      function mP(e) {
        return mT(
          this,
          arguments,
          void 0,
          function* (e, t = this.constants.ZERO_ADDRESS, n = '0x00000000') {
            return yield mN.call(this, e, t, n, !0);
          }
        );
      }
      function mq(e) {
        return mT(
          this,
          arguments,
          void 0,
          function* (e, t = this.constants.ZERO_ADDRESS, n = '0x00000000') {
            return yield mN.call(this, e, t, n, !1);
          }
        );
      }
      function mj(e, t, n, a, i, s, u, p) {
        return mT(this, void 0, void 0, function* () {
          if (t.length > 32) throw Error('Max name length = 32');
          if (n.length > 10) throw Error('Max symbol length = 10');
          if (aa(s).lt(0.04)) throw Error(`fee must be >= 0.04%. Passed fee = ${s}`);
          if (aa(s).gt(1)) throw Error(`fee must be <= 1%. Passed fee = ${s}`);
          if (![0, 1].includes(u)) throw Error('Invalid implementationIdx. Must be one 0 or 1');
          let o = an(i, 0),
            y = an(s, 8),
            d = this.contracts[this.constants.ALIASES.factory].contract,
            m = yield d.deploy_metapool.estimateGas(e, t, n, a, o, y, u, this.constantOptions);
          if (p) return ad(m);
          let r = ay(am(m));
          return (
            yield this.updateFeeData(),
            yield d.deploy_metapool(
              e,
              t,
              n,
              a,
              o,
              y,
              u,
              Object.assign(Object.assign({}, this.options), { gasLimit: r })
            )
          );
        });
      }
      function mU(e, t, n, a, i, s, u) {
        return mT(this, void 0, void 0, function* () {
          return yield mj.call(this, e, t, n, a, i, s, u, !0);
        });
      }
      function m$(e, t, n, a, i, s, u) {
        return mT(this, void 0, void 0, function* () {
          return yield mj.call(this, e, t, n, a, i, s, u, !1);
        });
      }
      function mG(e, t, n, a, i, s, u, p) {
        return mT(
          this,
          arguments,
          void 0,
          function* (
            e,
            t,
            n,
            a,
            i,
            s,
            u,
            p,
            o = 600,
            y = 0,
            d = '0x00000000',
            m = this.constants.ZERO_ADDRESS,
            r
          ) {
            if (t.length > 32) throw Error('Max name length = 32');
            if (n.length > 10) throw Error('Max symbol length = 10');
            if (aa(s).gt(1)) throw Error(`fee must be <= 1%. Passed fee = ${s}`);
            if (![0, 1].includes(y)) throw Error('Invalid implementationIdx. Must be one 0 or 1');
            let l = an(i, 0),
              c = an(s, 8),
              f = an(u, 10),
              _ = '0x00000000' === d ? '0x00000000' : iW.id(d).substring(0, 10),
              b = this.contracts[this.constants.ALIASES.stable_ng_factory].contract,
              g = yield b.deploy_metapool.estimateGas(
                e,
                t,
                n,
                a,
                l,
                c,
                f,
                o,
                y,
                p,
                _,
                m,
                this.constantOptions
              );
            if (r) return ad(g);
            let v = ay(am(g));
            return (
              yield this.updateFeeData(),
              yield b.deploy_metapool(
                e,
                t,
                n,
                a,
                l,
                c,
                f,
                o,
                y,
                p,
                _,
                m,
                Object.assign(Object.assign({}, this.options), { gasLimit: v })
              )
            );
          }
        );
      }
      function mW(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield mG.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !0);
        });
      }
      function mY(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield mG.call(this, e, t, n, a, i, s, u, y, p, o, d, m, !1);
        });
      }
      function mZ(e) {
        return mT(this, void 0, void 0, function* () {
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          for (let e = t.logs.length - 1; e > -1; e--)
            if ('args' in t.logs[e]) {
              let n = ak.call(this, t.logs[e].args[1]),
                a = dw.call(this, n);
              return t.logs[a.underlyingCoins.length].address.toLowerCase();
            }
          throw Error("Can't get deployed metapool address");
        });
      }
      function mV(e, t, n, a, i, s, u, p, o, y, d, m, r) {
        return mT(this, void 0, void 0, function* () {
          if (e.length > 32) throw Error('Max name length = 32');
          if (t.length > 10) throw Error('Max symbol length = 10');
          if (2 !== n.length) throw Error('Invalid number of coins. Must be 2');
          if (n[0] === n[1]) throw Error('Coins must be different');
          if (aa(a).lt(4e3)) throw Error(`A must be >= 4000. Passed A = ${a}`);
          if (aa(a).gt(4e9)) throw Error(`A must be <= 4 * 10 ** 9. Passed A = ${a}`);
          if (aa(i).lt(1e-8)) throw Error(`gamma must be >= 1e-8. Passed gamma = ${i}`);
          if (aa(i).gt(0.02)) throw Error(`gamma must be <= 0.02. Passed gamma = ${i}`);
          if (aa(s).lt(0.005)) throw Error(`midFee must be >= 0.005. Passed midFee = ${s}`);
          if (aa(s).gt(100)) throw Error(`midFee must be <= 100. Passed midFee = ${s}`);
          if (aa(u).lt(aa(s)))
            throw Error(`outFee must be >= midFee. Passed outFee = ${u} < midFee = ${s}`);
          if (aa(u).gt(100)) throw Error(`outFee must be <= 100. Passed outFee = ${u}`);
          if (aa(p).lt(0))
            throw Error(`allowedExtraProfit must be >= 0. Passed allowedExtraProfit = ${p}`);
          if (aa(p).gt(0.01))
            throw Error(`allowedExtraProfit must be <= 0.01. Passed allowedExtraProfit = ${p}`);
          if (aa(o).lt(0)) throw Error(`feeGamma must be >= 0. Passed feeGamma = ${o}`);
          if (aa(o).gt(1)) throw Error(`feeGamma must be <= 1. Passed feeGamma = ${o}`);
          if (aa(y).lt(0)) throw Error(`adjustmentStep must be >= 0. Passed adjustmentStep=${y}`);
          if (aa(y).gt(1)) throw Error(`adjustmentStep must be <= 1. Passed adjustmentStep=${y}`);
          if (aa(d).lt(0)) throw Error(`maHalfTime must be >= 0. Passed maHalfTime=${d}`);
          if (aa(d).gt(604800)) throw Error(`maHalfTime must be <= 604800. Passed maHalfTime=${d}`);
          if (aa(m).lt(1e-12))
            throw Error(`initialPrice must be >= 1e-12. Passed initialPrice=${m}`);
          if (aa(m).gt(1e12)) throw Error(`initialPrice must be <= 1e12. Passed initialPrice=${m}`);
          let l = an(a, 0),
            c = an(i),
            f = an(s, 8),
            _ = an(u, 8),
            b = an(p),
            g = an(o),
            v = an(y),
            w = an(d, 0),
            h = an(m),
            x = this.contracts[this.constants.ALIASES.crypto_factory].contract,
            M = yield x.deploy_pool.estimateGas(
              e,
              t,
              n,
              l,
              c,
              f,
              _,
              b,
              g,
              v,
              5e9,
              w,
              h,
              this.constantOptions
            );
          if (r) return ad(M);
          let A = ay(am(M));
          return (
            yield this.updateFeeData(),
            yield x.deploy_pool(
              e,
              t,
              n,
              l,
              c,
              f,
              _,
              b,
              g,
              v,
              5e9,
              w,
              h,
              Object.assign(Object.assign({}, this.options), { gasLimit: A })
            )
          );
        });
      }
      function mJ(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield mV.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !0);
        });
      }
      function mH(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield mV.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !1);
        });
      }
      function mK(e) {
        return mT(this, void 0, void 0, function* () {
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          let n = t.logs[0].address,
            a = new A.NZ(n, mD, this.provider);
          return (yield a.minter(this.constantOptions)).toLowerCase();
        });
      }
      function mz(e, t, n, a, i, s, u, p, o, y, d, m, r) {
        return mT(this, void 0, void 0, function* () {
          if (e.length > 32) throw Error('Max name length = 32');
          if (t.length > 10) throw Error('Max symbol length = 10');
          if (2 !== n.length) throw Error('Invalid number of coins. Must be 2');
          if (n[0] === n[1]) throw Error('Coins must be different');
          if (aa(a).lt(4e3)) throw Error(`A must be >= 4000. Passed A = ${a}`);
          if (aa(a).gt(4e9)) throw Error(`A must be <= 4 * 10 ** 9. Passed A = ${a}`);
          let l = aa(1e-8),
            c = aa(0.199);
          if (aa(i).lt(l)) throw Error(`gamma must be >= ${l}. Passed gamma = ${i}`);
          if (aa(i).gt(c)) throw Error(`gamma must be <= ${c}. Passed gamma = ${i}`);
          if (aa(s).lt(0.005)) throw Error(`midFee must be >= 0.005. Passed midFee = ${s}`);
          if (aa(s).gt(100)) throw Error(`midFee must be <= 100. Passed midFee = ${s}`);
          if (aa(u).lt(aa(s)))
            throw Error(`outFee must be >= midFee. Passed outFee = ${u} < midFee = ${s}`);
          if (aa(u).gt(100)) throw Error(`outFee must be <= 100. Passed outFee = ${u}`);
          if (aa(p).lt(0))
            throw Error(`allowedExtraProfit must be >= 0. Passed allowedExtraProfit = ${p}`);
          if (aa(p).gt(0.01))
            throw Error(`allowedExtraProfit must be <= 0.01. Passed allowedExtraProfit = ${p}`);
          if (aa(o).lt(0)) throw Error(`feeGamma must be >= 0. Passed feeGamma = ${o}`);
          if (aa(o).gt(1)) throw Error(`feeGamma must be <= 1. Passed feeGamma = ${o}`);
          if (aa(y).lt(0)) throw Error(`adjustmentStep must be >= 0. Passed adjustmentStep=${y}`);
          if (aa(y).gt(1)) throw Error(`adjustmentStep must be <= 1. Passed adjustmentStep=${y}`);
          if (aa(d).lt(0)) throw Error(`maHalfTime must be >= 0. Passed maHalfTime=${d}`);
          if (aa(d).gt(604800)) throw Error(`maHalfTime must be <= 604800. Passed maHalfTime=${d}`);
          if (aa(m).lt(1e-12))
            throw Error(`initialPrice must be >= 1e-12. Passed initialPrice=${m}`);
          if (aa(m).gt(1e12)) throw Error(`initialPrice must be <= 1e12. Passed initialPrice=${m}`);
          let f = an(a, 0),
            _ = an(i),
            b = an(s, 8),
            g = an(u, 8),
            v = an(p),
            w = an(o),
            h = an(y),
            x = an(d, 0),
            M = an(m),
            A = this.contracts[this.constants.ALIASES.twocrypto_factory].contract,
            E = yield A.deploy_pool.estimateGas(
              e,
              t,
              n,
              0,
              f,
              _,
              b,
              g,
              w,
              v,
              h,
              x,
              M,
              this.constantOptions
            );
          if (r) return ad(E);
          let C = ay(am(E));
          return (
            yield this.updateFeeData(),
            yield A.deploy_pool(
              e,
              t,
              n,
              0,
              f,
              _,
              b,
              g,
              w,
              v,
              h,
              x,
              M,
              Object.assign(Object.assign({}, this.options), { gasLimit: C })
            )
          );
        });
      }
      function mX(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield mz.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !0);
        });
      }
      function mQ(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield mz.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !1);
        });
      }
      function m2(e) {
        return mT(this, void 0, void 0, function* () {
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          for (let e = t.logs.length - 1; e > -1; e--)
            if ('args' in t.logs[e]) return t.logs[e].args[0];
          throw Error("Can't get deployed tricrypto pool address");
        });
      }
      function m5(e, t, n, a, i, s, u, p, o, y, d, m, r) {
        return mT(this, void 0, void 0, function* () {
          var l, c, f, _;
          if (e.length > 64) throw Error('Max name length = 64');
          if (t.length > 32) throw Error('Max symbol length = 32');
          if (3 !== n.length) throw Error('Invalid number of coins. Must be 3');
          if (n[0] === n[1] || n[1] === n[2] || n[0] === n[2])
            throw Error('Coins must be different');
          if (aa(a).lt(2700)) throw Error(`A must be >= 2700. Passed A = ${a}`);
          if (aa(a).gt(27e7)) throw Error(`A must be <= 27 * 10 ** 7. Passed A = ${a}`);
          if (aa(i).lt(1e-8)) throw Error(`gamma must be >= 1e-8. Passed gamma = ${i}`);
          if (aa(i).gt(0.05)) throw Error(`gamma must be <= 0.05. Passed gamma = ${i}`);
          if (aa(s).lt(0)) throw Error(`midFee must be >= 0. Passed midFee = ${s}`);
          if (aa(s).gt(100)) throw Error(`midFee must be <= 100. Passed midFee = ${s}`);
          if (aa(u).lt(aa(s)))
            throw Error(`outFee must be >= midFee. Passed outFee = ${u} < midFee = ${s}`);
          if (aa(u).gt(100)) throw Error(`outFee must be <= 100. Passed outFee = ${u}`);
          if (aa(p).lt(0))
            throw Error(`allowedExtraProfit must be >= 0. Passed allowedExtraProfit = ${p}`);
          if (aa(p).gt(1))
            throw Error(`allowedExtraProfit must be <= 1. Passed allowedExtraProfit = ${p}`);
          if (aa(o).lt(0)) throw Error(`feeGamma must be >= 0. Passed feeGamma = ${o}`);
          if (aa(o).gt(1)) throw Error(`feeGamma must be <= 1. Passed feeGamma = ${o}`);
          if (aa(y).lt(0)) throw Error(`adjustmentStep must be >= 0. Passed adjustmentStep=${y}`);
          if (aa(y).gt(1)) throw Error(`adjustmentStep must be <= 1. Passed adjustmentStep=${y}`);
          if (aa(d).lt(60)) throw Error(`maHalfTime must be >= 60. Passed maHalfTime=${d}`);
          if (aa(d).gt(604800)) throw Error(`maHalfTime must be <= 604800. Passed maHalfTime=${d}`);
          if (2 !== m.length) throw Error('Invalid number of initial prices. Must be 2');
          if (aa(m[0]).lt(1e-12))
            throw Error(`initialPrices[0] must be >= 1e-12. Passed initialPrices[0]=${m[0]}`);
          if (aa(m[0]).gt(1e12))
            throw Error(`initialPrices[0] must be <= 1e12. Passed initialPrices[0]=${m[0]}`);
          if (aa(m[1]).lt(1e-12))
            throw Error(`initialPrices[1] must be >= 1e-12. Passed initialPrices[1]=${m[1]}`);
          if (aa(m[1]).gt(1e12))
            throw Error(`initialPrices[1] must be <= 1e12. Passed initialPrices[1]=${m[1]}`);
          let b = an(a, 0),
            g = an(i),
            v = an(s, 8),
            w = an(u, 8),
            h = an(p),
            x = an(o),
            M = an(y),
            A = an(Math.floor(d / Math.log(2)), 0),
            E = [an(m[0]), an(m[1])],
            C = this.contracts[this.constants.ALIASES.tricrypto_factory].contract,
            k = yield C.deploy_pool.estimateGas(
              e,
              t,
              n,
              this.constants.ZERO_ADDRESS,
              null !==
                (c =
                  null ===
                    (l = this.constants.CRYPTO_FACTORY_CONSTANTS.tricryptoDeployImplementations) ||
                  void 0 === l
                    ? void 0
                    : l.implementationIdx) && void 0 !== c
                ? c
                : 0,
              b,
              g,
              v,
              w,
              x,
              h,
              M,
              A,
              E,
              this.constantOptions
            );
          if (r) return ad(k);
          let D = ay(am(k));
          return (
            yield this.updateFeeData(),
            yield C.deploy_pool(
              e,
              t,
              n,
              this.constants.NATIVE_TOKEN.wrappedAddress,
              null !==
                (_ =
                  null ===
                    (f = this.constants.CRYPTO_FACTORY_CONSTANTS.tricryptoDeployImplementations) ||
                  void 0 === f
                    ? void 0
                    : f.implementationIdx) && void 0 !== _
                ? _
                : 0,
              b,
              g,
              v,
              w,
              x,
              h,
              M,
              A,
              E,
              Object.assign(Object.assign({}, this.options), { gasLimit: D })
            )
          );
        });
      }
      function m0(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield m5.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !0);
        });
      }
      function m6(e, t, n, a, i, s, u, p, o, y, d, m) {
        return mT(this, void 0, void 0, function* () {
          return yield m5.call(this, e, t, n, a, i, s, u, p, o, y, d, m, !1);
        });
      }
      function m1(e) {
        return mT(this, void 0, void 0, function* () {
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          for (let e = t.logs.length - 1; e > -1; e--)
            if ('args' in t.logs[e]) return t.logs[e].args[0];
          throw Error("Can't get deployed tricrypto pool address");
        });
      }
      function m8(e, t, n) {
        return mT(this, void 0, void 0, function* () {
          if (1 !== this.chainId)
            throw Error('There is no deployGauge method on sidechain network');
          let a = this.contracts[t].contract,
            i = yield a.deploy_gauge.estimateGas(e, this.constantOptions);
          if (n) return ad(i);
          let s = ay(am(i));
          return (
            yield this.updateFeeData(),
            yield a.deploy_gauge(e, Object.assign(Object.assign({}, this.options), { gasLimit: s }))
          );
        });
      }
      function m3(e, t, n) {
        return mT(this, void 0, void 0, function* () {
          if (1 === this.chainId)
            throw Error('There is no deployGaugeSidechain method on ethereum network');
          let a = this.contracts[this.constants.ALIASES.child_gauge_factory].contract,
            i = mC(t),
            s = yield a.deploy_gauge.estimateGas(
              e,
              mk.V.bytes32(i),
              this.signerAddress,
              this.constantOptions
            );
          if (n) return ad(s);
          let u = ay(am(s));
          return (
            yield this.updateFeeData(),
            yield a.deploy_gauge(
              e,
              mk.V.bytes32(i),
              this.signerAddress,
              Object.assign(Object.assign({}, this.options), { gasLimit: u })
            )
          );
        });
      }
      function m4(e, t, n) {
        return mT(this, void 0, void 0, function* () {
          if (1 !== this.chainId)
            throw Error('There is no deployGaugeMirror method on sidechain network');
          let a = n8[this.chainId].ALIASES.root_gauge_factory,
            i = this.contracts[a].contract,
            s = mC(t),
            u = yield i.deploy_gauge.estimateGas(e, mk.V.bytes32(s), this.constantOptions);
          if (n) return ad(u);
          let p = ay(am(u));
          return (
            yield this.updateFeeData(),
            yield i.deploy_gauge(
              e,
              mk.V.bytes32(s),
              Object.assign(Object.assign({}, this.options), { gasLimit: p })
            )
          );
        });
      }
      function m9(e, t) {
        return mT(this, void 0, void 0, function* () {
          return yield m8.call(this, e, t, !0);
        });
      }
      function m7(e, t) {
        return mT(this, void 0, void 0, function* () {
          return yield m8.call(this, e, t, !1);
        });
      }
      function re(e, t) {
        return mT(this, void 0, void 0, function* () {
          return yield m3.call(this, e, t, !0);
        });
      }
      function rt(e, t) {
        return mT(this, void 0, void 0, function* () {
          return yield m3.call(this, e, t, !1);
        });
      }
      function rn(e, t) {
        return mT(this, void 0, void 0, function* () {
          return yield m4.call(this, e, t, !0);
        });
      }
      function ra(e, t) {
        return mT(this, void 0, void 0, function* () {
          return yield m4.call(this, e, t, !1);
        });
      }
      function ri(e) {
        return mT(this, void 0, void 0, function* () {
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          let n = t.logs[0];
          return n.args[n.args.length - 1].toLowerCase();
        });
      }
      function rs(e) {
        return mT(this, void 0, void 0, function* () {
          if (1 !== this.chainId)
            throw Error(
              'There is no getDeployedGaugeMirrorAddressByTx method on sidechain network'
            );
          let t = yield e.wait();
          if (!t) throw Error("Can't get tx info");
          let n = t.logs[1];
          return n.args[n.args.length - 1].toLowerCase();
        });
      }
      function ru(e) {
        return mT(this, void 0, void 0, function* () {
          if (1 !== this.chainId)
            throw Error('There is no getDeployedGaugeMirrorAddress method on sidechain network');
          let t = n8[this.chainId].ALIASES.root_gauge_factory,
            n = this.contracts[t].contract,
            a = Number(yield n.get_gauge_count(e)) - 1;
          return yield n.get_gauge(e, a);
        });
      }
      var rp = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      function ro() {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let e = this.contracts[this.constants.ALIASES.crv].multicallContract,
            t = this.contracts[this.constants.ALIASES.voting_escrow].multicallContract,
            n = this.contracts[this.constants.ALIASES.circulating_supply].multicallContract,
            [a, i, s] = yield this.multicallProvider.all([
              n.circulating_supply(),
              e.balanceOf(this.constants.ALIASES.voting_escrow),
              t.totalSupply(),
            ]);
          return {
            circulating: this.formatUnits(a),
            locked: this.formatUnits(i),
            total: this.formatUnits(a + i),
            veCrv: this.formatUnits(s),
            averageLockTime: ai(s).div(ai(i)).times(4).toFixed(4),
          };
        });
      }
      function ry() {
        return rp(this, arguments, void 0, function* (e = '') {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          e = av.call(this, e);
          let t = yield this.contracts[this.constants.ALIASES.crv].contract.balanceOf(e);
          return this.formatUnits(t);
        });
      }
      function rd() {
        return rp(this, arguments, void 0, function* (e = '') {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          e = av.call(this, e);
          let t = this.contracts[this.constants.ALIASES.voting_escrow].multicallContract,
            [n, a, i] = yield this.multicallProvider.all([
              t.balanceOf(e),
              t.totalSupply(),
              t.locked(e),
            ]),
            s = i[0],
            u = i[1];
          return {
            veCrv: this.formatUnits(n),
            veCrvPct: ai(n).div(ai(a)).times(100).toString(),
            lockedCrv: this.formatUnits(s),
            unlockTime: 1e3 * Number(this.formatUnits(u, 0)),
          };
        });
      }
      function rm(e) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          return yield aM.call(
            this,
            [this.constants.ALIASES.crv],
            [e],
            this.signerAddress,
            this.constants.ALIASES.voting_escrow
          );
        });
      }
      function rr(e) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          return yield aE.call(
            this,
            [this.constants.ALIASES.crv],
            [e],
            this.constants.ALIASES.voting_escrow,
            !1
          );
        });
      }
      function rl(e) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          return yield aC.call(
            this,
            [this.constants.ALIASES.crv],
            [e],
            this.constants.ALIASES.voting_escrow,
            !1
          );
        });
      }
      let rc = (e, t = Date.now()) =>
        6048e5 * Math.floor((Number(t) / 1e3 + 86400 * Number(e)) / 604800);
      function rf(e, t, n) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let a = yield ry.call(this);
          if (aa(a).lt(e)) throw Error(`Not enough CRV. Wallet balance: ${a}, required: ${e}`);
          if (!(yield rm.call(this, e))) throw Error('Token allowance is needed to estimate gas');
          let i = an(e),
            s = Math.floor(Date.now() / 1e3) + 86400 * t,
            u = this.contracts[this.constants.ALIASES.voting_escrow].contract,
            p = yield u.create_lock.estimateGas(i, s, this.constantOptions);
          if (n) return ad(p);
          yield this.updateFeeData();
          let o = ay(am(p));
          return (yield u.create_lock(
            i,
            s,
            Object.assign(Object.assign({}, this.options), { gasLimit: o })
          )).hash;
        });
      }
      function r_(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield rf.call(this, e, Number(t), !0);
        });
      }
      function rb(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield rf.call(this, e, Number(t), !1);
        });
      }
      function rg(e, t) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let n = yield ry.call(this);
          if (aa(n).lt(e)) throw Error(`Not enough CRV. Wallet balance: ${n}, required: ${e}`);
          if (!(yield rm.call(this, e))) throw Error('Token allowance is needed to estimate gas');
          let a = an(e),
            i = this.contracts[this.constants.ALIASES.voting_escrow].contract,
            s = yield i.increase_amount.estimateGas(a, this.constantOptions);
          if (t) return ad(s);
          yield this.updateFeeData();
          let u = ay(am(s));
          return (yield i.increase_amount(
            a,
            Object.assign(Object.assign({}, this.options), { gasLimit: u })
          )).hash;
        });
      }
      function rv(e) {
        return rp(this, void 0, void 0, function* () {
          return yield rg.call(this, e, !0);
        });
      }
      function rw(e) {
        return rp(this, void 0, void 0, function* () {
          return yield rg.call(this, e, !1);
        });
      }
      function rh(e, t) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let { unlockTime: n } = yield rd.call(this),
            a = Math.floor(n / 1e3) + 86400 * e,
            i = this.contracts[this.constants.ALIASES.voting_escrow].contract,
            s = yield i.increase_unlock_time.estimateGas(a, this.constantOptions);
          if (t) return ad(s);
          yield this.updateFeeData();
          let u = ay(am(s));
          return (yield i.increase_unlock_time(
            a,
            Object.assign(Object.assign({}, this.options), { gasLimit: u })
          )).hash;
        });
      }
      function rx(e) {
        return rp(this, void 0, void 0, function* () {
          return yield rh.call(this, Number(e), !0);
        });
      }
      function rM(e) {
        return rp(this, void 0, void 0, function* () {
          return yield rh.call(this, Number(e), !1);
        });
      }
      function rA(e) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let { unlockTime: t } = yield rd.call(this);
          if (t > Date.now()) throw Error("The lock haven't expired yet");
          let n = this.contracts[this.constants.ALIASES.voting_escrow].contract,
            a = yield n.withdraw.estimateGas(this.constantOptions);
          if (e) return ad(a);
          yield this.updateFeeData();
          let i = ay(am(a));
          return (yield n.withdraw(Object.assign(Object.assign({}, this.options), { gasLimit: i })))
            .hash;
        });
      }
      function rE() {
        return rp(this, void 0, void 0, function* () {
          return yield rA.call(this, !0);
        });
      }
      function rC() {
        return rp(this, void 0, void 0, function* () {
          return yield rA.call(this, !1);
        });
      }
      function rk() {
        return rp(this, arguments, void 0, function* (e = '') {
          e = av.call(this, e);
          let t = new A.NZ(this.constants.ALIASES.fee_distributor, dK, this.provider);
          return this.formatUnits(yield t.claim(e, this.constantOptions));
        });
      }
      function rD(e, t) {
        return rp(this, void 0, void 0, function* () {
          e = av.call(this, e);
          let n = this.contracts[this.constants.ALIASES.fee_distributor].contract,
            a = yield n.claim.estimateGas(e, this.constantOptions);
          if (t) return ad(a);
          yield this.updateFeeData();
          let i = ay(am(a));
          return (yield n.claim(e, Object.assign(Object.assign({}, this.options), { gasLimit: i })))
            .hash;
        });
      }
      function rT() {
        return rp(this, arguments, void 0, function* (e = '') {
          return yield rD.call(this, e, !0);
        });
      }
      function rS() {
        return rp(this, arguments, void 0, function* (e = '') {
          return yield rD.call(this, e, !1);
        });
      }
      function rO() {
        return rp(this, void 0, void 0, function* () {
          var e, t;
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let n = Object.values(yield l()),
            a = [];
          for (let i = 0; i < n.length; i++)
            ((n[i].is_killed || n[i].hasNoCrv) &&
              0 === Number(n[i].gauge_controller.gauge_relative_weight)) ||
              a.push({
                poolUrl: (null === (e = n[i].poolUrls) || void 0 === e ? void 0 : e.swap[0]) || '',
                network: n[i].blockchainId,
                gaugeAddress: n[i].gauge,
                poolAddress: n[i].swap || '',
                lpTokenAddress: n[i].swap_token || '',
                poolName: n[i].shortName,
                totalVeCrv: this.formatUnits(n[i].gauge_controller.get_gauge_weight, 18),
                relativeWeight: this.formatUnits(n[i].gauge_controller.gauge_relative_weight, 16),
                isKilled: null !== (t = n[i].is_killed) && void 0 !== t && t,
              });
          return a;
        });
      }
      function rF() {
        return rp(this, arguments, void 0, function* (e = '') {
          var t, n;
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          e = av.call(this, e);
          let a = this.contracts[this.constants.ALIASES.gauge_controller].multicallContract,
            i = this.contracts[this.constants.ALIASES.voting_escrow].multicallContract,
            s = Object.values(yield l()),
            u = [i.balanceOf(e)];
          for (let t of s) {
            let n = t.rootGauge ? t.rootGauge : t.gauge;
            u.push(a.vote_user_slopes(e, n));
          }
          let [p, ...o] = yield this.multicallProvider.all(u),
            y = { gauges: [], powerUsed: '0.0', veCrvUsed: '0.0' },
            d = BigInt(0),
            m = BigInt(0);
          for (let e = 0; e < o.length; e++) {
            if (o[e][1] === BigInt(0)) continue;
            let a = o[e][2] - BigInt(Math.floor(Date.now() / 1e3));
            a < BigInt(0) && (a = BigInt(0)),
              y.gauges.push({
                userPower: this.formatUnits(o[e][1], 2),
                userVeCrv: this.formatUnits(o[e][0] * a, 18),
                userFutureVeCrv: this.formatUnits((p * o[e][1]) / BigInt(1e4), 18),
                expired: a === BigInt(0),
                gaugeData: {
                  poolUrl:
                    (null === (t = s[e].poolUrls) || void 0 === t ? void 0 : t.swap[0]) || '',
                  network: s[e].blockchainId,
                  gaugeAddress: s[e].gauge,
                  poolAddress: s[e].swap || '',
                  lpTokenAddress: s[e].swap_token || '',
                  poolName: s[e].shortName,
                  totalVeCrv: this.formatUnits(s[e].gauge_controller.get_gauge_weight, 18),
                  relativeWeight: this.formatUnits(s[e].gauge_controller.gauge_relative_weight, 16),
                  isKilled: null !== (n = s[e].is_killed) && void 0 !== n && n,
                },
              }),
              (d += o[e][1]),
              (m += o[e][0] * a);
          }
          return (
            (y.powerUsed = this.formatUnits(d, 2)),
            (y.veCrvUsed = this.formatUnits(m.toString(), 18)),
            y
          );
        });
      }
      function rB(e) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          return (
            (Number(
              yield this.contracts[this.constants.ALIASES.gauge_controller].contract.last_user_vote(
                this.signerAddress,
                e,
                this.constantOptions
              )
            ) +
              864e3) *
            1e3
          );
        });
      }
      function rR(e, t, n) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let a = this.contracts[this.constants.ALIASES.gauge_controller].contract,
            i = this.contracts[this.constants.ALIASES.gauge_controller].multicallContract,
            s = an(t, 2),
            [u, p] = yield this.multicallProvider.all([
              i.vote_user_power(this.signerAddress),
              i.vote_user_slopes(this.signerAddress, e),
            ]),
            o = BigInt(1e4) - u;
          if (s > o + p[1])
            throw Error(
              `User have only ${this.formatUnits(o, 2)} % free power. Trying to use ${this.formatUnits(s, 2)}`
            );
          let y = yield rB.call(this, e);
          if (Date.now() < y)
            throw Error(`User can't change vote for this gauge earlier than ${new Date(y)}`);
          let d = yield a.vote_for_gauge_weights.estimateGas(e, s, this.constantOptions);
          if (n) return ad(d);
          yield this.updateFeeData();
          let m = ay(am(d));
          return (yield a.vote_for_gauge_weights(
            e,
            s,
            Object.assign(Object.assign({}, this.options), { gasLimit: m })
          )).hash;
        });
      }
      function rI(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield rR.call(this, e, t, !0);
        });
      }
      function rL(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield rR.call(this, e, t, !1);
        });
      }
      function rN() {
        return rp(this, void 0, void 0, function* () {
          return yield b();
        });
      }
      function rP(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield g(e, t);
        });
      }
      function rq() {
        return rp(this, arguments, void 0, function* (e = '') {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          e = av.call(this, e);
          let t = yield b(),
            n = [];
          for (let a of t)
            'PARAMETER' == a.voteType.toUpperCase()
              ? n.push(
                  this.contracts[
                    this.constants.ALIASES.voting_parameter
                  ].multicallContract.getVoterState(a.voteId, e)
                )
              : n.push(
                  this.contracts[
                    this.constants.ALIASES.voting_ownership
                  ].multicallContract.getVoterState(a.voteId, e)
                );
          let a = (yield this.multicallProvider.all(n)).map(Number),
            i = [],
            s = { 1: 'yes', 2: 'no', 3: 'even' };
          for (let e = 0; e < t.length; e++)
            a[e] > 0 && i.push(Object.assign(Object.assign({}, t[e]), { userVote: s[a[e]] }));
          return i;
        });
      }
      function rj(e, t, n, a) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let i =
              'PARAMETER' === e.toUpperCase()
                ? this.constants.ALIASES.voting_parameter
                : this.constants.ALIASES.voting_ownership,
            s = this.contracts[i].contract,
            u = n ? BigInt(1e18) : BigInt(0),
            p = BigInt(1e18) - u,
            o = yield s.votePct.estimateGas(t, u, p, !0, this.constantOptions);
          if (a) return ad(o);
          yield this.updateFeeData();
          let y = ay(am(o));
          return (yield s.votePct(
            t,
            u,
            p,
            !1,
            Object.assign(Object.assign({}, this.options), { gasLimit: y })
          )).hash;
        });
      }
      function rU(e, t, n) {
        return rp(this, void 0, void 0, function* () {
          return yield rj.call(this, e, t, n, !0);
        });
      }
      function r$(e, t, n) {
        return rp(this, void 0, void 0, function* () {
          return yield rj.call(this, e, t, n, !1);
        });
      }
      function rG(e, t) {
        return rp(this, arguments, void 0, function* (e, t, n = !1) {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let a =
              'PARAMETER' === e.toUpperCase()
                ? this.constants.ALIASES.voting_parameter
                : this.constants.ALIASES.voting_ownership,
            i = this.contracts[a].contract,
            s = yield i.executeVote.estimateGas(t, this.constantOptions);
          if (n) return ad(s);
          yield this.updateFeeData();
          let u = ay(am(s));
          return (yield i.executeVote(
            t,
            Object.assign(Object.assign({}, this.options), { gasLimit: u })
          )).hash;
        });
      }
      function rW(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield rG.call(this, e, t, !0);
        });
      }
      function rY(e, t) {
        return rp(this, void 0, void 0, function* () {
          return yield rG.call(this, e, t, !1);
        });
      }
      function rZ(e, t) {
        return rp(this, void 0, void 0, function* () {
          if (1 !== this.chainId) throw Error('Ethereum-only method');
          let n =
              'PARAMETER' === e.toUpperCase()
                ? this.constants.ALIASES.voting_parameter
                : this.constants.ALIASES.voting_ownership,
            a = this.contracts[n].contract;
          return yield a.canExecute(t, Object.assign({}, this.options));
        });
      }
      var rV = function (e, t, n, a) {
        return new (n || (n = Promise))(function (i, s) {
          function u(e) {
            try {
              o(a.next(e));
            } catch (e) {
              s(e);
            }
          }
          function p(e) {
            try {
              o(a.throw(e));
            } catch (e) {
              s(e);
            }
          }
          function o(e) {
            var t;
            e.done
              ? i(e.value)
              : ((t = e.value) instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })
                ).then(u, p);
          }
          o((a = a.apply(e, t || [])).next());
        });
      };
      let rJ = () => {
          let e = new oO();
          return {
            init: function (...t) {
              return rV(this, void 0, void 0, function* () {
                yield e.init(...t),
                  (this.signerAddress = e.signerAddress),
                  (this.chainId = e.chainId),
                  (this.isNoRPC = e.isNoRPC);
              });
            },
            chainId: 0,
            signerAddress: '',
            setCustomFeeData: e.setCustomFeeData.bind(e),
            getPoolList: e.getPoolList.bind(e),
            getMainPoolList: e.getMainPoolList.bind(e),
            getUserPoolListByLiquidity: oW.bind(e),
            getUserPoolListByClaimable: oK.bind(e),
            getUserPoolList: oX.bind(e),
            getUserLiquidityUSD: oY.bind(e),
            getUserClaimable: oz.bind(e),
            PoolTemplate: o0.bind(e),
            getBasePools: a0.bind(e),
            getPool: dw.bind(e),
            getUsdRate: aO.bind(e),
            getGasPriceFromL1: aR.bind(e),
            getGasPriceFromL2: aI.bind(e),
            getGasInfoForL2: aL.bind(e),
            getGasPrice: aB.bind(e),
            getTVL: aU.bind(e),
            getBalances: aw.bind(e),
            getAllowance: ax.bind(e),
            hasAllowance: aM.bind(e),
            ensureAllowance: aC.bind(e),
            getCoinsData: aV.bind(e),
            getVolume: aG.bind(e),
            hasDepositAndStake: aJ.bind(e),
            hasRouter: aH.bind(e),
            getCurveLiteNetworks: aP.bind(e),
            getNetworkConstants: e.getNetworkConstants.bind(e),
            getIsLiteChain: e.getIsLiteChain.bind(e),
            isNoRPC: e.isNoRPC,
            factory: {
              fetchPools: e.fetchFactoryPools.bind(e),
              fetchNewPools: e.fetchNewFactoryPools.bind(e),
              getPoolList: e.getFactoryPoolList.bind(e),
              deployPlainPool: mF.bind(e),
              setOracle: mq.bind(e),
              deployMetaPool: m$.bind(e),
              deployGauge: (t) =>
                rV(void 0, void 0, void 0, function* () {
                  return m7.call(e, t, e.constants.ALIASES.factory);
                }),
              deployGaugeSidechain: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return rt.call(e, t, n);
                }),
              deployGaugeMirror: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return ra.call(e, t, n);
                }),
              getDeployedPlainPoolAddress: mL.bind(e),
              getDeployedMetaPoolAddress: mZ.bind(e),
              getDeployedGaugeAddress: ri.bind(e),
              getDeployedGaugeMirrorAddress: ru.bind(e),
              getDeployedGaugeMirrorAddressByTx: rs.bind(e),
              fetchRecentlyDeployedPool: e.fetchRecentlyDeployedFactoryPool.bind(e),
              gaugeImplementation: () => e.getGaugeImplementation('factory'),
              estimateGas: {
                deployPlainPool: mO.bind(e),
                setOracle: mP.bind(e),
                deployMetaPool: mU.bind(e),
                deployGauge: (t) =>
                  rV(void 0, void 0, void 0, function* () {
                    return m9.call(e, t, e.constants.ALIASES.factory);
                  }),
                deployGaugeSidechain: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return re.call(e, t, n);
                  }),
                deployGaugeMirror: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return rn.call(e, t, n);
                  }),
              },
            },
            crvUSDFactory: {
              fetchPools: e.fetchCrvusdFactoryPools.bind(e),
              getPoolList: e.getCrvusdFactoryPoolList.bind(e),
            },
            EYWAFactory: {
              fetchPools: e.fetchEywaFactoryPools.bind(e),
              getPoolList: e.getEywaFactoryPoolList.bind(e),
            },
            stableNgFactory: {
              fetchPools: e.fetchStableNgFactoryPools.bind(e),
              fetchNewPools: e.fetchNewStableNgFactoryPools.bind(e),
              getPoolList: e.getStableNgFactoryPoolList.bind(e),
              deployPlainPool: mI.bind(e),
              deployMetaPool: mY.bind(e),
              deployGauge: (t) =>
                rV(void 0, void 0, void 0, function* () {
                  return m7.call(e, t, e.constants.ALIASES.stable_ng_factory);
                }),
              deployGaugeSidechain: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return rt.call(e, t, n);
                }),
              deployGaugeMirror: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return ra.call(e, t, n);
                }),
              getDeployedPlainPoolAddress: mL.bind(e),
              getDeployedMetaPoolAddress: mZ.bind(e),
              getDeployedGaugeAddress: ri.bind(e),
              getDeployedGaugeMirrorAddress: ru.bind(e),
              getDeployedGaugeMirrorAddressByTx: rs.bind(e),
              fetchRecentlyDeployedPool: e.fetchRecentlyDeployedStableNgFactoryPool.bind(e),
              estimateGas: { deployPlainPool: mR.bind(e), deployMetaPool: mW.bind(e) },
            },
            cryptoFactory: {
              fetchPools: e.fetchCryptoFactoryPools.bind(e),
              fetchNewPools: e.fetchNewCryptoFactoryPools.bind(e),
              getPoolList: e.getCryptoFactoryPoolList.bind(e),
              deployPool: mH.bind(e),
              deployGauge: (t) =>
                rV(void 0, void 0, void 0, function* () {
                  return m7.call(e, t, e.constants.ALIASES.crypto_factory);
                }),
              deployGaugeSidechain: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return rt.call(e, t, n);
                }),
              deployGaugeMirror: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return ra.call(e, t, n);
                }),
              getDeployedPoolAddress: mK.bind(e),
              getDeployedGaugeAddress: ri.bind(e),
              getDeployedGaugeMirrorAddress: ru.bind(e),
              getDeployedGaugeMirrorAddressByTx: rs.bind(e),
              fetchRecentlyDeployedPool: e.fetchRecentlyDeployedCryptoFactoryPool.bind(e),
              gaugeImplementation: () => e.getGaugeImplementation('factory-crypto'),
              estimateGas: {
                deployPool: mJ,
                deployGauge: (t) =>
                  rV(void 0, void 0, void 0, function* () {
                    return m9.call(e, t, e.constants.ALIASES.crypto_factory);
                  }),
                deployGaugeSidechain: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return re.call(e, t, n);
                  }),
                deployGaugeMirror: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return rn.call(e, t, n);
                  }),
              },
            },
            twocryptoFactory: {
              fetchPools: e.fetchTworyptoFactoryPools.bind(e),
              fetchNewPools: e.fetchNewTwocryptoFactoryPools.bind(e),
              getPoolList: e.getTworyptoFactoryPoolList.bind(e),
              deployPool: mQ.bind(e),
              deployGauge: (t) =>
                rV(void 0, void 0, void 0, function* () {
                  return m7.call(e, t, e.constants.ALIASES.twocrypto_factory);
                }),
              deployGaugeSidechain: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return rt.call(e, t, n);
                }),
              deployGaugeMirror: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return ra.call(e, t, n);
                }),
              getDeployedPoolAddress: m2.bind(e),
              getDeployedGaugeAddress: ri.bind(e),
              getDeployedGaugeMirrorAddress: ru.bind(e),
              getDeployedGaugeMirrorAddressByTx: rs.bind(e),
              fetchRecentlyDeployedPool: e.fetchRecentlyDeployedTwocryptoFactoryPool.bind(e),
              gaugeImplementation: () => e.getGaugeImplementation('factory-twocrypto'),
              estimateGas: {
                deployPool: mX,
                deployGauge: (t) =>
                  rV(void 0, void 0, void 0, function* () {
                    return m9.call(e, t, e.constants.ALIASES.twocrypto_factory);
                  }),
                deployGaugeSidechain: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return re.call(e, t, n);
                  }),
                deployGaugeMirror: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return rn.call(e, t, n);
                  }),
              },
            },
            tricryptoFactory: {
              fetchPools: e.fetchTricryptoFactoryPools.bind(e),
              fetchNewPools: e.fetchNewTricryptoFactoryPools.bind(e),
              getPoolList: e.getTricryptoFactoryPoolList.bind(e),
              deployPool: m6.bind(e),
              deployGauge: (t) =>
                rV(void 0, void 0, void 0, function* () {
                  return m7.call(e, t, e.constants.ALIASES.tricrypto_factory);
                }),
              deployGaugeSidechain: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return rt.call(e, t, n);
                }),
              deployGaugeMirror: (t, n) =>
                rV(void 0, void 0, void 0, function* () {
                  return ra.call(e, t, n);
                }),
              getDeployedPoolAddress: m1.bind(e),
              getDeployedGaugeAddress: ri.bind(e),
              getDeployedGaugeMirrorAddress: ru.bind(e),
              getDeployedGaugeMirrorAddressByTx: rs.bind(e),
              fetchRecentlyDeployedPool: e.fetchRecentlyDeployedTricryptoFactoryPool.bind(e),
              gaugeImplementation: () => e.getGaugeImplementation('factory-tricrypto'),
              estimateGas: {
                deployPool: m0.bind(e),
                deployGauge: (t) =>
                  rV(void 0, void 0, void 0, function* () {
                    return m9.call(e, t, e.constants.ALIASES.tricrypto_factory);
                  }),
                deployGaugeSidechain: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return re.call(e, t, n);
                  }),
                deployGaugeMirror: (t, n) =>
                  rV(void 0, void 0, void 0, function* () {
                    return rn.call(e, t, n);
                  }),
              },
            },
            estimateGas: { ensureAllowance: aE.bind(e) },
            boosting: {
              getCrv: dQ.bind(e),
              getLockedAmountAndUnlockTime: d2.bind(e),
              getVeCrv: d5.bind(e),
              getVeCrvPct: d0.bind(e),
              calcUnlockTime: d4.bind(e),
              isApproved: d6.bind(e),
              approve: d8.bind(e),
              createLock: d7.bind(e),
              increaseAmount: mt.bind(e),
              increaseUnlockTime: ma.bind(e),
              withdrawLockedCrv: ms.bind(e),
              claimableFees: mu.bind(e),
              claimFees: mo.bind(e),
              claimableFeesCrvUSD: my.bind(e),
              claimFeesCrvUSD: mm.bind(e),
              calculateVeCrv: d9,
              estimateGas: {
                approve: d1.bind(e),
                createLock: d3.bind(e),
                increaseAmount: me.bind(e),
                increaseUnlockTime: mn.bind(e),
                withdrawLockedCrv: mi.bind(e),
                claimFees: mp.bind(e),
                claimFeesCrvUSD: md.bind(e),
              },
              sidechain: {
                lastEthBlock: mr.bind(e),
                getAnycallBalance: ml.bind(e),
                topUpAnycall: mb.bind(e),
                lastBlockSent: mg.bind(e),
                blockToSend: mv.bind(e),
                sendBlockhash: mx.bind(e),
                submitProof: mE.bind(e),
                estimateGas: {
                  topUpAnycall: m_.bind(e),
                  sendBlockhash: mh.bind(e),
                  submitProof: mA.bind(e),
                },
              },
            },
            router: {
              getBestRouteAndOutput: dq.bind(e),
              getArgs: dj.bind(e),
              expected: dU.bind(e),
              required: d$.bind(e),
              priceImpact: dG.bind(e),
              isApproved: dW.bind(e),
              approve: dZ.bind(e),
              swap: dJ.bind(e),
              getSwappedAmount: dH.bind(e),
              estimateGas: { approve: dY.bind(e), swap: dV.bind(e) },
            },
            dao: {
              crvSupplyStats: ro.bind(e),
              userCrv: ry.bind(e),
              userVeCrv: rd.bind(e),
              crvLockIsApproved: rm.bind(e),
              calcCrvUnlockTime: rc.bind(e),
              claimableFees: rk.bind(e),
              crvLockApprove: rl.bind(e),
              createCrvLock: rb.bind(e),
              increaseCrvLockedAmount: rw.bind(e),
              increaseCrvUnlockTime: rM.bind(e),
              withdrawLockedCrv: rC.bind(e),
              claimFees: rS.bind(e),
              getVotingGaugeList: rO.bind(e),
              userGaugeVotes: rF.bind(e),
              voteForGaugeNextTime: rB.bind(e),
              voteForGauge: rL.bind(e),
              getProposalList: rN.bind(e),
              getProposal: rP.bind(e),
              userProposalVotes: rq.bind(e),
              voteForProposal: r$.bind(e),
              executeVote: rY.bind(e),
              isCanVoteExecute: rZ.bind(e),
              estimateGas: {
                crvLockApprove: rr.bind(e),
                createCrvLock: r_.bind(e),
                increaseCrvLockedAmount: rv.bind(e),
                increaseCrvUnlockTime: rx.bind(e),
                withdrawLockedCrv: rE.bind(e),
                claimFees: rT.bind(e),
                voteForGauge: rI.bind(e),
                voteForProposal: rU.bind(e),
                executeVote: rW.bind(e),
              },
            },
          };
        },
        rH = rJ();
    },
  },
]);
